{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:e3fe2efec582", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "sleep", "qualified_name": "sleep", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [1, 1], "text": "from time import sleep", "hash": "e3fe2efec582", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 22, "original_size_bytes": 22, "start_byte": 0, "end_byte": 22}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:0b30f9018a01", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "QtWidgets", "qualified_name": "QtWidgets", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [2, 2], "text": "from PyQt5 import QtWidgets", "hash": "0b30f9018a01", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 27, "original_size_bytes": 27, "start_byte": 23, "end_byte": 50}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:077df9733326", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "QApplication", "qualified_name": "QApplication", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [3, 3], "text": "from PyQt5.QtWidgets import QApplication, QLCDNumber", "hash": "077df9733326", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 52, "original_size_bytes": 52, "start_byte": 51, "end_byte": 103}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:980c34bd8115", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "QPixmap", "qualified_name": "QPixmap", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [4, 4], "text": "from PyQt5.QtGui import QPixmap", "hash": "980c34bd8115", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 31, "original_size_bytes": 31, "start_byte": 104, "end_byte": 135}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:2dda248f7f1c", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "ApplicationWindow", "qualified_name": "ApplicationWindow", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [5, 5], "text": "from frontend import ApplicationWindow", "hash": "2dda248f7f1c", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 38, "original_size_bytes": 38, "start_byte": 136, "end_byte": 174}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:68ef53677e83", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "sampletray", "qualified_name": "sampletray", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [6, 6], "text": "from backend import sampletray, joystickThread, autoThread", "hash": "68ef53677e83", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 58, "original_size_bytes": 58, "start_byte": 175, "end_byte": 233}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:f1e1a6bdbc5c", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "Robot", "qualified_name": "Robot", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [7, 7], "text": "from mecademicpy.robot import Robot", "hash": "f1e1a6bdbc5c", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 35, "original_size_bytes": 35, "start_byte": 234, "end_byte": 269}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:83d8e9e427df", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "sys", "qualified_name": "sys", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [8, 8], "text": "import sys", "hash": "83d8e9e427df", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 10, "original_size_bytes": 10, "start_byte": 270, "end_byte": 280}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:89ed1aae8d33", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "os", "qualified_name": "os", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [9, 9], "text": "import os", "hash": "89ed1aae8d33", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 9, "original_size_bytes": 9, "start_byte": 281, "end_byte": 290}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:2dd7573961af", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "randint", "qualified_name": "randint", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [10, 10], "text": "from random import randint", "hash": "2dd7573961af", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 26, "original_size_bytes": 26, "start_byte": 291, "end_byte": 317}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:518b212d6bfc", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "Application", "qualified_name": "Application", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [12, 182], "text": "class Application(QtWidgets.QMainWindow, ApplicationWindow.Ui_ApplicationWindow):\n    def __init__(self, *args, **kwargs):\n        QtWidgets.QMainWindow.__init__(self, *args, **kwargs)\n        self.setupUi(self)\n        self.showMaximized()\n        self.buttonRetSample.setEnabled(False)\n        self.labelJoystick.setStyleSheet(\"background-color: gray\")\n        current_dir = os.path.dirname(os.path.realpath(__file__))", "hash": "518b212d6bfc", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 420, "original_size_bytes": 455, "start_byte": 319, "end_byte": 7062}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:d9c109eff4cf", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "Application.__init__", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [13, 61], "text": "def __init__(self, *args, **kwargs):\n        QtWidgets.QMainWindow.__init__(self, *args, **kwargs)\n        self.setupUi(self)\n        self.showMaximized()\n        self.buttonRetSample.setEnabled(False)\n        self.labelJoystick.setStyleSheet(\"background-color: gray\")\n        current_dir = os.path.dirname(os.path.realpath(__file__))\n        parent_dir = os.path.abspath(os.path.join(current_dir, os.pardir))\n        pixmap_logo = QPixmap(os.path.join(parent_dir, 'frontend/images/logoM.png'))\n        pixmap_logo = pixmap_logo.scaledToWidth(281)\n        self.labelLogo.setPixmap(pixmap_logo)\n        self.lcdNumberX.setSegmentStyle(QLCDNumber.Flat)\n        self.lcdNumberX.setStyleSheet('background: white; color: black')\n        self.lcdNumberY.setSegmentStyle(QLCDNumber.Flat)\n        self.lcdNumberY.setStyleSheet('background: white; color: black')\n        self.joystick_status = False\n        self.sampleTray = sampletray.SampleTray()\n        self.rack_position = [-32.25, -262.478, 87.574, 0, 0, 0]\n        self.currentSampleIndex = None\n        self.currentSamplePosition = None\n        self.robot = Robot()\n        self.robot.Connect()\n        self.robot.ActivateAndHome()\n        self.robot.WaitHomed()\n        self.robot.GripperOpen()\n        self.robot.SetTRF(37,0,14,0,0,0)\n        self.robot.SetJointVel(20)\n        self.robot.SetCartLinVel(15)\n        self.robot.SetGripperForce(20)\n        self.robot.SetGripperVel(20)\n        self.joystickThread = None\n        self.autoThread = None\n        self.autoFlag = True\n        self.comboCameraSelect.currentIndexChanged.connect(self.change_camera)\n        self.buttonPickSample.clicked.connect(self.pick_random_sample)\n        self.buttonRetSample.clicked.connect(self.place_back_sample)\n        self.autoButton.clicked.connect(self._toggle_auto_mode)", "hash": "d9c109eff4cf", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self, *args, **kwargs)", "docstring": null, "chunk_size_bytes": 1812, "original_size_bytes": 1938, "start_byte": 405, "end_byte": 2343}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:c929d26b1504", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "toggle_joystick", "qualified_name": "Application.toggle_joystick", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [63, 71], "text": "def toggle_joystick(self):\n        self.joystick_status = True if not self.joystick_status else False\n        if self.joystick_status:\n            self.labelJoystick.setStyleSheet(\"background-color: green\")\n            self.labelJoystick.setText(\"Joystick Active\")\n        else:\n            self.labelJoystick.setStyleSheet(\"background-color: gray\")\n            self.labelJoystick.setText(\"Joystick not Active\")", "hash": "c929d26b1504", "chunk_type": "method", "node_type": "function_definition", "signature": "toggle_joystick(self)", "docstring": null, "chunk_size_bytes": 411, "original_size_bytes": 412, "start_byte": 2349, "end_byte": 2761}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:1b66100bc7e7", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "change_camera", "qualified_name": "Application.change_camera", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [73, 78], "text": "def change_camera(self):\n        camera_index = self.comboCameraSelect.currentIndex()\n        if self.videoPlayer.cameraIndex == camera_index:\n            return\n        else:\n            self.videoPlayer.change_capture(camera_index)", "hash": "1b66100bc7e7", "chunk_type": "method", "node_type": "function_definition", "signature": "change_camera(self)", "docstring": null, "chunk_size_bytes": 233, "original_size_bytes": 233, "start_byte": 2767, "end_byte": 3000}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:5b228dc617cc", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "pick_random_sample", "qualified_name": "Application.pick_random_sample", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [80, 96], "text": "def pick_random_sample(self):\n        if self.currentSampleIndex is not None:\n            return\n        else:\n            self.buttonPickSample.setEnabled(False)\n            self.autoButton.setEnabled(False)\n            self.currentSampleIndex = randint(0, 24)\n            self._move_to_rack()\n            self.robot.SetWRF(*self.rack_position)\n            self._pick_action(self.sampleTray.positions_wrf[self.currentSampleIndex])\n            self.robot.SetWRF(0,0,0,0,0,0)\n            self._move_from_rack()\n            self._move_to_micro()\n            self.toggle_joystick()\n            self.buttonRetSample.setEnabled(True)\n            self.joystickThread = joystickThread.JoystickThread(self.robot, [self.lcdNumberX, self.lcdNumberY])\n            self.joystickThread.start()", "hash": "5b228dc617cc", "chunk_type": "method", "node_type": "function_definition", "signature": "pick_random_sample(self)", "docstring": null, "chunk_size_bytes": 780, "original_size_bytes": 780, "start_byte": 3006, "end_byte": 3786}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:f89f1bcdf408", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "place_back_sample", "qualified_name": "Application.place_back_sample", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [98, 113], "text": "def place_back_sample(self):\n        if self.currentSampleIndex is None:\n            return\n        else:\n            self.buttonRetSample.setEnabled(False)\n            self.toggle_joystick()\n            self._move_from_micro()\n            self._move_to_rack()\n            self.robot.SetWRF(*self.rack_position)\n            self._place_action()\n            self.robot.SetWRF(0,0,0,0,0,0)\n            self._move_from_rack()\n            self.autoButton.setEnabled(True)\n            self.buttonPickSample.setEnabled(True)\n            self.currentSampleIndex = None\n            self.joystickThread.stop_running()", "hash": "f89f1bcdf408", "chunk_type": "method", "node_type": "function_definition", "signature": "place_back_sample(self)", "docstring": null, "chunk_size_bytes": 608, "original_size_bytes": 608, "start_byte": 3792, "end_byte": 4400}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:b4900f22f2f6", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "_pick_action", "qualified_name": "Application._pick_action", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [115, 124], "text": "def _pick_action(self, position):\n        self.robot.MovePose(*position)\n        self.robot.MoveLinRelTRF(9,0,0,0,0,0)\n        self.robot.GripperClose()\n        self.robot.Delay(0.5)\n        self.robot.MoveLinRelTRF(-30,0,0,0,0,0)\n        self.robot.MoveLinRelTRF(0,0,-30,0,0,0)\n        cp5 = self.robot.SetCheckpoint(5)\n        cp5.wait()\n        self.currentSamplePosition = self.robot.GetPose()", "hash": "b4900f22f2f6", "chunk_type": "method", "node_type": "function_definition", "signature": "_pick_action(self, position)", "docstring": null, "chunk_size_bytes": 397, "original_size_bytes": 397, "start_byte": 4410, "end_byte": 4807}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:3db822212bee", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "_place_action", "qualified_name": "Application._place_action", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [126, 134], "text": "def _place_action(self):\n        self.robot.MovePose(*self.currentSamplePosition)\n        self.robot.MoveLinRelTRF(0,0,30,0,0,0)\n        self.robot.MoveLinRelTRF(25,0,0,0,0,0)\n        self.robot.GripperOpen()\n        self.robot.Delay(0.5)\n        self.robot.MoveLinRelTRF(-10,0,0,0,0,0)\n        cp3 = self.robot.SetCheckpoint(3)\n        cp3.wait()", "hash": "3db822212bee", "chunk_type": "method", "node_type": "function_definition", "signature": "_place_action(self)", "docstring": null, "chunk_size_bytes": 347, "original_size_bytes": 347, "start_byte": 4813, "end_byte": 5160}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:cc1babda3dd1", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "_move_to_micro", "qualified_name": "Application._move_to_micro", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [136, 143], "text": "def _move_to_micro(self):\n        self.robot.MovePose(34.25, -232.218, 197.534, 90, 0, 0)\n        self.robot.MovePose(34.25, -210.168, 63.534, 90, 0, 0)\n        self.robot.MovePose(34.25, -205.518, 39.334, 90, 0, 0)\n        self.robot.MoveLin(121.8, -205.518, 39.334, 90, 0, 0)\n        self.robot.MoveLin(121.8, -205.518, 42.199, 90, 0, 0)\n        cp2 = self.robot.SetCheckpoint(2)\n        cp2.wait()", "hash": "cc1babda3dd1", "chunk_type": "method", "node_type": "function_definition", "signature": "_move_to_micro(self)", "docstring": null, "chunk_size_bytes": 400, "original_size_bytes": 400, "start_byte": 5166, "end_byte": 5566}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:0114301f7214", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "_move_from_micro", "qualified_name": "Application._move_from_micro", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [145, 151], "text": "def _move_from_micro(self):\n        self.robot.MoveLin(121.8, -205.518, 39.334, 90, 0, 0)\n        self.robot.MoveLin(34.25, -205.518, 39.334, 90, 0, 0)\n        self.robot.MovePose(34.25, -210.168, 63.534, 90, 0, 0)\n        self.robot.MovePose(34.25, -232.218, 197.534, 90, 0, 0)\n        cp6 = self.robot.SetCheckpoint(6)\n        cp6.wait()", "hash": "0114301f7214", "chunk_type": "method", "node_type": "function_definition", "signature": "_move_from_micro(self)", "docstring": null, "chunk_size_bytes": 339, "original_size_bytes": 339, "start_byte": 5576, "end_byte": 5915}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:1f36fd39dd9c", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "_move_to_rack", "qualified_name": "Application._move_to_rack", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [154, 158], "text": "def _move_to_rack(self):\n        self.robot.MoveJoints(-90, 10, 0, 0, -10, 0)\n        self.robot.MoveJoints(-90, -1.431, 68.895, 0, -67.465, 0)\n        cp1 = self.robot.SetCheckpoint(1)\n        cp1.wait()", "hash": "1f36fd39dd9c", "chunk_type": "method", "node_type": "function_definition", "signature": "_move_to_rack(self)", "docstring": null, "chunk_size_bytes": 204, "original_size_bytes": 204, "start_byte": 5922, "end_byte": 6126}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:dae33725866a", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "_move_from_rack", "qualified_name": "Application._move_from_rack", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [160, 164], "text": "def _move_from_rack(self):\n        self.robot.MoveJoints(-90, -1.431, 68.895, 0, -67.465, 0)\n        self.robot.MoveJoints(-90, 10, 0, 0, -10, -6)\n        cp4 = self.robot.SetCheckpoint(4)\n        cp4.wait()", "hash": "dae33725866a", "chunk_type": "method", "node_type": "function_definition", "signature": "_move_from_rack(self)", "docstring": null, "chunk_size_bytes": 207, "original_size_bytes": 207, "start_byte": 6136, "end_byte": 6343}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:319c32bf6c28", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "_toggle_auto_mode", "qualified_name": "Application._toggle_auto_mode", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [166, 179], "text": "def _toggle_auto_mode(self):\n        if self.autoButton.isChecked():\n            self.autoFlag = True\n            self.buttonPickSample.setEnabled(False)\n            self.buttonRetSample.setEnabled(False)\n            self.autoThread = autoThread.AutoThread(self.robot, self.sampleTray, self.rack_position)\n            self.autoThread.finished.connect(self.wait_finished)\n            self.autoThread.start()\n        else:\n            self.autoThread.toggle_off()\n            cp_ext = self.robot.ExpectExternalCheckpoint(42)\n            cp_ext.wait()\n            self.buttonPickSample.setEnabled(True)\n            self.buttonRetSample.setEnabled(True)", "hash": "319c32bf6c28", "chunk_type": "method", "node_type": "function_definition", "signature": "_toggle_auto_mode(self)", "docstring": null, "chunk_size_bytes": 649, "original_size_bytes": 649, "start_byte": 6349, "end_byte": 6998}
{"chunk_id": "meca_samples:Demo_Microscope/Application/mainApp.py:007923d98401", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "wait_finished", "qualified_name": "Application.wait_finished", "source_path": "Demo_Microscope/Application/mainApp.py", "loc": [181, 182], "text": "def wait_finished(self):\n        self.autoFlag = False", "hash": "007923d98401", "chunk_type": "method", "node_type": "function_definition", "signature": "wait_finished(self)", "docstring": null, "chunk_size_bytes": 54, "original_size_bytes": 54, "start_byte": 7008, "end_byte": 7062}
