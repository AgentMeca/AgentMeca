{"chunk_id": "meca_samples:Demo_Microscope/backend/joystickThread.py:52e48de42cba", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "pyqtSignal", "qualified_name": "pyqtSignal", "source_path": "Demo_Microscope/backend/joystickThread.py", "loc": [1, 1], "text": "from PyQt5.QtCore import pyqtSignal, pyqtSlot, Qt, QThread", "hash": "52e48de42cba", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 58, "original_size_bytes": 58, "start_byte": 0, "end_byte": 58}
{"chunk_id": "meca_samples:Demo_Microscope/backend/joystickThread.py:a95b21d098c8", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "joystick", "qualified_name": "joystick", "source_path": "Demo_Microscope/backend/joystickThread.py", "loc": [2, 2], "text": "from . import joystick", "hash": "a95b21d098c8", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 22, "original_size_bytes": 22, "start_byte": 59, "end_byte": 81}
{"chunk_id": "meca_samples:Demo_Microscope/backend/joystickThread.py:e3fe2efec582", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "sleep", "qualified_name": "sleep", "source_path": "Demo_Microscope/backend/joystickThread.py", "loc": [3, 3], "text": "from time import sleep", "hash": "e3fe2efec582", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 22, "original_size_bytes": 22, "start_byte": 82, "end_byte": 104}
{"chunk_id": "meca_samples:Demo_Microscope/backend/joystickThread.py:f3bbcf8776cd", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "JoystickThread", "qualified_name": "JoystickThread", "source_path": "Demo_Microscope/backend/joystickThread.py", "loc": [7, 54], "text": "class JoystickThread(QThread):\n    def __init__(self, robot, lcd_list, *args, **kwargs) -> None:\n        super().__init__(*args, **kwargs)\n        self.robot = robot\n        self.robotInitPos = self.robot.GetPose()\n        self.runFlag = True\n        self.joystick = joystick.MecaJoy()\n        self.maxOffset = (5,5)\n        self.lcdList = lcd_list\n    def run(self) -> None:", "hash": "f3bbcf8776cd", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 375, "original_size_bytes": 376, "start_byte": 108, "end_byte": 1982}
{"chunk_id": "meca_samples:Demo_Microscope/backend/joystickThread.py:f6ed45800da2", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "JoystickThread.__init__", "source_path": "Demo_Microscope/backend/joystickThread.py", "loc": [8, 15], "text": "def __init__(self, robot, lcd_list, *args, **kwargs) -> None:\n        super().__init__(*args, **kwargs)\n        self.robot = robot\n        self.robotInitPos = self.robot.GetPose()\n        self.runFlag = True\n        self.joystick = joystick.MecaJoy()\n        self.maxOffset = (5,5)\n        self.lcdList = lcd_list", "hash": "f6ed45800da2", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self, robot, lcd_list, *args, **kwargs)", "docstring": null, "chunk_size_bytes": 313, "original_size_bytes": 313, "start_byte": 143, "end_byte": 456}
{"chunk_id": "meca_samples:Demo_Microscope/backend/joystickThread.py:854fedcf40a8", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "run", "qualified_name": "JoystickThread.run", "source_path": "Demo_Microscope/backend/joystickThread.py", "loc": [17, 51], "text": "def run(self) -> None:\n        commandToSend = [0,0,0,0,0,0]\n        while self.runFlag:\n            joyData = self.joystick.getinfo()\n            joyData[1] = -joyData[1]\n            robotPose = self.robot.GetPose()\n            poseOffset = [x1 - x2 for (x1, x2) in zip(robotPose, self.robotInitPos)]\n            self.lcdList[0].display(poseOffset[0])\n            self.lcdList[1].display(poseOffset[1])\n            for i in range(2):\n                if joyData[i] == 0:\n                    commandToSend[i] = joyData[i]\n                elif joyData[i] > 0:\n                    if poseOffset[i] <= 0:\n                        commandToSend[i] = joyData[i]\n                    elif poseOffset[i] > 0:\n                        if abs(poseOffset[i]) > self.maxOffset[i]:\n                            commandToSend[i] = 0\n                        else:\n                            commandToSend[i] = joyData[i]\n                elif joyData[i] < 0:\n                    if poseOffset[i] >= 0:\n                        commandToSend[i] = joyData[i]\n                    elif poseOffset[i] < 0:\n                        if abs(poseOffset[i]) > self.maxOffset[i]:\n                            commandToSend[i] = 0\n                        else:\n                            commandToSend[i] = joyData[i]\n            self.robot.MoveLinVelWRF(*commandToSend)\n            sleep(0.01)\n        self.lcdList[0].display(0)\n        self.lcdList[1].display(0)", "hash": "854fedcf40a8", "chunk_type": "method", "node_type": "function_definition", "signature": "run(self)", "docstring": null, "chunk_size_bytes": 1431, "original_size_bytes": 1462, "start_byte": 462, "end_byte": 1924}
{"chunk_id": "meca_samples:Demo_Microscope/backend/joystickThread.py:ef0b9f7275a4", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "stop_running", "qualified_name": "JoystickThread.stop_running", "source_path": "Demo_Microscope/backend/joystickThread.py", "loc": [53, 54], "text": "def stop_running(self):\n        self.runFlag = False", "hash": "ef0b9f7275a4", "chunk_type": "method", "node_type": "function_definition", "signature": "stop_running(self)", "docstring": null, "chunk_size_bytes": 52, "original_size_bytes": 52, "start_byte": 1930, "end_byte": 1982}
