{"chunk_id": "meca_samples:MecaDashboard/src/components/StatusBar/StatusBar.js:f68a9b10f57e", "repo": "meca_samples", "commit": "806f144", "lang": "javascript", "symbol": "unknown", "qualified_name": "unknown", "source_path": "MecaDashboard/src/components/StatusBar/StatusBar.js", "loc": [1, 1], "text": "import React, { useState, useEffect, useRef } from 'react'", "hash": "f68a9b10f57e", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 58, "original_size_bytes": 58, "start_byte": 0, "end_byte": 58}
{"chunk_id": "meca_samples:MecaDashboard/src/components/StatusBar/StatusBar.js:c9890c5bb94a", "repo": "meca_samples", "commit": "806f144", "lang": "javascript", "symbol": "unknown", "qualified_name": "unknown", "source_path": "MecaDashboard/src/components/StatusBar/StatusBar.js", "loc": [2, 2], "text": "import StatusLed from './StatusLed/StatusLed'", "hash": "c9890c5bb94a", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 45, "original_size_bytes": 45, "start_byte": 59, "end_byte": 104}
{"chunk_id": "meca_samples:MecaDashboard/src/components/StatusBar/StatusBar.js:03ce318619ca", "repo": "meca_samples", "commit": "806f144", "lang": "javascript", "symbol": "unknown", "qualified_name": "unknown", "source_path": "MecaDashboard/src/components/StatusBar/StatusBar.js", "loc": [3, 3], "text": "import styles from './StatusBar.module.css'", "hash": "03ce318619ca", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 43, "original_size_bytes": 43, "start_byte": 105, "end_byte": 148}
{"chunk_id": "meca_samples:MecaDashboard/src/components/StatusBar/StatusBar.js:5188c46b1996", "repo": "meca_samples", "commit": "806f144", "lang": "javascript", "symbol": "unknown", "qualified_name": "unknown", "source_path": "MecaDashboard/src/components/StatusBar/StatusBar.js", "loc": [5, 42], "text": "export default function StatusBar(props) {\n    const [robotState, setRobotState] = useState({\n        \"Connection\": false,\n        \"Activated\": false,\n        \"Homed\": false,\n        \"Error\": false,\n    })\n    const isMounted = useRef(false)\n    useEffect(() => {\n        if (isMounted.current) {\n            setRobotState({\n                ...robotState,\n                \"Connection\": !robotState[\"Connection\"]\n            })\n        } else {\n            isMounted.current = true\n        }\n    }, [props.buttonState])\n    var connectioncolor = robotState.Connection ? 'ledgreen' : 'ledgrey'\n    return (\n        <div className={styles.StatusBar}>\n            <div>\n                <div className={styles.labels}><span className={styles.label}>Connection</span><StatusLed bgcolor={props.robotState.Connection ? 'ledgreen' : 'ledgrey'} /></div>\n                <div className={styles.labels}><span className={styles.label}>Activated</span><StatusLed bgcolor={props.robotState.Activated ? 'ledgreen' : 'ledgrey'} /></div>\n            </div>\n            <div>\n                <div className={styles.labels}><span className={styles.label}>Homed</span><StatusLed bgcolor={props.robotState.Homed ? 'ledgreen' : 'ledgrey'} /></div>\n                <div className={styles.labels}><span className={styles.label}>Error</span><StatusLed bgcolor={props.robotState.Error ? 'ledred' : 'ledgrey'} /></div>\n            </div>\n        </div>\n    )\n}", "hash": "5188c46b1996", "chunk_type": "other", "node_type": "export_statement", "signature": null, "docstring": null, "chunk_size_bytes": 1432, "original_size_bytes": 1438, "start_byte": 150, "end_byte": 1588}
