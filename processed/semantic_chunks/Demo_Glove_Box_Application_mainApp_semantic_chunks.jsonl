{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:0b30f9018a01", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "QtWidgets", "qualified_name": "QtWidgets", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [1, 1], "text": "from PyQt5 import QtWidgets", "hash": "0b30f9018a01", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 27, "original_size_bytes": 27, "start_byte": 0, "end_byte": 27}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:dfaec7006a5e", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "QCoreApplication", "qualified_name": "QCoreApplication", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [2, 2], "text": "from PyQt5.QtCore import QCoreApplication, QObject, QThread, pyqtSignal", "hash": "dfaec7006a5e", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 71, "original_size_bytes": 71, "start_byte": 28, "end_byte": 99}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:980c34bd8115", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "QPixmap", "qualified_name": "QPixmap", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [3, 3], "text": "from PyQt5.QtGui import QPixmap", "hash": "980c34bd8115", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 31, "original_size_bytes": 31, "start_byte": 100, "end_byte": 131}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:d857933a1151", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "MainRack", "qualified_name": "MainRack", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [4, 4], "text": "from backend.backend import MainRack, Centrifuge", "hash": "d857933a1151", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 48, "original_size_bytes": 48, "start_byte": 132, "end_byte": 180}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:3309d6569e20", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "customWidgets", "qualified_name": "customWidgets", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [5, 5], "text": "from frontend import customWidgets, MainWindow, SetupWindow, ProgressWindow", "hash": "3309d6569e20", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 75, "original_size_bytes": 75, "start_byte": 181, "end_byte": 256}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:9c293db99b04", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "CommunicationError", "qualified_name": "CommunicationError", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [6, 6], "text": "from mecademicpy.robot import CommunicationError, Robot", "hash": "9c293db99b04", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 55, "original_size_bytes": 55, "start_byte": 257, "end_byte": 312}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:89ed1aae8d33", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "os", "qualified_name": "os", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [7, 7], "text": "import os", "hash": "89ed1aae8d33", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 9, "original_size_bytes": 9, "start_byte": 313, "end_byte": 322}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:c307405b3f5d", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "re", "qualified_name": "re", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [8, 8], "text": "import re", "hash": "c307405b3f5d", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 9, "original_size_bytes": 9, "start_byte": 323, "end_byte": 332}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:bcab709e15be", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "numpy as np", "qualified_name": "numpy as np", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [9, 9], "text": "import numpy as np", "hash": "bcab709e15be", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 18, "original_size_bytes": 18, "start_byte": 333, "end_byte": 351}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:e3fe2efec582", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "sleep", "qualified_name": "sleep", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [10, 10], "text": "from time import sleep", "hash": "e3fe2efec582", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 22, "original_size_bytes": 22, "start_byte": 352, "end_byte": 374}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:2b79c2c4eef8", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "SetupWindow", "qualified_name": "SetupWindow", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [12, 128], "text": "class SetupWindow(QtWidgets.QMainWindow, SetupWindow.Ui_MainWindow):\n    def __init__(self, rack, centrifuge, *args, **kwargs):\n        self.rack = rack\n        self.centrifuge = centrifuge\n        QtWidgets.QMainWindow.__init__(self, *args, **kwargs)\n        self.setupUi(self)\n        self.pushButton.clicked.connect(self.save_position)\n        self.defaul_pick = [[57.7950,186.1550,80.7050,-0.0000,-0.0000,-90.0000],\n                            [25.9600,186.1550,80.7050,-0.0000,0.0000,-90.0000], \n                            [-6.2800,186.1550,80.7050,-0.0000,0.0000,-90.0000], ", "hash": "2b79c2c4eef8", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 581, "original_size_bytes": 582, "start_byte": 376, "end_byte": 5795}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:b5c5feb23734", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "SetupWindow.__init__", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [13, 33], "text": "def __init__(self, rack, centrifuge, *args, **kwargs):\n        self.rack = rack\n        self.centrifuge = centrifuge\n        QtWidgets.QMainWindow.__init__(self, *args, **kwargs)\n        self.setupUi(self)\n        self.pushButton.clicked.connect(self.save_position)\n        self.defaul_pick = [[57.7950,186.1550,80.7050,-0.0000,-0.0000,-90.0000],\n                            [25.9600,186.1550,80.7050,-0.0000,0.0000,-90.0000], \n                            [-6.2800,186.1550,80.7050,-0.0000,0.0000,-90.0000], \n                            [58.4135,236.8031,81.7342,0.0000,-0.1620,90.0000], \n                            [26.9986,238.5881,81.6454,-0.0000,-0.1620,90.0000], \n                            [-4.9963,237.1381,81.5549,-0.0000,-0.1620,90.0000]]\n        self.defaul_place = [[256.7045,21.9299,87.1742,46.7246,-20.3339,71.8831],\n                            [278.0817,-13.5350,87.2791,0.0000,-50.0000,0.0000],\n                            [258.6920,-48.0219,86.2246,-44.8992,-24.8455,-67.5270],\n                            [217.0611,-48.6621,84.6120,-44.2944,22.9473,66.5995],\n                            [196.4375,-14.0050,84.0717,-1.0921,49.9949,0.8365],\n                            [217.4994,22.6281,84.6470,45.5804,23.3668,-67.3643]]\n        self.pushButtonAllPosition.clicked.connect(self._save_defaults)", "hash": "b5c5feb23734", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self, rack, centrifuge, *args, **kwargs)", "docstring": null, "chunk_size_bytes": 1310, "original_size_bytes": 1312, "start_byte": 449, "end_byte": 1761}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:81c324b5dc4a", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "save_position", "qualified_name": "SetupWindow.save_position", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [36, 109], "text": "def save_position(self):\n        if self.cent_pos_1.text():\n            pos = self._text_to_list(self.cent_pos_1.text())\n            self.centrifuge.update_position(0, pos)\n            pick_dir = self.pick_dir_1.currentText()\n            print(pick_dir)\n            self.rack.rack_pick_dir[0] = True if pick_dir == 'Regular' else False\n        if self.cent_pos_2.text():\n            pos = self._text_to_list(self.cent_pos_2.text())\n            self.centrifuge.update_position(1, pos)\n            pick_dir = self.pick_dir_2.currentText()\n            print(pick_dir)\n            self.rack.rack_pick_dir[1] = True if pick_dir == 'Regular' else False\n        if self.cent_pos_3.text():\n            pos = self._text_to_list(self.cent_pos_3.text())\n            self.centrifuge.update_position(2, pos)\n            pick_dir = self.pick_dir_3.currentText()\n            self.rack.rack_pick_dir[2] = True if pick_dir == 'Regular' else False\n        if self.cent_pos_4.text():\n            pos = self._text_to_list(self.cent_pos_4.text())\n            self.centrifuge.update_position(3, pos)\n            pick_dir = self.pick_dir_4.currentText()\n            self.rack.rack_pick_dir[3] = True if pick_dir == 'Regular' else False\n        if self.cent_pos_5.text():\n            pos = self._text_to_list(self.cent_pos_5.text())\n            self.centrifuge.update_position(4, pos)\n            pick_dir = self.pick_dir_5.currentText()\n            self.rack.rack_pick_dir[4] = True if pick_dir == 'Regular' else False\n        if self.cent_pos_6.text():\n            pos = self._text_to_list(self.cent_pos_6.text())\n            self.centrifuge.update_position(5, pos)\n            pick_dir = self.pick_dir_6.currentText()\n            self.rack.rack_pick_dir[5] = True if pick_dir == 'Regular' else False\n        if self.rack_pos_1.text():\n            pos = self._text_to_list(self.rack_pos_1.text())\n            self.rack.update_position(0, pos)\n            pick_dir = self.pick_dir_1.currentText()\n            self.rack.rack_pick_dir[0] = True if pick_dir == 'Regular' else False\n        if self.rack_pos_2.text():\n            pos = self._text_to_list(self.rack_pos_2.text())\n            self.rack.update_position(1, pos)\n            pick_dir = self.pick_dir_2.currentText()\n            self.rack.rack_pick_dir[1] = True if pick_dir == 'Regular' else False\n        if self.rack_pos_3.text():\n            pos = self._text_to_list(self.rack_pos_3.text())\n            self.rack.update_position(2, pos)\n            pick_dir = self.pick_dir_3.currentText()\n            self.rack.rack_pick_dir[2] = True if pick_dir == 'Regular' else False\n        if self.rack_pos_4.text():\n            pos = self._text_to_list(self.rack_pos_4.text())\n            self.rack.update_position(3, pos)\n            pick_dir = self.pick_dir_4.currentText()\n            self.rack.rack_pick_dir[3] = True if pick_dir == 'Regular' else False\n        if self.rack_pos_5.text():\n            pos = self._text_to_list(self.rack_pos_5.text())\n            self.rack.update_position(4, pos)\n            pick_dir = self.pick_dir_5.currentText()\n            self.rack.rack_pick_dir[4] = True if pick_dir == 'Regular' else False\n        if self.rack_pos_6.text():\n            pos = self._text_to_list(self.rack_pos_6.text())\n            self.rack.update_position(5, pos)\n            pick_dir = self.pick_dir_6.currentText()\n            self.rack.rack_pick_dir[5] = True if pick_dir == 'Regular' else False", "hash": "81c324b5dc4a", "chunk_type": "method", "node_type": "function_definition", "signature": "save_position(self)", "docstring": null, "chunk_size_bytes": 3440, "original_size_bytes": 3463, "start_byte": 1768, "end_byte": 5231}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:83f53991eb39", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "_save_defaults", "qualified_name": "SetupWindow._save_defaults", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [112, 121], "text": "def _save_defaults(self):\n        for i, pos in enumerate(self.defaul_pick):\n            self.rack.update_position(i, pos)\n        for i, pos in enumerate(self.defaul_place):\n            self.centrifuge.update_position(i, pos)\n        self.rack.rack_pick_dir[0] = False\n        self.rack.rack_pick_dir[1] = False\n        self.rack.rack_pick_dir[2] = False", "hash": "83f53991eb39", "chunk_type": "method", "node_type": "function_definition", "signature": "_save_defaults(self)", "docstring": null, "chunk_size_bytes": 355, "original_size_bytes": 365, "start_byte": 5242, "end_byte": 5607}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:861e19091baf", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "_text_to_list", "qualified_name": "SetupWindow._text_to_list", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [124, 128], "text": "def _text_to_list(self, text):\n        text = re.sub('[()]', '', text)\n        text_split = text.split(',')\n        num_list = [float(i) for i in text_split]\n        return num_list", "hash": "861e19091baf", "chunk_type": "method", "node_type": "function_definition", "signature": "_text_to_list(self, text)", "docstring": null, "chunk_size_bytes": 181, "original_size_bytes": 181, "start_byte": 5614, "end_byte": 5795}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:6178d78ff411", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "ProgressWindowApp", "qualified_name": "ProgressWindowApp", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [131, 156], "text": "class ProgressWindowApp(QtWidgets.QMainWindow, ProgressWindow.Ui_MainWindow):\n    def __init__(self, rack, centrifuge, *args, **kwargs):\n        QtWidgets.QMainWindow.__init__(self, *args, **kwargs)\n        self.setupUi(self)\n        self.progressBar.setValue(0)\n        self.label.setText(\"Starting the centrifuge\")\n        self.move(346, 250)\n    def start_progress(self):\n        self.progressBar.setValue(0)", "hash": "6178d78ff411", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 411, "original_size_bytes": 421, "start_byte": 5806, "end_byte": 6693}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:421df4b408d3", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "ProgressWindowApp.__init__", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [132, 137], "text": "def __init__(self, rack, centrifuge, *args, **kwargs):\n        QtWidgets.QMainWindow.__init__(self, *args, **kwargs)\n        self.setupUi(self)\n        self.progressBar.setValue(0)\n        self.label.setText(\"Starting the centrifuge\")\n        self.move(346, 250)", "hash": "421df4b408d3", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self, rack, centrifuge, *args, **kwargs)", "docstring": null, "chunk_size_bytes": 262, "original_size_bytes": 262, "start_byte": 5888, "end_byte": 6150}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:f3b0cfb0b263", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "start_progress", "qualified_name": "ProgressWindowApp.start_progress", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [140, 149], "text": "def start_progress(self):\n        self.progressBar.setValue(0)\n        self.label.setText(\"Starting the centrifuge\")\n        QCoreApplication.processEvents()\n        sleep(5)\n        self.label.setText(\"Processing Samples\")\n        for i in range(100):\n            self.progressBar.setValue(i+1)\n            sleep(0.1)\n            QCoreApplication.processEvents()", "hash": "f3b0cfb0b263", "chunk_type": "method", "node_type": "function_definition", "signature": "start_progress(self)", "docstring": null, "chunk_size_bytes": 363, "original_size_bytes": 363, "start_byte": 6165, "end_byte": 6528}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:cde34ccb811f", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "unload_cent", "qualified_name": "ProgressWindowApp.unload_cent", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [151, 153], "text": "def unload_cent(self):\n        self.label.setText(\"Unloading Vials\")\n        QCoreApplication.processEvents()", "hash": "cde34ccb811f", "chunk_type": "method", "node_type": "function_definition", "signature": "unload_cent(self)", "docstring": null, "chunk_size_bytes": 109, "original_size_bytes": 109, "start_byte": 6534, "end_byte": 6643}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:677655b77a81", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "close_window", "qualified_name": "ProgressWindowApp.close_window", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [155, 156], "text": "def close_window(self):\n        self.close()", "hash": "677655b77a81", "chunk_type": "method", "node_type": "function_definition", "signature": "close_window(self)", "docstring": null, "chunk_size_bytes": 44, "original_size_bytes": 44, "start_byte": 6649, "end_byte": 6693}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:3a5ab3b8661b", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "Application", "qualified_name": "Application", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [159, 463], "text": "class Application(QtWidgets.QMainWindow, MainWindow.Ui_MainWindow):\n    def __init__(self, *args, **kwargs):\n        QtWidgets.QMainWindow.__init__(self, *args, **kwargs)\n        self.setupUi(self)\n        self.setStyleSheet(\"background-color:white\")\n        current_dir = os.path.dirname(os.path.realpath(__file__))\n        parent_dir = os.path.abspath(os.path.join(current_dir, os.pardir))", "hash": "3a5ab3b8661b", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 391, "original_size_bytes": 433, "start_byte": 6696, "end_byte": 18578}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:6e87995de156", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "Application.__init__", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [160, 203], "text": "def __init__(self, *args, **kwargs):\n        QtWidgets.QMainWindow.__init__(self, *args, **kwargs)\n        self.setupUi(self)\n        self.setStyleSheet(\"background-color:white\")\n        current_dir = os.path.dirname(os.path.realpath(__file__))\n        parent_dir = os.path.abspath(os.path.join(current_dir, os.pardir))\n        pixmap_logo = QPixmap(os.path.join(parent_dir, 'frontend/images/mecademic-logo.png'))\n        pixmap_logo = pixmap_logo.scaledToWidth(400)\n        self.logo.setPixmap(pixmap_logo)\n        self.buttonAutoMode.setCheckable(True)\n        self.buttonCentrifuge.setEnabled(False)\n        self.robot = Robot()\n        self.rack = MainRack(6)\n        self.centrifuge = Centrifuge(6)\n        self.autoThread = None\n        self.autoWorker = None\n        self.setup_window = SetupWindow(self.rack, self.centrifuge)\n        self.actionSetup.triggered.connect(self.open_setup)\n        self.progress_window = ProgressWindowApp(self.rack, self.centrifuge)\n        self.LoadButton.clicked.connect(self.load_centrifuge)\n        self.RackSelection.button_list[0].clicked.connect(lambda: self.toggle_select_vial(0))\n        self.RackSelection.button_list[1].clicked.connect(lambda: self.toggle_select_vial(1))\n        self.RackSelection.button_list[2].clicked.connect(lambda: self.toggle_select_vial(2))\n        self.RackSelection.button_list[3].clicked.connect(lambda: self.toggle_select_vial(3))\n        self.RackSelection.button_list[4].clicked.connect(lambda: self.toggle_select_vial(4))\n        self.RackSelection.button_list[5].clicked.connect(lambda: self.toggle_select_vial(5))\n        self.buttonCentrifuge.clicked.connect(self.start_centrifuge)\n        self.buttonRobot.clicked.connect(self.connect_to_robot)\n        self.buttonAutoMode.clicked.connect(self.buttonAutoFunction)", "hash": "6e87995de156", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self, *args, **kwargs)", "docstring": null, "chunk_size_bytes": 1798, "original_size_bytes": 1985, "start_byte": 6768, "end_byte": 8753}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:afb2fce22b7e", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "open_setup", "qualified_name": "Application.open_setup", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [206, 207], "text": "def open_setup(self):\n        self.setup_window.show()", "hash": "afb2fce22b7e", "chunk_type": "method", "node_type": "function_definition", "signature": "open_setup(self)", "docstring": null, "chunk_size_bytes": 54, "original_size_bytes": 54, "start_byte": 8760, "end_byte": 8814}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:e091785263c4", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "open_progress", "qualified_name": "Application.open_progress", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [209, 211], "text": "def open_progress(self):\n        self.progress_window.show()\n        self.progress_window.start_progress()", "hash": "e091785263c4", "chunk_type": "method", "node_type": "function_definition", "signature": "open_progress(self)", "docstring": null, "chunk_size_bytes": 106, "original_size_bytes": 106, "start_byte": 8820, "end_byte": 8926}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:f57b89bc3c66", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "unload_window", "qualified_name": "Application.unload_window", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [213, 214], "text": "def unload_window(self):\n        self.progress_window.unload_cent()", "hash": "f57b89bc3c66", "chunk_type": "method", "node_type": "function_definition", "signature": "unload_window(self)", "docstring": null, "chunk_size_bytes": 67, "original_size_bytes": 67, "start_byte": 8932, "end_byte": 8999}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:78b4e1003c46", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "toggle_select_vial", "qualified_name": "Application.toggle_select_vial", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [216, 217], "text": "def toggle_select_vial(self, n):\n        self.rack.vial_selected[n] = not self.rack.vial_selected[n]", "hash": "78b4e1003c46", "chunk_type": "method", "node_type": "function_definition", "signature": "toggle_select_vial(self, n)", "docstring": null, "chunk_size_bytes": 100, "original_size_bytes": 100, "start_byte": 9005, "end_byte": 9105}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:ca9902cc3767", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "connect_to_robot", "qualified_name": "Application.connect_to_robot", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [219, 230], "text": "def connect_to_robot(self):\n        if not self.robot.IsConnected():\n            try:\n                self.robot.Connect()\n                self.robot.ActivateAndHome()\n                self.robot.WaitHomed()\n                self.buttonRobot.setStyleSheet(\"background-color:rgba(0,255,0,255)\")\n            except CommunicationError as e:\n                print(e)\n        else:\n            self.robot.Disconnect()\n            self.buttonRobot.setStyleSheet(\"background-color:rgba(0,0,0,125)\")", "hash": "ca9902cc3767", "chunk_type": "method", "node_type": "function_definition", "signature": "connect_to_robot(self)", "docstring": null, "chunk_size_bytes": 489, "original_size_bytes": 489, "start_byte": 9111, "end_byte": 9600}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:05d888b3715f", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "load_centrifuge", "qualified_name": "Application.load_centrifuge", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [232, 306], "text": "def load_centrifuge(self):\n        if not self.centrifuge.cent_status:\n            msgbox = QtWidgets.QMessageBox()\n            msgbox.setIcon(QtWidgets.QMessageBox.Information)\n            msgbox.setText(\"Centrifuge is not ready to be loaded.\")\n            msgbox.setWindowTitle(\"Centrifuge Warning\")\n            msgbox.setStandardButtons(QtWidgets.QMessageBox.Ok | QtWidgets.QMessageBox.Cancel)\n            msgbox.exec()\n            return\n        if True in self.centrifuge.rack_status:\n            msgbox = QtWidgets.QMessageBox()\n            msgbox.setIcon(QtWidgets.QMessageBox.Information)\n            msgbox.setText(\"There are still vials in the centrifuge.\")\n            msgbox.setWindowTitle(\"Centrifuge Warning\")\n            msgbox.setStandardButtons(QtWidgets.QMessageBox.Ok | QtWidgets.QMessageBox.Cancel)\n            msgbox.exec()\n            return\n        if not (True in self.rack.vial_selected):\n            msgbox = QtWidgets.QMessageBox()\n            msgbox.setIcon(QtWidgets.QMessageBox.Information)\n            msgbox.setText(\"Please select one or multiple vials before loading.\")\n            msgbox.setWindowTitle(\"Rack Warning\")\n            msgbox.setStandardButtons(QtWidgets.QMessageBox.Ok | QtWidgets.QMessageBox.Cancel)\n            msgbox.exec()\n            return\n        self.LoadButton.setEnabled(False)\n        self.buttonAutoMode.setEnabled(False)\n        self.buttonCentrifuge.setEnabled(False)\n        self.buttonRobot.setEnabled(False)\n        self.RackSelection.disableButtons()\n        QCoreApplication.processEvents()\n        self.robot.SetJointVel(40)\n        self.robot.SetCartLinVel(30)\n        self.robot.GripperOpen()\n        for i, st in enumerate(self.rack.vial_selected):\n            if st:\n                self.robot.MoveJoints(90, 0, 0, 0, 0, 0)\n                self.RackStatusDisplay.turn_vial_off(i)\n                pick_point = self.rack.rack_position[i]\n                if self.rack.rack_pick_dir[i]:\n                    self.pick_reg(pick_point)\n                else:\n                    self.pick_front(pick_point)\n                self.robot.MoveJoints(0, 0, 0, 0, 45, 0)\n                place_point = self.centrifuge.rack_position[i]\n                if self.rack.rack_pick_dir[i]:\n                    self.place_reg(place_point)\n                else:\n                    self.place_front(place_point)\n                cp = self.robot.SetCheckpoint(50)\n                cp.wait()\n                self.RackSelection.button_list[i].setChecked(False)\n                self.RackSelection.button_list[i]._on_pressed_col_change()\n                self.RackSelection.button_list[i].setEnabled(False)\n                self.CentStatusDisplay.toggle_led(i)\n                QCoreApplication.processEvents()\n        self.robot.MoveJoints(0, 0, 0, 0, 0, 0)\n        self.buttonCentrifuge.setEnabled(True)", "hash": "05d888b3715f", "chunk_type": "method", "node_type": "function_definition", "signature": "load_centrifuge(self)", "docstring": null, "chunk_size_bytes": 2840, "original_size_bytes": 3083, "start_byte": 9606, "end_byte": 12689}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:08564e026f62", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "pick_reg", "qualified_name": "Application.pick_reg", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [309, 317], "text": "def pick_reg(self, point):\n        self.robot.SetTRF(49, 0, 14, 0, -90, 0)\n        self.robot.SetWRF(*point)\n        self.robot.MovePose(-16, 0, 30, 0, 0, 0)\n        self.robot.MovePose(-16, 0, 0, 0, 0, 0)      # Approach, modify this depending on the orientation\n        self.robot.MoveLin(0, 0, 0, 0, 0, 0)        # Pick\n        self.robot.GripperClose()\n        self.robot.Delay(1)\n        self.robot.MoveLin(0, 0, 120, 0, 0, 0)", "hash": "08564e026f62", "chunk_type": "method", "node_type": "function_definition", "signature": "pick_reg(self, point)", "docstring": null, "chunk_size_bytes": 431, "original_size_bytes": 431, "start_byte": 12696, "end_byte": 13127}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:ec0190a1baef", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "pick_front", "qualified_name": "Application.pick_front", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [320, 327], "text": "def pick_front(self, point):\n        self.robot.SetTRF(30, 0, 17, -180, 0, -180)\n        self.robot.SetWRF(*point)\n        self.robot.MovePose(0, 0, 20, 0, 0, 0)\n        self.robot.MoveLin(0, 0, 0, 0, 0, 0)\n        self.robot.GripperClose()\n        self.robot.Delay(0.5)\n        self.robot.MoveLin(0, 0, 100, 0, 0, 0)", "hash": "ec0190a1baef", "chunk_type": "method", "node_type": "function_definition", "signature": "pick_front(self, point)", "docstring": null, "chunk_size_bytes": 317, "original_size_bytes": 317, "start_byte": 13134, "end_byte": 13451}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:1661c0952471", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "place_reg", "qualified_name": "Application.place_reg", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [329, 336], "text": "def place_reg(self, point):\n        self.robot.SetTRF(49, 0, 14, 0, -90, 0)\n        self.robot.SetWRF(*point)\n        self.robot.MovePose(0, 0, 80, 0, 0, 0)\n        self.robot.MoveLin(0, 0, 0, 0, 0, 0)\n        self.robot.GripperOpen()\n        self.robot.Delay(0.5)\n        self.robot.MoveLin(-30, 0, 0, 0, 0, 0)", "hash": "1661c0952471", "chunk_type": "method", "node_type": "function_definition", "signature": "place_reg(self, point)", "docstring": null, "chunk_size_bytes": 311, "original_size_bytes": 311, "start_byte": 13457, "end_byte": 13768}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:b05389d90adc", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "place_front", "qualified_name": "Application.place_front", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [338, 345], "text": "def place_front(self, point):\n        self.robot.SetTRF(30, 0, 17, -180, 0, -180)\n        self.robot.SetWRF(*point)\n        self.robot.MovePose(0, 0, 80, 0, 0, 0)\n        self.robot.MoveLin(0, 0, 0, 0, 0, 0)\n        self.robot.GripperOpen()\n        self.robot.Delay(0.5)\n        self.robot.MoveLin(0, 0, 80, 0, 0 ,0)", "hash": "b05389d90adc", "chunk_type": "method", "node_type": "function_definition", "signature": "place_front(self, point)", "docstring": null, "chunk_size_bytes": 316, "original_size_bytes": 316, "start_byte": 13774, "end_byte": 14090}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:99411ba3ff6f", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "ret_pick_front", "qualified_name": "Application.ret_pick_front", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [347, 354], "text": "def ret_pick_front(self, point):\n        self.robot.SetTRF(30, 0, 17, -180, 0, -180)\n        self.robot.SetWRF(*point)\n        self.robot.MovePose(0, 0, 80, 0, 0, 0)\n        self.robot.MoveLin(0, 0, 0, 0, 0, 0)\n        self.robot.GripperClose()\n        self.robot.Delay(0.5)\n        self.robot.MoveLin(0, 0, 80, 0, 0 ,0)", "hash": "99411ba3ff6f", "chunk_type": "method", "node_type": "function_definition", "signature": "ret_pick_front(self, point)", "docstring": null, "chunk_size_bytes": 320, "original_size_bytes": 320, "start_byte": 14096, "end_byte": 14416}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:5e00987481f8", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "ret_pick_reg", "qualified_name": "Application.ret_pick_reg", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [356, 363], "text": "def ret_pick_reg(self, point):\n        self.robot.SetTRF(49, 0, 14, 0, -90, 0)\n        self.robot.SetWRF(*point)\n        self.robot.MovePose(-30, 0, 0, 0, 0, 0)\n        self.robot.MoveLin(0, 0, 0, 0, 0, 0)\n        self.robot.GripperClose()\n        self.robot.Delay(0.5)\n        self.robot.MoveLin(0, 0, 80, 0, 0, 0)", "hash": "5e00987481f8", "chunk_type": "method", "node_type": "function_definition", "signature": "ret_pick_reg(self, point)", "docstring": null, "chunk_size_bytes": 315, "original_size_bytes": 315, "start_byte": 14422, "end_byte": 14737}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:86df0ccc11eb", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "ret_place_front", "qualified_name": "Application.ret_place_front", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [365, 372], "text": "def ret_place_front(self, point):\n        self.robot.SetTRF(30, 0, 17, -180, 0, -180)\n        self.robot.SetWRF(*point)\n        self.robot.MovePose(0, 0, 100, 0, 0, 0)\n        self.robot.MoveLin(0, 0, 0, 0, 0, 0)\n        self.robot.GripperOpen()\n        self.robot.Delay(0.5)\n        self.robot.MoveLin(0, 0, 20, 0, 0, 0)", "hash": "86df0ccc11eb", "chunk_type": "method", "node_type": "function_definition", "signature": "ret_place_front(self, point)", "docstring": null, "chunk_size_bytes": 321, "original_size_bytes": 321, "start_byte": 14743, "end_byte": 15064}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:63a44f0622c0", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "ret_place_reg", "qualified_name": "Application.ret_place_reg", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [374, 382], "text": "def ret_place_reg(self, point):\n        self.robot.SetTRF(49, 0, 14, 0, -90, 0)\n        self.robot.SetWRF(*point)\n        self.robot.MovePose(0, 0, 120, 0, 0, 0)\n        self.robot.MoveLin(0, 0, 0, 0, 0, 0)        # Pick\n        self.robot.GripperOpen()\n        self.robot.Delay(0.5)\n        self.robot.MoveLin(-16, 0, 0, 0, 0, 0)      # Approach, modify this depending on the orientation\n        self.robot.MoveLin(-16, 0, 30, 0, 0, 0)", "hash": "63a44f0622c0", "chunk_type": "method", "node_type": "function_definition", "signature": "ret_place_reg(self, point)", "docstring": null, "chunk_size_bytes": 436, "original_size_bytes": 436, "start_byte": 15070, "end_byte": 15506}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:649a4b7afc75", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "start_centrifuge", "qualified_name": "Application.start_centrifuge", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [384, 427], "text": "def start_centrifuge(self):\n        self.buttonCentrifuge.setEnabled(False)\n        self.open_progress()\n        sleep(2)\n        self.unload_window()\n        self.robot.SetJointVel(40)\n        self.robot.SetCartLinVel(25)\n        self.robot.GripperOpen()\n        for i, st in enumerate(self.rack.vial_selected):\n            if st:\n                self.robot.MoveJoints(0, 0, 0, 0, 0, 0)\n                pick_point = self.centrifuge.rack_position[i]\n                if self.rack.rack_pick_dir[i]:\n                    self.ret_pick_reg(pick_point)\n                else:\n                    self.ret_pick_front(pick_point)\n                self.robot.MoveJoints(0, 0, 0, 0, 45, 0)\n                place_point = self.rack.rack_position[i]\n                if self.rack.rack_pick_dir[i]:\n                    self.ret_place_reg(place_point)\n                else:\n                    self.ret_place_front(place_point)\n                cp = self.robot.SetCheckpoint(42)\n                cp.wait()\n                self.RackSelection.button_list[i].setEnabled(True)\n                self.RackSelection.button_list[i].setChecked(False)\n                self.RackStatusDisplay.turn_vial_on(i)\n                self.rack.vial_selected[i] = False\n                self.CentStatusDisplay.toggle_led(i)\n                QCoreApplication.processEvents()\n        self.robot.MoveJoints(90, 0, 0, 0, 0, 0)\n        self.centrifuge.cent_status = True\n        self.progress_window.close_window()\n        self.buttonAutoMode.setEnabled(True)\n        self.buttonRobot.setEnabled(True)\n        self.LoadButton.setEnabled(True)\n        self.RackSelection.enableButtons()", "hash": "649a4b7afc75", "chunk_type": "method", "node_type": "function_definition", "signature": "start_centrifuge(self)", "docstring": null, "chunk_size_bytes": 1635, "original_size_bytes": 1686, "start_byte": 15512, "end_byte": 17198}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:9cad2f6321f9", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "startAutoMode", "qualified_name": "Application.startAutoMode", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [430, 447], "text": "def startAutoMode(self):\n        self.RackSelection.disableButtons()\n        self.buttonRobot.setEnabled(False)\n        self.buttonCentrifuge.setEnabled(False)\n        self.LoadButton.setEnabled(False)\n        self.autoThread = QThread()\n        self.autoWorker = AutoModeWorker(self.robot, self.rack, self.centrifuge)\n        self.autoWorker.moveToThread(self.autoThread)\n        self.autoThread.started.connect(self.autoWorker.run)\n        self.autoWorker.finished.connect(self.autoThread.quit)\n        self.autoWorker.finished.connect(self.autoWorker.deleteLater)\n        self.autoWorker.finished.connect(self.RackSelection.enableButtons)\n        self.autoWorker.finished.connect(lambda: self.buttonRobot.setEnabled(True))\n        self.autoWorker.finished.connect(lambda: self.buttonCentrifuge.setEnabled(True))\n        self.autoWorker.finished.connect(lambda: self.LoadButton.setEnabled(True))\n        self.autoThread.finished.connect(self.autoThread.deleteLater)\n        self.autoThread.start()", "hash": "9cad2f6321f9", "chunk_type": "method", "node_type": "function_definition", "signature": "startAutoMode(self)", "docstring": null, "chunk_size_bytes": 999, "original_size_bytes": 1000, "start_byte": 17205, "end_byte": 18205}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:9a2736745aec", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "buttonAutoFunction", "qualified_name": "Application.buttonAutoFunction", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [449, 453], "text": "def buttonAutoFunction(self):\n        if self.buttonAutoMode.isChecked():\n            self.startAutoMode()\n        else:\n            self.autoWorker.toggleFinish()", "hash": "9a2736745aec", "chunk_type": "method", "node_type": "function_definition", "signature": "buttonAutoFunction(self)", "docstring": null, "chunk_size_bytes": 163, "original_size_bytes": 163, "start_byte": 18211, "end_byte": 18374}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:a4346b7706b3", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "closeEvent", "qualified_name": "Application.closeEvent", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [456, 458], "text": "def closeEvent(self, event):\n        self.robot.Disconnect()\n        super().closeEvent(event)", "hash": "a4346b7706b3", "chunk_type": "method", "node_type": "function_definition", "signature": "closeEvent(self, event)", "docstring": null, "chunk_size_bytes": 94, "original_size_bytes": 94, "start_byte": 18381, "end_byte": 18475}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:da68bcb5efc7", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "print_data", "qualified_name": "Application.print_data", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [462, 463], "text": "def print_data(self):\n        print(self.centrifuge.rack_position[0])", "hash": "da68bcb5efc7", "chunk_type": "method", "node_type": "function_definition", "signature": "print_data(self)", "docstring": null, "chunk_size_bytes": 69, "original_size_bytes": 69, "start_byte": 18509, "end_byte": 18578}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:6ff0394664e7", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "AutoModeWorker", "qualified_name": "AutoModeWorker", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [466, 605], "text": "class AutoModeWorker(QObject):\n    finished = pyqtSignal()\n    def __init__(self, robot, rack, cent):\n        super().__init__()\n        self.robot = robot\n        self.rack = rack\n        self.cent = cent\n    def run(self):", "hash": "6ff0394664e7", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 224, "original_size_bytes": 227, "start_byte": 18581, "end_byte": 23451}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:515c15ba4c4b", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "AutoModeWorker.__init__", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [469, 473], "text": "def __init__(self, robot, rack, cent):\n        super().__init__()\n        self.robot = robot\n        self.rack = rack\n        self.cent = cent", "hash": "515c15ba4c4b", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self, robot, rack, cent)", "docstring": null, "chunk_size_bytes": 142, "original_size_bytes": 142, "start_byte": 18645, "end_byte": 18787}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:43c05f4064e1", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "run", "qualified_name": "AutoModeWorker.run", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [476, 525], "text": "def run(self):\n        self.goFlag = True\n        self.robot.SetJointVel(40)\n        self.robot.SetCartLinVel(25)\n        while(self.goFlag):\n            for rack_pos, pick_dir, cent_pos in zip(self.rack.rack_position, self.rack.rack_pick_dir, self.cent.rack_position):\n                self.robot.MoveJoints(90, 0, 0, 0, 0, 0)\n                if pick_dir:\n                    self.pick_reg(rack_pos)\n                else:\n                    self.pick_front(rack_pos)\n                self.robot.MoveJoints(0, 0, 0, 0, 45, 0)\n                if pick_dir:\n                    self.place_reg(cent_pos)\n                else:\n                    self.place_front(cent_pos)\n            cp = self.robot.SetCheckpoint(82)\n            cp.wait()\n            self.robot.MoveJoints(0, 0, 0, 0, 0, 0)\n            cp = self.robot.SetCheckpoint(82)\n            cp.wait()\n            sleep(3)\n            for rack_pos, pick_dir, cent_pos in zip(self.rack.rack_position, self.rack.rack_pick_dir, self.cent.rack_position):\n                self.robot.MoveJoints(0, 0, 0, 0, 45, 0)\n                if pick_dir:\n                    self.ret_pick_reg(cent_pos)\n                else:\n                    self.ret_pick_front(cent_pos)\n                self.robot.MoveJoints(0, 0, 0, 0, 45, 0)\n                if pick_dir:\n                    self.ret_place_reg(rack_pos)\n                else:\n                    self.ret_place_front(rack_pos)\n            cp = self.robot.SetCheckpoint(82)\n            cp.wait()\n            self.robot.MoveJoints(0, 0, 0, 0, 0, 0)\n        self.finished.emit()", "hash": "43c05f4064e1", "chunk_type": "method", "node_type": "function_definition", "signature": "run(self)", "docstring": null, "chunk_size_bytes": 1567, "original_size_bytes": 1782, "start_byte": 18794, "end_byte": 20576}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:5398010819e2", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "toggleFinish", "qualified_name": "AutoModeWorker.toggleFinish", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [528, 529], "text": "def toggleFinish(self):\n        self.goFlag = False", "hash": "5398010819e2", "chunk_type": "method", "node_type": "function_definition", "signature": "toggleFinish(self)", "docstring": null, "chunk_size_bytes": 51, "original_size_bytes": 51, "start_byte": 20583, "end_byte": 20634}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:08564e026f62", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "pick_reg", "qualified_name": "AutoModeWorker.pick_reg", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [532, 540], "text": "def pick_reg(self, point):\n        self.robot.SetTRF(49, 0, 14, 0, -90, 0)\n        self.robot.SetWRF(*point)\n        self.robot.MovePose(-16, 0, 30, 0, 0, 0)\n        self.robot.MovePose(-16, 0, 0, 0, 0, 0)      # Approach, modify this depending on the orientation\n        self.robot.MoveLin(0, 0, 0, 0, 0, 0)        # Pick\n        self.robot.GripperClose()\n        self.robot.Delay(1)\n        self.robot.MoveLin(0, 0, 120, 0, 0, 0)", "hash": "08564e026f62", "chunk_type": "method", "node_type": "function_definition", "signature": "pick_reg(self, point)", "docstring": null, "chunk_size_bytes": 431, "original_size_bytes": 431, "start_byte": 20641, "end_byte": 21072}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:ec0190a1baef", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "pick_front", "qualified_name": "AutoModeWorker.pick_front", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [543, 550], "text": "def pick_front(self, point):\n        self.robot.SetTRF(30, 0, 17, -180, 0, -180)\n        self.robot.SetWRF(*point)\n        self.robot.MovePose(0, 0, 20, 0, 0, 0)\n        self.robot.MoveLin(0, 0, 0, 0, 0, 0)\n        self.robot.GripperClose()\n        self.robot.Delay(0.5)\n        self.robot.MoveLin(0, 0, 100, 0, 0, 0)", "hash": "ec0190a1baef", "chunk_type": "method", "node_type": "function_definition", "signature": "pick_front(self, point)", "docstring": null, "chunk_size_bytes": 317, "original_size_bytes": 317, "start_byte": 21079, "end_byte": 21396}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:1661c0952471", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "place_reg", "qualified_name": "AutoModeWorker.place_reg", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [552, 559], "text": "def place_reg(self, point):\n        self.robot.SetTRF(49, 0, 14, 0, -90, 0)\n        self.robot.SetWRF(*point)\n        self.robot.MovePose(0, 0, 80, 0, 0, 0)\n        self.robot.MoveLin(0, 0, 0, 0, 0, 0)\n        self.robot.GripperOpen()\n        self.robot.Delay(0.5)\n        self.robot.MoveLin(-30, 0, 0, 0, 0, 0)", "hash": "1661c0952471", "chunk_type": "method", "node_type": "function_definition", "signature": "place_reg(self, point)", "docstring": null, "chunk_size_bytes": 311, "original_size_bytes": 311, "start_byte": 21402, "end_byte": 21713}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:b05389d90adc", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "place_front", "qualified_name": "AutoModeWorker.place_front", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [561, 568], "text": "def place_front(self, point):\n        self.robot.SetTRF(30, 0, 17, -180, 0, -180)\n        self.robot.SetWRF(*point)\n        self.robot.MovePose(0, 0, 80, 0, 0, 0)\n        self.robot.MoveLin(0, 0, 0, 0, 0, 0)\n        self.robot.GripperOpen()\n        self.robot.Delay(0.5)\n        self.robot.MoveLin(0, 0, 80, 0, 0 ,0)", "hash": "b05389d90adc", "chunk_type": "method", "node_type": "function_definition", "signature": "place_front(self, point)", "docstring": null, "chunk_size_bytes": 316, "original_size_bytes": 316, "start_byte": 21719, "end_byte": 22035}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:99411ba3ff6f", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "ret_pick_front", "qualified_name": "AutoModeWorker.ret_pick_front", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [570, 577], "text": "def ret_pick_front(self, point):\n        self.robot.SetTRF(30, 0, 17, -180, 0, -180)\n        self.robot.SetWRF(*point)\n        self.robot.MovePose(0, 0, 80, 0, 0, 0)\n        self.robot.MoveLin(0, 0, 0, 0, 0, 0)\n        self.robot.GripperClose()\n        self.robot.Delay(0.5)\n        self.robot.MoveLin(0, 0, 80, 0, 0 ,0)", "hash": "99411ba3ff6f", "chunk_type": "method", "node_type": "function_definition", "signature": "ret_pick_front(self, point)", "docstring": null, "chunk_size_bytes": 320, "original_size_bytes": 320, "start_byte": 22041, "end_byte": 22361}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:5e00987481f8", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "ret_pick_reg", "qualified_name": "AutoModeWorker.ret_pick_reg", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [579, 586], "text": "def ret_pick_reg(self, point):\n        self.robot.SetTRF(49, 0, 14, 0, -90, 0)\n        self.robot.SetWRF(*point)\n        self.robot.MovePose(-30, 0, 0, 0, 0, 0)\n        self.robot.MoveLin(0, 0, 0, 0, 0, 0)\n        self.robot.GripperClose()\n        self.robot.Delay(0.5)\n        self.robot.MoveLin(0, 0, 80, 0, 0, 0)", "hash": "5e00987481f8", "chunk_type": "method", "node_type": "function_definition", "signature": "ret_pick_reg(self, point)", "docstring": null, "chunk_size_bytes": 315, "original_size_bytes": 315, "start_byte": 22367, "end_byte": 22682}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:86df0ccc11eb", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "ret_place_front", "qualified_name": "AutoModeWorker.ret_place_front", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [588, 595], "text": "def ret_place_front(self, point):\n        self.robot.SetTRF(30, 0, 17, -180, 0, -180)\n        self.robot.SetWRF(*point)\n        self.robot.MovePose(0, 0, 100, 0, 0, 0)\n        self.robot.MoveLin(0, 0, 0, 0, 0, 0)\n        self.robot.GripperOpen()\n        self.robot.Delay(0.5)\n        self.robot.MoveLin(0, 0, 20, 0, 0, 0)", "hash": "86df0ccc11eb", "chunk_type": "method", "node_type": "function_definition", "signature": "ret_place_front(self, point)", "docstring": null, "chunk_size_bytes": 321, "original_size_bytes": 321, "start_byte": 22688, "end_byte": 23009}
{"chunk_id": "meca_samples:Demo_Glove_Box/Application/mainApp.py:63a44f0622c0", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "ret_place_reg", "qualified_name": "AutoModeWorker.ret_place_reg", "source_path": "Demo_Glove_Box/Application/mainApp.py", "loc": [597, 605], "text": "def ret_place_reg(self, point):\n        self.robot.SetTRF(49, 0, 14, 0, -90, 0)\n        self.robot.SetWRF(*point)\n        self.robot.MovePose(0, 0, 120, 0, 0, 0)\n        self.robot.MoveLin(0, 0, 0, 0, 0, 0)        # Pick\n        self.robot.GripperOpen()\n        self.robot.Delay(0.5)\n        self.robot.MoveLin(-16, 0, 0, 0, 0, 0)      # Approach, modify this depending on the orientation\n        self.robot.MoveLin(-16, 0, 30, 0, 0, 0)", "hash": "63a44f0622c0", "chunk_type": "method", "node_type": "function_definition", "signature": "ret_place_reg(self, point)", "docstring": null, "chunk_size_bytes": 436, "original_size_bytes": 436, "start_byte": 23015, "end_byte": 23451}
