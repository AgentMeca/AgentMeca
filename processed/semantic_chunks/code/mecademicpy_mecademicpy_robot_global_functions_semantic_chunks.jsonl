{"chunk_id": "meca_samples:mecademicpy/mecademicpy/robot_global_functions.py:69372487baef", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "register_nested_function", "qualified_name": "register_nested_function", "source_path": "mecademicpy/mecademicpy/robot_global_functions.py", "loc": [7, 7], "text": "from mecademicpy.robot_sidecar_classes import register_nested_function, unregister_nested_function", "hash": "69372487baef", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 98, "original_size_bytes": 98, "start_byte": 273, "end_byte": 371}
{"chunk_id": "meca_samples:mecademicpy/mecademicpy/robot_global_functions.py:456eb02d629d", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "_get_global", "qualified_name": "_get_global", "source_path": "mecademicpy/mecademicpy/robot_global_functions.py", "loc": [10, 12], "text": "def _get_global(attr_name: str) -> any:\n    \"\"\" This helper function is used to get an attribute from the global namespace of the calling function \"\"\"\n    return globals()[attr_name] if attr_name in globals() else None", "hash": "456eb02d629d", "chunk_type": "function", "node_type": "function_definition", "signature": "_get_global(attr_name: str)", "docstring": "This helper function is used to get an attribute from the global namespace of the calling function", "chunk_size_bytes": 218, "original_size_bytes": 218, "start_byte": 374, "end_byte": 592}
{"chunk_id": "meca_samples:mecademicpy/mecademicpy/robot_global_functions.py:b3ebd39cd925", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "_set_global", "qualified_name": "_set_global", "source_path": "mecademicpy/mecademicpy/robot_global_functions.py", "loc": [15, 17], "text": "def _set_global(attr_name: str, attr_val: any):\n    \"\"\" This helper function is used to set an attribute from the global namespace of the calling function \"\"\"\n    globals()[attr_name] = attr_val", "hash": "b3ebd39cd925", "chunk_type": "function", "node_type": "function_definition", "signature": "_set_global(attr_name: str, attr_val: any)", "docstring": "This helper function is used to set an attribute from the global namespace of the calling function", "chunk_size_bytes": 194, "original_size_bytes": 194, "start_byte": 595, "end_byte": 789}
{"chunk_id": "meca_samples:mecademicpy/mecademicpy/robot_global_functions.py:a81f2e1873f9", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "_del_global", "qualified_name": "_del_global", "source_path": "mecademicpy/mecademicpy/robot_global_functions.py", "loc": [20, 22], "text": "def _del_global(attr_name: str):\n    \"\"\" This helper function is used to delete an attribute from the global namespace of the calling function \"\"\"\n    del globals()[attr_name]", "hash": "a81f2e1873f9", "chunk_type": "function", "node_type": "function_definition", "signature": "_del_global(attr_name: str)", "docstring": "This helper function is used to delete an attribute from the global namespace of the calling function", "chunk_size_bytes": 175, "original_size_bytes": 175, "start_byte": 792, "end_byte": 967}
{"chunk_id": "meca_samples:mecademicpy/mecademicpy/robot_global_functions.py:9eb19d9d942c", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "attach_global_function", "qualified_name": "attach_global_function", "source_path": "mecademicpy/mecademicpy/robot_global_functions.py", "loc": [25, 42], "text": "def attach_global_function(function: callable, function_name: str):\n    \"\"\"Attach a function to the global namespace defined in this file, and which script files will import in their\n       own namespace in order to be able to call these functions directly.\n    Args:\n        function (callable): The function to register\n        function_name (str): Name of the function to export in the namespace\n    \"\"\"\n    register_nested_function(function_full_name=function_name,\n                             get_parent_attr=_get_global,\n                             set_parent_attr=_set_global,\n                             function=function)", "hash": "9eb19d9d942c", "chunk_type": "function", "node_type": "function_definition", "signature": "attach_global_function(function: callable, function_name: str)", "docstring": "Attach a function to the global namespace defined in this file, and which script files will import in their\n       own namespace in order to be able to call these functions directly.\n\n    Args:\n        function (callable): The function to register\n        function_name (str): Name of the function to export in the namespace", "chunk_size_bytes": 633, "original_size_bytes": 1038, "start_byte": 970, "end_byte": 2008}
{"chunk_id": "meca_samples:mecademicpy/mecademicpy/robot_global_functions.py:61012e2c4220", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "detach_global_function", "qualified_name": "detach_global_function", "source_path": "mecademicpy/mecademicpy/robot_global_functions.py", "loc": [45, 52], "text": "def detach_global_function(function_name: str):\n    \"\"\" Detach a function previously registered with attach_global_function\"\"\"\n    unregister_nested_function(function_full_name=function_name,\n                               get_parent_attr=_get_global,\n                               del_parent_attr=_del_global)", "hash": "61012e2c4220", "chunk_type": "function", "node_type": "function_definition", "signature": "detach_global_function(function_name: str)", "docstring": "Detach a function previously registered with attach_global_function", "chunk_size_bytes": 311, "original_size_bytes": 544, "start_byte": 2011, "end_byte": 2555}
