{"chunk_id": "meca_samples:meca500-accessories/simulations/robodk-setup/config_template.py:0e07349c6cef", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "validate_position", "qualified_name": "validate_position", "source_path": "meca500-accessories/simulations/robodk-setup/config_template.py", "loc": [222, 234], "text": "def validate_position(x, y, z):\n    \"\"\"\n    Validate if position is within workspace limits\n    Args:\n        x, y, z (float): Position coordinates in mm\n    Returns:\n        bool: True if position is valid, False otherwise\n    \"\"\"\n    return (WORKSPACE_LIMITS['x_min'] <= x <= WORKSPACE_LIMITS['x_max'] and\n            WORKSPACE_LIMITS['y_min'] <= y <= WORKSPACE_LIMITS['y_max'] and\n            WORKSPACE_LIMITS['z_min'] <= z <= WORKSPACE_LIMITS['z_max'])", "hash": "0e07349c6cef", "chunk_type": "function", "node_type": "function_definition", "signature": "validate_position(x, y, z)", "docstring": "Validate if position is within workspace limits\n    \n    Args:\n        x, y, z (float): Position coordinates in mm\n        \n    Returns:\n        bool: True if position is valid, False otherwise", "chunk_size_bytes": 456, "original_size_bytes": 470, "start_byte": 8525, "end_byte": 8995}
{"chunk_id": "meca_samples:meca500-accessories/simulations/robodk-setup/config_template.py:d02166947fea", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "get_safe_approach_height", "qualified_name": "get_safe_approach_height", "source_path": "meca500-accessories/simulations/robodk-setup/config_template.py", "loc": [236, 246], "text": "def get_safe_approach_height(z):\n    \"\"\"\n    Calculate safe approach height for given Z coordinate\n    Args:\n        z (float): Target Z coordinate in mm\n    Returns:\n        float: Safe approach height in mm\n    \"\"\"\n    return max(z + APPROACH_DISTANCE, WORKSPACE_LIMITS['z_min'] + MIN_APPROACH_HEIGHT)", "hash": "d02166947fea", "chunk_type": "function", "node_type": "function_definition", "signature": "get_safe_approach_height(z)", "docstring": "Calculate safe approach height for given Z coordinate\n    \n    Args:\n        z (float): Target Z coordinate in mm\n        \n    Returns:\n        float: Safe approach height in mm", "chunk_size_bytes": 303, "original_size_bytes": 317, "start_byte": 8997, "end_byte": 9314}
{"chunk_id": "meca_samples:meca500-accessories/simulations/robodk-setup/config_template.py:59bbb5fb900d", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "check_speed_limits", "qualified_name": "check_speed_limits", "source_path": "meca500-accessories/simulations/robodk-setup/config_template.py", "loc": [248, 269], "text": "def check_speed_limits(linear_speed, joint_speed):\n    \"\"\"\n    Check if speeds are within safe limits\n    Args:\n        linear_speed (float): Linear speed in mm/s\n        joint_speed (float): Joint speed in deg/s\n    Returns:\n        tuple: (is_valid, adjusted_linear_speed, adjusted_joint_speed)\n    \"\"\"\n    is_valid = True\n    if linear_speed > MAX_LINEAR_SPEED:\n        linear_speed = MAX_LINEAR_SPEED\n        is_valid = False\n    if joint_speed > MAX_JOINT_SPEED:\n        joint_speed = MAX_JOINT_SPEED\n        is_valid = False\n    return is_valid, linear_speed, joint_speed", "hash": "59bbb5fb900d", "chunk_type": "function", "node_type": "function_definition", "signature": "check_speed_limits(linear_speed, joint_speed)", "docstring": "Check if speeds are within safe limits\n    \n    Args:\n        linear_speed (float): Linear speed in mm/s\n        joint_speed (float): Joint speed in deg/s\n        \n    Returns:\n        tuple: (is_valid, adjusted_linear_speed, adjusted_joint_speed)", "chunk_size_bytes": 577, "original_size_bytes": 606, "start_byte": 9316, "end_byte": 9922}
{"chunk_id": "meca_samples:meca500-accessories/simulations/robodk-setup/config_template.py:4ec324cac16c", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "validate_config", "qualified_name": "validate_config", "source_path": "meca500-accessories/simulations/robodk-setup/config_template.py", "loc": [275, 305], "text": "def validate_config():\n    \"\"\"\n    Validate configuration parameters\n    Returns:\n        list: List of validation errors (empty if all valid)\n    \"\"\"\n    errors = []\n    if WORKSPACE_LIMITS['x_min'] >= WORKSPACE_LIMITS['x_max']:\n        errors.append(\"Invalid X workspace limits\")\n    if WORKSPACE_LIMITS['y_min'] >= WORKSPACE_LIMITS['y_max']:\n        errors.append(\"Invalid Y workspace limits\")\n    if WORKSPACE_LIMITS['z_min'] >= WORKSPACE_LIMITS['z_max']:\n        errors.append(\"Invalid Z workspace limits\")\n    if DEFAULT_LINEAR_SPEED > MAX_LINEAR_SPEED:\n        errors.append(\"Default linear speed exceeds maximum\")\n    if DEFAULT_JOINT_SPEED > MAX_JOINT_SPEED:\n        errors.append(\"Default joint speed exceeds maximum\")\n    if APPROACH_DISTANCE < MIN_APPROACH_HEIGHT:\n        errors.append(\"Approach distance less than minimum height\")\n    return errors", "hash": "4ec324cac16c", "chunk_type": "function", "node_type": "function_definition", "signature": "validate_config()", "docstring": "Validate configuration parameters\n    \n    Returns:\n        list: List of validation errors (empty if all valid)", "chunk_size_bytes": 862, "original_size_bytes": 986, "start_byte": 10112, "end_byte": 11098}
