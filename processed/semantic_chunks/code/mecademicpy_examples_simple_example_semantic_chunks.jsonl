{"chunk_id": "meca_samples:mecademicpy/examples/simple_example.py:1e7b9f543d36", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "logging", "qualified_name": "logging", "source_path": "mecademicpy/examples/simple_example.py", "loc": [7, 7], "text": "import logging", "hash": "1e7b9f543d36", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 14, "original_size_bytes": 14, "start_byte": 143, "end_byte": 157}
{"chunk_id": "meca_samples:mecademicpy/examples/simple_example.py:5757795d86dd", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "pathlib", "qualified_name": "pathlib", "source_path": "mecademicpy/examples/simple_example.py", "loc": [8, 8], "text": "import pathlib", "hash": "5757795d86dd", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 14, "original_size_bytes": 14, "start_byte": 158, "end_byte": 172}
{"chunk_id": "meca_samples:mecademicpy/examples/simple_example.py:f1c5d1d07b59", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "mecademicpy.robot as mdr", "qualified_name": "mecademicpy.robot as mdr", "source_path": "mecademicpy/examples/simple_example.py", "loc": [10, 10], "text": "import mecademicpy.robot as mdr", "hash": "f1c5d1d07b59", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 31, "original_size_bytes": 31, "start_byte": 174, "end_byte": 205}
{"chunk_id": "meca_samples:mecademicpy/examples/simple_example.py:c21db9e2d1c6", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "mecademicpy.robot_initializer as initializer", "qualified_name": "mecademicpy.robot_initializer as initializer", "source_path": "mecademicpy/examples/simple_example.py", "loc": [11, 11], "text": "import mecademicpy.robot_initializer as initializer", "hash": "c21db9e2d1c6", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 51, "original_size_bytes": 51, "start_byte": 206, "end_byte": 257}
{"chunk_id": "meca_samples:mecademicpy/examples/simple_example.py:6c3ff3d6ecd9", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "mecademicpy.tools as tools", "qualified_name": "mecademicpy.tools as tools", "source_path": "mecademicpy/examples/simple_example.py", "loc": [12, 12], "text": "import mecademicpy.tools as tools", "hash": "6c3ff3d6ecd9", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 33, "original_size_bytes": 33, "start_byte": 258, "end_byte": 291}
{"chunk_id": "meca_samples:mecademicpy/examples/simple_example.py:521c83354a94", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "simple_example_part_1", "qualified_name": "simple_example_part_1", "source_path": "mecademicpy/examples/simple_example.py", "loc": [15, 104], "text": "def simple_example():\n    \"\"\" Simple example for connecting to Mecademic robot and moving it  \"\"\"\n    tools.SetDefaultLogger(logging.INFO, f'{pathlib.Path(__file__).stem}.log')\n    logger = logging.getLogger(__name__)\n    with initializer.RobotWithTools() as robot:\n        try:\n            robot.Connect(address='192.168.0.100', disconnect_on_exception=False)\n            logger.info('Activating and homing robot...')\n            initializer.reset_sim_mode(robot)\n            initializer.reset_motion_queue(robot, activate_home=True)\n            initializer.reset_vacuum_module(robot)\n            robot.WaitHomed()\n            logger.info('Robot is homed and ready.')\n            logger.info('Moving the robot...')\n            robot.SetCartLinVel(100)\n            robot.SetBlending(50)\n            starting_pos = [0] * robot.GetRobotInfo().num_joints  # Build array with size matching number of joints\n            robot.MoveJoints(*starting_pos)  # Move joints using the unrolled array as arguments\n            if tools.robot_model_is_meca500(robot.GetRobotInfo().robot_model):\n                robot.SetConf(1, 1, 1)\n                robot.MoveLinRelWrf(0, 50, 0, 0, 0, 0)\n                robot.MoveLinRelWrf(0, 0, 50, 0, 0, 0)\n                robot.MoveLinRelWrf(0, -50, 0, 0, 0, 0)\n                robot.MoveLinRelWrf(0, 0, -50, 0, 0, 0)\n            elif robot.GetRobotInfo().robot_model == mdr.MxRobotModel.MX_ROBOT_MODEL_MCA250_R1:\n                robot.SetConf(1, 1, 1)\n                robot.MoveLinRelWrf(0, 30, 0, 0, 0, 0)", "hash": "521c83354a94", "chunk_type": "function_part", "node_type": "function_definition", "signature": null, "docstring": null, "chunk_size_bytes": 1529, "original_size_bytes": 2044, "start_byte": 294, "end_byte": 4978}
{"chunk_id": "meca_samples:mecademicpy/examples/simple_example.py:440fddf28f30", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "simple_example_part_2", "qualified_name": "simple_example_part_2", "source_path": "mecademicpy/examples/simple_example.py", "loc": [15, 104], "text": "                robot.MoveLinRelWrf(0, 0, 30, 0, 0, 0)\n                robot.MoveLinRelWrf(0, -30, 0, 0, 0, 0)\n                robot.MoveLinRelWrf(0, 0, -30, 0, 0, 0)\n            elif robot.GetRobotInfo().robot_model == mdr.MxRobotModel.MX_ROBOT_MODEL_MCA1000_R1:\n                robot.SetConf(1, 1, 1)\n                robot.MoveLinRelWrf(0, 50, 0, 0, 0, 0)\n                robot.MoveLinRelWrf(0, 0, 50, 0, 0, 0)\n                robot.MoveLinRelWrf(0, -50, 0, 0, 0, 0)\n                robot.MoveLinRelWrf(0, 0, -50, 0, 0, 0)\n            elif robot.GetRobotInfo().robot_model == mdr.MxRobotModel.MX_ROBOT_MODEL_MCS500_R1:\n                robot.MoveLinRelWrf(-50, -50, -20, 0)\n                robot.MoveLinRelWrf(-50, 50, -20, 0)\n                robot.MoveLinRelWrf(50, 50, 20, 0)\n                robot.MoveLinRelWrf(50, -50, 20, 0)\n            else:\n                raise mdr.MecademicException(\n                    f'This example script does not support this robot model ({robot.GetRobotInfo().robot_model})')\n            logger.info('Commands for drawing a square sent. Robot should now be moving.')\n            logger.info('Waiting for robot to finish moving...')\n            robot.WaitIdle(60)\n            logger.info('Robot finished drawing square.')\n        except mdr.InterruptException as exception:\n            logger.error(f'Robot operation was interrupted: {exception}...')\n        except mdr.CommunicationError as exception:\n            logger.error(f'Failed to connect to the robot: {exception}...')\n        except mdr.DisconnectError as exception:\n            logger.error(f'Disconnected from the robot: {exception}...')\n        except mdr.MecademicNonFatalException as exception:\n            logger.error(f'Robot exception occurred: {exception}...')\n        except KeyboardInterrupt:\n            logger.warning('Control-C pressed, quitting')", "hash": "440fddf28f30", "chunk_type": "function_part", "node_type": "function_definition", "signature": null, "docstring": null, "chunk_size_bytes": 1855, "original_size_bytes": 2076, "start_byte": 294, "end_byte": 4978}
{"chunk_id": "meca_samples:mecademicpy/examples/simple_example.py:86e076b9bae7", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "simple_example_part_3", "qualified_name": "simple_example_part_3", "source_path": "mecademicpy/examples/simple_example.py", "loc": [15, 104], "text": "            pass\n        if robot.IsConnected():\n            if robot.GetStatusRobot().error_status:\n                logger.info('Robot has encountered an error, attempting to clear...')\n                robot.ResetError()\n                robot.ResumeMotion()\n            robot.DeactivateRobot()\n            logger.info('Robot is deactivated.')\n    logger.info('Now disconnected from the robot.')", "hash": "86e076b9bae7", "chunk_type": "function_part", "node_type": "function_definition", "signature": null, "docstring": null, "chunk_size_bytes": 395, "original_size_bytes": 562, "start_byte": 294, "end_byte": 4978}
