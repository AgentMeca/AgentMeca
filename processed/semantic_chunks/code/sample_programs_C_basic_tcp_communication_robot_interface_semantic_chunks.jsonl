{"chunk_id": "meca_samples:sample-programs/C/basic-tcp-communication/robot_interface.c:d52f74c35a69", "repo": "meca_samples", "commit": "806f144", "lang": "c", "symbol": "unknown", "qualified_name": "unknown", "source_path": "sample-programs/C/basic-tcp-communication/robot_interface.c", "loc": [1, 2], "text": "#include \"robot_interface.h\"", "hash": "d52f74c35a69", "chunk_type": "other", "node_type": "preproc_include", "signature": null, "docstring": null, "chunk_size_bytes": 28, "original_size_bytes": 29, "start_byte": 0, "end_byte": 29}
{"chunk_id": "meca_samples:sample-programs/C/basic-tcp-communication/robot_interface.c:5e84001d87d7", "repo": "meca_samples", "commit": "806f144", "lang": "c", "symbol": "unknown", "qualified_name": "unknown", "source_path": "sample-programs/C/basic-tcp-communication/robot_interface.c", "loc": [3, 4], "text": "#include \"stdio.h\"", "hash": "5e84001d87d7", "chunk_type": "other", "node_type": "preproc_include", "signature": null, "docstring": null, "chunk_size_bytes": 18, "original_size_bytes": 19, "start_byte": 30, "end_byte": 49}
{"chunk_id": "meca_samples:sample-programs/C/basic-tcp-communication/robot_interface.c:abfde79f714c", "repo": "meca_samples", "commit": "806f144", "lang": "c", "symbol": "unknown", "qualified_name": "unknown", "source_path": "sample-programs/C/basic-tcp-communication/robot_interface.c", "loc": [4, 5], "text": "#include \"stdlib.h\"", "hash": "abfde79f714c", "chunk_type": "other", "node_type": "preproc_include", "signature": null, "docstring": null, "chunk_size_bytes": 19, "original_size_bytes": 20, "start_byte": 49, "end_byte": 69}
{"chunk_id": "meca_samples:sample-programs/C/basic-tcp-communication/robot_interface.c:d2e02e4110d9", "repo": "meca_samples", "commit": "806f144", "lang": "c", "symbol": "unknown", "qualified_name": "unknown", "source_path": "sample-programs/C/basic-tcp-communication/robot_interface.c", "loc": [5, 6], "text": "#include \"string.h\"", "hash": "d2e02e4110d9", "chunk_type": "other", "node_type": "preproc_include", "signature": null, "docstring": null, "chunk_size_bytes": 19, "original_size_bytes": 20, "start_byte": 69, "end_byte": 89}
{"chunk_id": "meca_samples:sample-programs/C/basic-tcp-communication/robot_interface.c:ad2522f6fc95", "repo": "meca_samples", "commit": "806f144", "lang": "c", "symbol": "unknown", "qualified_name": "unknown", "source_path": "sample-programs/C/basic-tcp-communication/robot_interface.c", "loc": [8, 8], "text": "static const char *CONTROL_PORT = \"10000\";", "hash": "ad2522f6fc95", "chunk_type": "other", "node_type": "declaration", "signature": null, "docstring": null, "chunk_size_bytes": 42, "original_size_bytes": 42, "start_byte": 127, "end_byte": 169}
{"chunk_id": "meca_samples:sample-programs/C/basic-tcp-communication/robot_interface.c:4e9c7ecf493e", "repo": "meca_samples", "commit": "806f144", "lang": "c", "symbol": "extract_code", "qualified_name": "extract_code", "source_path": "sample-programs/C/basic-tcp-communication/robot_interface.c", "loc": [22, 43], "text": "int extract_code(const char *message)\n{\n    int code = 0;\n    char *first_bracket = NULL;\n    char *second_bracket = NULL;\n    do\n    {\n        first_bracket = strchr(message, '[');\n        second_bracket = strchr(message, ']');\n        if ((int)(second_bracket - first_bracket) == 5)\n        {\n            code = 1000 * (first_bracket[1]-'0') + \n                   100 * (first_bracket[2]-'0') + \n                   10 * (first_bracket[3]-'0') + \n                   1 * (first_bracket[4]-'0');\n            break;\n        }\n        message = second_bracket + 1;\n    } while (first_bracket != NULL && second_bracket != NULL);\n    return code;\n}", "hash": "4e9c7ecf493e", "chunk_type": "function", "node_type": "function_definition", "signature": "unknown", "docstring": null, "chunk_size_bytes": 643, "original_size_bytes": 648, "start_byte": 703, "end_byte": 1351}
{"chunk_id": "meca_samples:sample-programs/C/basic-tcp-communication/robot_interface.c:770b2fa46a7f", "repo": "meca_samples", "commit": "806f144", "lang": "c", "symbol": "connect_robot", "qualified_name": "connect_robot", "source_path": "sample-programs/C/basic-tcp-communication/robot_interface.c", "loc": [47, 56], "text": "int connect_robot(char* address, Meca500 *robot)\n{\n    robot->connected_ = 0;\n    int result = tcpip_connect(address, CONTROL_PORT, &(robot->robot_connection_));\n    if (result == 0)\n    {\n        robot->connected_ = 1;\n    }\n    return result;\n}", "hash": "770b2fa46a7f", "chunk_type": "function", "node_type": "function_definition", "signature": "unknown", "docstring": null, "chunk_size_bytes": 246, "original_size_bytes": 246, "start_byte": 1436, "end_byte": 1682}
{"chunk_id": "meca_samples:sample-programs/C/basic-tcp-communication/robot_interface.c:19e0a330cbf9", "repo": "meca_samples", "commit": "806f144", "lang": "c", "symbol": "disconnect_robot", "qualified_name": "disconnect_robot", "source_path": "sample-programs/C/basic-tcp-communication/robot_interface.c", "loc": [60, 66], "text": "int disconnect_robot(Meca500 *robot)\n{\n    EXIT_ON_ROBOT_NOT_CONNECTED(robot->connected_);\n    tcpip_disconnect(&(robot->robot_connection_));\n    robot->connected_ = 0;\n    return 0;\n}", "hash": "19e0a330cbf9", "chunk_type": "function", "node_type": "function_definition", "signature": "unknown", "docstring": null, "chunk_size_bytes": 184, "original_size_bytes": 184, "start_byte": 1767, "end_byte": 1951}
{"chunk_id": "meca_samples:sample-programs/C/basic-tcp-communication/robot_interface.c:a3ceb8f488fa", "repo": "meca_samples", "commit": "806f144", "lang": "c", "symbol": "wait_for_return_code", "qualified_name": "wait_for_return_code", "source_path": "sample-programs/C/basic-tcp-communication/robot_interface.c", "loc": [70, 98], "text": "int wait_for_return_code(int code, Meca500 *robot)\n{\n    EXIT_ON_ROBOT_NOT_CONNECTED(robot->connected_);\n    char buffer[1024];\n    int received_code = 0;\n    while (received_code != code)\n    {\n        memset(buffer, 0, sizeof(buffer));\n        int result = tcpip_receive(buffer, sizeof(buffer) - 1, &(robot->robot_connection_));\n        if (result <= 0)\n        {\n            return -1; // Network error or connection closed\n        }\n        received_code = extract_code(buffer);\n        if (received_code >= 1000 && received_code < 2000)\n        {\n            printf(\"Error code received: %d\\r\\n\", received_code);\n            return 1; // Error code received\n        }\n    }\n    return 0; // Success\n}", "hash": "a3ceb8f488fa", "chunk_type": "function", "node_type": "function_definition", "signature": "unknown", "docstring": null, "chunk_size_bytes": 705, "original_size_bytes": 798, "start_byte": 2036, "end_byte": 2834}
{"chunk_id": "meca_samples:sample-programs/C/basic-tcp-communication/robot_interface.c:aac3b9012955", "repo": "meca_samples", "commit": "806f144", "lang": "c", "symbol": "wait_for_EOB", "qualified_name": "wait_for_EOB", "source_path": "sample-programs/C/basic-tcp-communication/robot_interface.c", "loc": [102, 105], "text": "int wait_for_EOB(Meca500 *robot)\n{\n    return wait_for_return_code(3004, robot); // EOB code is 3004\n}", "hash": "aac3b9012955", "chunk_type": "function", "node_type": "function_definition", "signature": "unknown", "docstring": null, "chunk_size_bytes": 102, "original_size_bytes": 102, "start_byte": 2919, "end_byte": 3021}
{"chunk_id": "meca_samples:sample-programs/C/basic-tcp-communication/robot_interface.c:025518e570b7", "repo": "meca_samples", "commit": "806f144", "lang": "c", "symbol": "activate_robot", "qualified_name": "activate_robot", "source_path": "sample-programs/C/basic-tcp-communication/robot_interface.c", "loc": [109, 121], "text": "int activate_robot(Meca500 *robot)\n{\n    EXIT_ON_ROBOT_NOT_CONNECTED(robot->connected_);\n    const char* command = \"ActivateRobot\\r\\n\";\n    int result = tcpip_send(command, strlen(command), &(robot->robot_connection_));\n    if (result != 0)\n    {\n        return -1;\n    }\n    return wait_for_return_code(3001, robot); // Wait for robot activated\n}", "hash": "025518e570b7", "chunk_type": "function", "node_type": "function_definition", "signature": "unknown", "docstring": null, "chunk_size_bytes": 347, "original_size_bytes": 357, "start_byte": 3106, "end_byte": 3463}
{"chunk_id": "meca_samples:sample-programs/C/basic-tcp-communication/robot_interface.c:f30bbe40fdee", "repo": "meca_samples", "commit": "806f144", "lang": "c", "symbol": "deactivate_robot", "qualified_name": "deactivate_robot", "source_path": "sample-programs/C/basic-tcp-communication/robot_interface.c", "loc": [125, 137], "text": "int deactivate_robot(Meca500 *robot)\n{\n    EXIT_ON_ROBOT_NOT_CONNECTED(robot->connected_);\n    const char* command = \"DeactivateRobot\\r\\n\";\n    int result = tcpip_send(command, strlen(command), &(robot->robot_connection_));\n    if (result != 0)\n    {\n        return -1;\n    }\n    return wait_for_return_code(3002, robot); // Wait for robot deactivated\n}", "hash": "f30bbe40fdee", "chunk_type": "function", "node_type": "function_definition", "signature": "unknown", "docstring": null, "chunk_size_bytes": 353, "original_size_bytes": 363, "start_byte": 3548, "end_byte": 3911}
{"chunk_id": "meca_samples:sample-programs/C/basic-tcp-communication/robot_interface.c:139a08550b1e", "repo": "meca_samples", "commit": "806f144", "lang": "c", "symbol": "activate_sim", "qualified_name": "activate_sim", "source_path": "sample-programs/C/basic-tcp-communication/robot_interface.c", "loc": [141, 153], "text": "int activate_sim(Meca500 *robot)\n{\n    EXIT_ON_ROBOT_NOT_CONNECTED(robot->connected_);\n    const char* command = \"ActivateSim\\r\\n\";\n    int result = tcpip_send(command, strlen(command), &(robot->robot_connection_));\n    if (result != 0)\n    {\n        return -1;\n    }\n    return wait_for_return_code(3056, robot); // Wait for sim activated\n}", "hash": "139a08550b1e", "chunk_type": "function", "node_type": "function_definition", "signature": "unknown", "docstring": null, "chunk_size_bytes": 341, "original_size_bytes": 351, "start_byte": 3996, "end_byte": 4347}
{"chunk_id": "meca_samples:sample-programs/C/basic-tcp-communication/robot_interface.c:9d7688134222", "repo": "meca_samples", "commit": "806f144", "lang": "c", "symbol": "deactivate_sim", "qualified_name": "deactivate_sim", "source_path": "sample-programs/C/basic-tcp-communication/robot_interface.c", "loc": [157, 169], "text": "int deactivate_sim(Meca500 *robot)\n{\n    EXIT_ON_ROBOT_NOT_CONNECTED(robot->connected_);\n    const char* command = \"DeactivateSim\\r\\n\";\n    int result = tcpip_send(command, strlen(command), &(robot->robot_connection_));\n    if (result != 0)\n    {\n        return -1;\n    }\n    return wait_for_return_code(3057, robot); // Wait for sim deactivated\n}", "hash": "9d7688134222", "chunk_type": "function", "node_type": "function_definition", "signature": "unknown", "docstring": null, "chunk_size_bytes": 347, "original_size_bytes": 357, "start_byte": 4432, "end_byte": 4789}
{"chunk_id": "meca_samples:sample-programs/C/basic-tcp-communication/robot_interface.c:b6580bc9dbbd", "repo": "meca_samples", "commit": "806f144", "lang": "c", "symbol": "home", "qualified_name": "home", "source_path": "sample-programs/C/basic-tcp-communication/robot_interface.c", "loc": [173, 185], "text": "int home(Meca500 *robot)\n{\n    EXIT_ON_ROBOT_NOT_CONNECTED(robot->connected_);\n    const char* command = \"Home\\r\\n\";\n    int result = tcpip_send(command, strlen(command), &(robot->robot_connection_));\n    if (result != 0)\n    {\n        return -1;\n    }\n    return wait_for_return_code(3003, robot); // Wait for homing done\n}", "hash": "b6580bc9dbbd", "chunk_type": "function", "node_type": "function_definition", "signature": "unknown", "docstring": null, "chunk_size_bytes": 324, "original_size_bytes": 334, "start_byte": 4874, "end_byte": 5208}
{"chunk_id": "meca_samples:sample-programs/C/basic-tcp-communication/robot_interface.c:4c87232164dc", "repo": "meca_samples", "commit": "806f144", "lang": "c", "symbol": "movejoints", "qualified_name": "movejoints", "source_path": "sample-programs/C/basic-tcp-communication/robot_interface.c", "loc": [189, 198], "text": "int movejoints(Meca500 *robot, float joints[6])\n{\n    EXIT_ON_ROBOT_NOT_CONNECTED(robot->connected_);\n    char command[256];\n    snprintf(command, sizeof(command), \"MoveJoints(%.3f,%.3f,%.3f,%.3f,%.3f,%.3f)\\r\\n\",\n             joints[0], joints[1], joints[2], joints[3], joints[4], joints[5]);\n    return tcpip_send(command, strlen(command), &(robot->robot_connection_));\n}", "hash": "4c87232164dc", "chunk_type": "function", "node_type": "function_definition", "signature": "unknown", "docstring": null, "chunk_size_bytes": 372, "original_size_bytes": 382, "start_byte": 5293, "end_byte": 5675}
{"chunk_id": "meca_samples:sample-programs/C/basic-tcp-communication/robot_interface.c:4c01c5d4c02f", "repo": "meca_samples", "commit": "806f144", "lang": "c", "symbol": "movepose", "qualified_name": "movepose", "source_path": "sample-programs/C/basic-tcp-communication/robot_interface.c", "loc": [202, 211], "text": "int movepose(Meca500 *robot, float euler[6])\n{\n    EXIT_ON_ROBOT_NOT_CONNECTED(robot->connected_);\n    char command[256];\n    snprintf(command, sizeof(command), \"MovePose(%.3f,%.3f,%.3f,%.3f,%.3f,%.3f)\\r\\n\",\n             euler[0], euler[1], euler[2], euler[3], euler[4], euler[5]);\n    return tcpip_send(command, strlen(command), &(robot->robot_connection_));\n}", "hash": "4c01c5d4c02f", "chunk_type": "function", "node_type": "function_definition", "signature": "unknown", "docstring": null, "chunk_size_bytes": 361, "original_size_bytes": 371, "start_byte": 5760, "end_byte": 6131}
{"chunk_id": "meca_samples:sample-programs/C/basic-tcp-communication/robot_interface.c:ccaab7fb64b7", "repo": "meca_samples", "commit": "806f144", "lang": "c", "symbol": "movetozero", "qualified_name": "movetozero", "source_path": "sample-programs/C/basic-tcp-communication/robot_interface.c", "loc": [215, 219], "text": "int movetozero(Meca500 *robot)\n{\n    float zero_joints[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n    return movejoints(robot, zero_joints);\n}", "hash": "ccaab7fb64b7", "chunk_type": "function", "node_type": "function_definition", "signature": "unknown", "docstring": null, "chunk_size_bytes": 136, "original_size_bytes": 136, "start_byte": 6216, "end_byte": 6352}
{"chunk_id": "meca_samples:sample-programs/C/basic-tcp-communication/robot_interface.c:439efa322184", "repo": "meca_samples", "commit": "806f144", "lang": "c", "symbol": "movetoshipping", "qualified_name": "movetoshipping", "source_path": "sample-programs/C/basic-tcp-communication/robot_interface.c", "loc": [223, 227], "text": "int movetoshipping(Meca500 *robot)\n{\n    float shipping_joints[6] = {0.0, -60.0, 60.0, 0.0, 0.0, 0.0};\n    return movejoints(robot, shipping_joints);\n}", "hash": "439efa322184", "chunk_type": "function", "node_type": "function_definition", "signature": "unknown", "docstring": null, "chunk_size_bytes": 151, "original_size_bytes": 151, "start_byte": 6437, "end_byte": 6588}
