{"chunk_id": "meca_samples:mecademicpy/examples/trajectory_logger_example.py:1e7b9f543d36", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "logging", "qualified_name": "logging", "source_path": "mecademicpy/examples/trajectory_logger_example.py", "loc": [10, 10], "text": "import logging", "hash": "1e7b9f543d36", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 14, "original_size_bytes": 14, "start_byte": 294, "end_byte": 308}
{"chunk_id": "meca_samples:mecademicpy/examples/trajectory_logger_example.py:5757795d86dd", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "pathlib", "qualified_name": "pathlib", "source_path": "mecademicpy/examples/trajectory_logger_example.py", "loc": [11, 11], "text": "import pathlib", "hash": "5757795d86dd", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 14, "original_size_bytes": 14, "start_byte": 309, "end_byte": 323}
{"chunk_id": "meca_samples:mecademicpy/examples/trajectory_logger_example.py:f1c5d1d07b59", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "mecademicpy.robot as mdr", "qualified_name": "mecademicpy.robot as mdr", "source_path": "mecademicpy/examples/trajectory_logger_example.py", "loc": [13, 13], "text": "import mecademicpy.robot as mdr", "hash": "f1c5d1d07b59", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 31, "original_size_bytes": 31, "start_byte": 325, "end_byte": 356}
{"chunk_id": "meca_samples:mecademicpy/examples/trajectory_logger_example.py:6c3ff3d6ecd9", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "mecademicpy.tools as tools", "qualified_name": "mecademicpy.tools as tools", "source_path": "mecademicpy/examples/trajectory_logger_example.py", "loc": [14, 14], "text": "import mecademicpy.tools as tools", "hash": "6c3ff3d6ecd9", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 33, "original_size_bytes": 33, "start_byte": 357, "end_byte": 390}
{"chunk_id": "meca_samples:mecademicpy/examples/trajectory_logger_example.py:5695bed7935d", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "trajectory_logger_example", "qualified_name": "trajectory_logger_example", "source_path": "mecademicpy/examples/trajectory_logger_example.py", "loc": [17, 104], "text": "def trajectory_logger_example():\n    \"\"\" Example that moves Mecademic robot while capturing the trajectory into a csv file \"\"\"\n    tools.SetDefaultLogger(logging.INFO, f'{pathlib.Path(__file__).stem}.log')\n    logger = logging.getLogger(__name__)\n    def on_checkpoint_reached(id):\n        logger.info(f'Loop {id}...')\n    with mdr.Robot() as robot:\n        callbacks = mdr.RobotCallbacks()\n        callbacks.on_checkpoint_reached = on_checkpoint_reached\n        robot.RegisterCallbacks(callbacks=callbacks, run_callbacks_in_separate_thread=True)\n        try:\n            robot.Connect(address='192.168.0.100')\n            logger.info('Connected to robot')\n        except mdr.CommunicationError as e:\n            logger.info(f'Robot failed to connect. Is the IP address correct? {e}')\n            raise e\n        try:\n            logger.info('Activating and homing robot...')\n            robot.ActivateRobot()\n            robot.Home()\n            robot.WaitHomed()\n            logger.info('Configuring robot\\'s behavior...')\n            robot.SetJointVel(50)\n            robot.SetJointAcc(50)\n            robot.SetBlending(50)\n            logger.info('Moving to a well-known starting position...')\n            if tools.robot_model_is_meca500(robot.GetRobotInfo().robot_model):\n                robot.MoveJoints(0, 0, 0, 0, 0, 0)\n            else:\n                robot.MoveJoints(10, -10, 0, 0)\n            robot.WaitIdle()\n            robot.WaitEndOfCycle()\n            logger.info('Start running test script while logging to csv file...')\n            with robot.FileLogger(0.001, fields=[\"TargetJointPos\", \"JointPos\"], file_name='logger_example_traj_file'):\n                for i in range(0, 2):\n                    robot.SetCheckpoint(i + 1)\n                    if tools.robot_model_is_meca500(robot.GetRobotInfo().robot_model):\n                        robot.MoveJoints(30, 25, 20, 15, 10, 5)\n                        robot.MoveJoints(-30, -25, -20, -15, -10, -5)\n                    else:\n                        robot.MoveJoints(30, 25, -20, 15)\n                        robot.MoveJoints(-30, -25, 0, -15)\n                robot.WaitIdle(60)\n            logger.info('Done!')\n        except Exception as exception:\n            if robot.GetStatusRobot().error_status:\n                logger.error(exception)\n                logger.error('Robot has encountered an error, attempting to clear...')\n                robot.ResetError()\n                robot.ResumeMotion()\n            else:\n                raise exception\n    logger.info('Now disconnected from the robot.')", "hash": "5695bed7935d", "chunk_type": "function", "node_type": "function_definition", "signature": "trajectory_logger_example()", "docstring": "Example that moves Mecademic robot while capturing the trajectory into a csv file", "chunk_size_bytes": 2567, "original_size_bytes": 3945, "start_byte": 393, "end_byte": 4338}
