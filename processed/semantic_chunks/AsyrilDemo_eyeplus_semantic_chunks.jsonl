{"chunk_id": "meca_samples:AsyrilDemo/eyeplus.py:d11613a5082c", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "socket", "qualified_name": "socket", "source_path": "AsyrilDemo/eyeplus.py", "loc": [1, 1], "text": "import socket", "hash": "d11613a5082c", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 13, "original_size_bytes": 13, "start_byte": 0, "end_byte": 13}
{"chunk_id": "meca_samples:AsyrilDemo/eyeplus.py:5f52be74e8f4", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "EyePlusClient", "qualified_name": "EyePlusClient", "source_path": "AsyrilDemo/eyeplus.py", "loc": [4, 80], "text": "class EyePlusClient:\n    def __init__(self):\n        self.__connection = None\n        self.termination = \"\\n\"\n    def connect(self, ipaddress, port):\n        self.ipaddress = ipaddress\n        self.__connection = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        self.__connection.connect((self.ipaddress, port))", "hash": "5f52be74e8f4", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 320, "original_size_bytes": 323, "start_byte": 16, "end_byte": 2298}
{"chunk_id": "meca_samples:AsyrilDemo/eyeplus.py:3413f054719e", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "EyePlusClient.__init__", "source_path": "AsyrilDemo/eyeplus.py", "loc": [6, 8], "text": "def __init__(self):\n        self.__connection = None\n        self.termination = \"\\n\"", "hash": "3413f054719e", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self)", "docstring": null, "chunk_size_bytes": 84, "original_size_bytes": 84, "start_byte": 42, "end_byte": 126}
{"chunk_id": "meca_samples:AsyrilDemo/eyeplus.py:f660b3c4556f", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "connect", "qualified_name": "EyePlusClient.connect", "source_path": "AsyrilDemo/eyeplus.py", "loc": [10, 13], "text": "def connect(self, ipaddress, port):\n        self.ipaddress = ipaddress\n        self.__connection = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        self.__connection.connect((self.ipaddress, port))", "hash": "f660b3c4556f", "chunk_type": "method", "node_type": "function_definition", "signature": "connect(self, ipaddress, port)", "docstring": null, "chunk_size_bytes": 206, "original_size_bytes": 206, "start_byte": 132, "end_byte": 338}
{"chunk_id": "meca_samples:AsyrilDemo/eyeplus.py:9fd3aa2731f9", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "disconnect", "qualified_name": "EyePlusClient.disconnect", "source_path": "AsyrilDemo/eyeplus.py", "loc": [15, 17], "text": "def disconnect(self):\n        self.__connection.close()\n        self.__connection = None", "hash": "9fd3aa2731f9", "chunk_type": "method", "node_type": "function_definition", "signature": "disconnect(self)", "docstring": null, "chunk_size_bytes": 88, "original_size_bytes": 88, "start_byte": 344, "end_byte": 432}
{"chunk_id": "meca_samples:AsyrilDemo/eyeplus.py:f2dabc26fab8", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "stop_production", "qualified_name": "EyePlusClient.stop_production", "source_path": "AsyrilDemo/eyeplus.py", "loc": [19, 23], "text": "def stop_production(self):\n        command = \"stop production\"\n        self.__send_raw__(command)\n        response = self.__receive_raw__()\n        return response", "hash": "f2dabc26fab8", "chunk_type": "method", "node_type": "function_definition", "signature": "stop_production(self)", "docstring": null, "chunk_size_bytes": 163, "original_size_bytes": 163, "start_byte": 438, "end_byte": 601}
{"chunk_id": "meca_samples:AsyrilDemo/eyeplus.py:73dea000676d", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "start_production", "qualified_name": "EyePlusClient.start_production", "source_path": "AsyrilDemo/eyeplus.py", "loc": [25, 29], "text": "def start_production(self, recipe):\n        command = \"start production \" + str(recipe)\n        self.__send_raw__(command)\n        response = self.__receive_raw__()\n        return response", "hash": "73dea000676d", "chunk_type": "method", "node_type": "function_definition", "signature": "start_production(self, recipe)", "docstring": null, "chunk_size_bytes": 188, "original_size_bytes": 188, "start_byte": 607, "end_byte": 795}
{"chunk_id": "meca_samples:AsyrilDemo/eyeplus.py:925ee07b0b24", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "get_part", "qualified_name": "EyePlusClient.get_part", "source_path": "AsyrilDemo/eyeplus.py", "loc": [31, 35], "text": "def get_part(self):\n        command = \"get_part\"\n        self.__send_raw__(command)\n        response = self.__receive_raw__()\n        return response", "hash": "925ee07b0b24", "chunk_type": "method", "node_type": "function_definition", "signature": "get_part(self)", "docstring": null, "chunk_size_bytes": 149, "original_size_bytes": 149, "start_byte": 801, "end_byte": 950}
{"chunk_id": "meca_samples:AsyrilDemo/eyeplus.py:da2d8c3f177d", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "force_take_image", "qualified_name": "EyePlusClient.force_take_image", "source_path": "AsyrilDemo/eyeplus.py", "loc": [37, 41], "text": "def force_take_image(self):\n        command = \"force_take_image\"\n        self.__send_raw__(command)\n        response = self.__receive_raw__()\n        return response", "hash": "da2d8c3f177d", "chunk_type": "method", "node_type": "function_definition", "signature": "force_take_image(self)", "docstring": null, "chunk_size_bytes": 165, "original_size_bytes": 165, "start_byte": 956, "end_byte": 1121}
{"chunk_id": "meca_samples:AsyrilDemo/eyeplus.py:7d9d4f135e1a", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "prepare_part", "qualified_name": "EyePlusClient.prepare_part", "source_path": "AsyrilDemo/eyeplus.py", "loc": [43, 47], "text": "def prepare_part(self):\n        command = \"prepare_part\"\n        self.__send_raw__(command)\n        response = self.__receive_raw__()\n        return response", "hash": "7d9d4f135e1a", "chunk_type": "method", "node_type": "function_definition", "signature": "prepare_part(self)", "docstring": null, "chunk_size_bytes": 157, "original_size_bytes": 157, "start_byte": 1127, "end_byte": 1284}
{"chunk_id": "meca_samples:AsyrilDemo/eyeplus.py:2efe9457d5ac", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "can_take_image", "qualified_name": "EyePlusClient.can_take_image", "source_path": "AsyrilDemo/eyeplus.py", "loc": [49, 53], "text": "def can_take_image(self, value):\n        command = \"can_take_image \" + str(value).lower()\n        self.__send_raw__(command)\n        response = self.__receive_raw__()\n        return response", "hash": "2efe9457d5ac", "chunk_type": "method", "node_type": "function_definition", "signature": "can_take_image(self, value)", "docstring": null, "chunk_size_bytes": 190, "original_size_bytes": 190, "start_byte": 1290, "end_byte": 1480}
{"chunk_id": "meca_samples:AsyrilDemo/eyeplus.py:4788da55d339", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "set_parameter", "qualified_name": "EyePlusClient.set_parameter", "source_path": "AsyrilDemo/eyeplus.py", "loc": [55, 59], "text": "def set_parameter(self, parameter):\n        command = \"set_parameter \" + str(parameter)\n        self.__send_raw__(command)\n        response = self.__receive_raw__()\n        return response", "hash": "4788da55d339", "chunk_type": "method", "node_type": "function_definition", "signature": "set_parameter(self, parameter)", "docstring": null, "chunk_size_bytes": 188, "original_size_bytes": 188, "start_byte": 1486, "end_byte": 1674}
{"chunk_id": "meca_samples:AsyrilDemo/eyeplus.py:fe605f75b5c2", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__send_raw__", "qualified_name": "EyePlusClient.__send_raw__", "source_path": "AsyrilDemo/eyeplus.py", "loc": [61, 63], "text": "def __send_raw__(self, command):\n        self.__connection.send(\n            bytes(f'{command}{self.termination}', encoding=\"ascii\"))", "hash": "fe605f75b5c2", "chunk_type": "method", "node_type": "function_definition", "signature": "__send_raw__(self, command)", "docstring": null, "chunk_size_bytes": 133, "original_size_bytes": 133, "start_byte": 1680, "end_byte": 1813}
{"chunk_id": "meca_samples:AsyrilDemo/eyeplus.py:2457b61a02ee", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__receive_raw__", "qualified_name": "EyePlusClient.__receive_raw__", "source_path": "AsyrilDemo/eyeplus.py", "loc": [65, 67], "text": "def __receive_raw__(self):\n        response = self.__connection.recv(4096).decode(\"ascii\")\n        return response", "hash": "2457b61a02ee", "chunk_type": "method", "node_type": "function_definition", "signature": "__receive_raw__(self)", "docstring": null, "chunk_size_bytes": 114, "original_size_bytes": 114, "start_byte": 1819, "end_byte": 1933}
{"chunk_id": "meca_samples:AsyrilDemo/eyeplus.py:4419e38c584e", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "extract_status", "qualified_name": "EyePlusClient.extract_status", "source_path": "AsyrilDemo/eyeplus.py", "loc": [70, 72], "text": "def extract_status(response):\n        status = int(response[:3])\n        return status", "hash": "4419e38c584e", "chunk_type": "method", "node_type": "function_definition", "signature": "extract_status(response)", "docstring": null, "chunk_size_bytes": 86, "original_size_bytes": 86, "start_byte": 1957, "end_byte": 2043}
{"chunk_id": "meca_samples:AsyrilDemo/eyeplus.py:406adef3ffc2", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "extract_position", "qualified_name": "EyePlusClient.extract_position", "source_path": "AsyrilDemo/eyeplus.py", "loc": [75, 80], "text": "def extract_position(response: str):\n        split_response = response.split(' ')\n        x = float(split_response[1][2:])\n        y = float(split_response[2][2:])\n        rz = float(split_response[3][3:])\n        return [x, y, rz]", "hash": "406adef3ffc2", "chunk_type": "method", "node_type": "function_definition", "signature": "extract_position(response: str)", "docstring": null, "chunk_size_bytes": 231, "original_size_bytes": 231, "start_byte": 2067, "end_byte": 2298}
