{"chunk_id": "meca_samples:Demo_Microscope/frontend/VideoPlayer.py:f3fd158642fc", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "QtGui", "qualified_name": "QtGui", "source_path": "Demo_Microscope/frontend/VideoPlayer.py", "loc": [1, 1], "text": "from PyQt5 import QtGui", "hash": "f3fd158642fc", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 23, "original_size_bytes": 23, "start_byte": 0, "end_byte": 23}
{"chunk_id": "meca_samples:Demo_Microscope/frontend/VideoPlayer.py:f6c111980467", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "QWidget", "qualified_name": "QWidget", "source_path": "Demo_Microscope/frontend/VideoPlayer.py", "loc": [2, 2], "text": "from PyQt5.QtWidgets import QWidget, QApplication, QLabel, QVBoxLayout", "hash": "f6c111980467", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 70, "original_size_bytes": 70, "start_byte": 24, "end_byte": 94}
{"chunk_id": "meca_samples:Demo_Microscope/frontend/VideoPlayer.py:980c34bd8115", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "QPixmap", "qualified_name": "QPixmap", "source_path": "Demo_Microscope/frontend/VideoPlayer.py", "loc": [3, 3], "text": "from PyQt5.QtGui import QPixmap", "hash": "980c34bd8115", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 31, "original_size_bytes": 31, "start_byte": 95, "end_byte": 126}
{"chunk_id": "meca_samples:Demo_Microscope/frontend/VideoPlayer.py:83d8e9e427df", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "sys", "qualified_name": "sys", "source_path": "Demo_Microscope/frontend/VideoPlayer.py", "loc": [4, 4], "text": "import sys", "hash": "83d8e9e427df", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 10, "original_size_bytes": 10, "start_byte": 127, "end_byte": 137}
{"chunk_id": "meca_samples:Demo_Microscope/frontend/VideoPlayer.py:2b51dcf04711", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "cv2", "qualified_name": "cv2", "source_path": "Demo_Microscope/frontend/VideoPlayer.py", "loc": [5, 5], "text": "import cv2", "hash": "2b51dcf04711", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 10, "original_size_bytes": 10, "start_byte": 138, "end_byte": 148}
{"chunk_id": "meca_samples:Demo_Microscope/frontend/VideoPlayer.py:52e48de42cba", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "pyqtSignal", "qualified_name": "pyqtSignal", "source_path": "Demo_Microscope/frontend/VideoPlayer.py", "loc": [6, 6], "text": "from PyQt5.QtCore import pyqtSignal, pyqtSlot, Qt, QThread", "hash": "52e48de42cba", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 58, "original_size_bytes": 58, "start_byte": 149, "end_byte": 207}
{"chunk_id": "meca_samples:Demo_Microscope/frontend/VideoPlayer.py:bcab709e15be", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "numpy as np", "qualified_name": "numpy as np", "source_path": "Demo_Microscope/frontend/VideoPlayer.py", "loc": [7, 7], "text": "import numpy as np", "hash": "bcab709e15be", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 18, "original_size_bytes": 18, "start_byte": 208, "end_byte": 226}
{"chunk_id": "meca_samples:Demo_Microscope/frontend/VideoPlayer.py:7f8bc70e792f", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "VideoThread", "qualified_name": "VideoThread", "source_path": "Demo_Microscope/frontend/VideoPlayer.py", "loc": [10, 22], "text": "class VideoThread(QThread):\n    change_pixmap_signal = pyqtSignal(np.ndarray)\n    def run(self):\n        self.cap = cv2.VideoCapture(0)\n        while True:\n            ret, cv_img = self.cap.read()\n            if ret:\n                self.change_pixmap_signal.emit(cv_img)", "hash": "7f8bc70e792f", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 272, "original_size_bytes": 305, "start_byte": 229, "end_byte": 614}
{"chunk_id": "meca_samples:Demo_Microscope/frontend/VideoPlayer.py:233dfb697e90", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "run", "qualified_name": "VideoThread.run", "source_path": "Demo_Microscope/frontend/VideoPlayer.py", "loc": [13, 19], "text": "def run(self):\n        self.cap = cv2.VideoCapture(0)\n        while True:\n            ret, cv_img = self.cap.read()\n            if ret:\n                self.change_pixmap_signal.emit(cv_img)", "hash": "233dfb697e90", "chunk_type": "method", "node_type": "function_definition", "signature": "run(self)", "docstring": null, "chunk_size_bytes": 190, "original_size_bytes": 221, "start_byte": 312, "end_byte": 533}
{"chunk_id": "meca_samples:Demo_Microscope/frontend/VideoPlayer.py:90f57619548b", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "change_capture", "qualified_name": "VideoThread.change_capture", "source_path": "Demo_Microscope/frontend/VideoPlayer.py", "loc": [21, 22], "text": "def change_capture(self, value):\n        self.cap = cv2.VideoCapture(value)", "hash": "90f57619548b", "chunk_type": "method", "node_type": "function_definition", "signature": "change_capture(self, value)", "docstring": null, "chunk_size_bytes": 75, "original_size_bytes": 75, "start_byte": 539, "end_byte": 614}
{"chunk_id": "meca_samples:Demo_Microscope/frontend/VideoPlayer.py:40ea108b43a3", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "VideoPlayer", "qualified_name": "VideoPlayer", "source_path": "Demo_Microscope/frontend/VideoPlayer.py", "loc": [25, 61], "text": "class VideoPlayer(QWidget):\n    def __init__(self, args, *kwargs):\n        super().__init__(args, *kwargs)\n        self.disply_width = 1024\n        self.display_height = 768\n        self.cameraIndex = 0\n        self.image_label = QLabel(self)\n        self.image_label.resize(self.disply_width, self.display_height)", "hash": "40ea108b43a3", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 314, "original_size_bytes": 405, "start_byte": 617, "end_byte": 2035}
{"chunk_id": "meca_samples:Demo_Microscope/frontend/VideoPlayer.py:a7e8036c8e5d", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "VideoPlayer.__init__", "source_path": "Demo_Microscope/frontend/VideoPlayer.py", "loc": [26, 40], "text": "def __init__(self, args, *kwargs):\n        super().__init__(args, *kwargs)\n        self.disply_width = 1024\n        self.display_height = 768\n        self.cameraIndex = 0\n        self.image_label = QLabel(self)\n        self.image_label.resize(self.disply_width, self.display_height)\n        self.thread = VideoThread()\n        self.thread.change_pixmap_signal.connect(self.update_image)\n        self.thread.start()", "hash": "a7e8036c8e5d", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self, args, *kwargs)", "docstring": null, "chunk_size_bytes": 414, "original_size_bytes": 586, "start_byte": 649, "end_byte": 1235}
{"chunk_id": "meca_samples:Demo_Microscope/frontend/VideoPlayer.py:f358ef170d49", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "change_capture", "qualified_name": "VideoPlayer.change_capture", "source_path": "Demo_Microscope/frontend/VideoPlayer.py", "loc": [42, 44], "text": "def change_capture(self, value):\n        self.cameraIndex = value\n        self.thread.change_capture(value)", "hash": "f358ef170d49", "chunk_type": "method", "node_type": "function_definition", "signature": "change_capture(self, value)", "docstring": null, "chunk_size_bytes": 107, "original_size_bytes": 107, "start_byte": 1245, "end_byte": 1352}
{"chunk_id": "meca_samples:Demo_Microscope/frontend/VideoPlayer.py:0b72b165eedc", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "update_image", "qualified_name": "VideoPlayer.update_image", "source_path": "Demo_Microscope/frontend/VideoPlayer.py", "loc": [49, 52], "text": "def update_image(self, cv_img):\n        \"\"\"Updates the image_label with a new opencv image\"\"\"\n        qt_img = self.convert_cv_qt(cv_img)\n        self.image_label.setPixmap(qt_img)", "hash": "0b72b165eedc", "chunk_type": "method", "node_type": "function_definition", "signature": "update_image(self, cv_img)", "docstring": "Updates the image_label with a new opencv image", "chunk_size_bytes": 180, "original_size_bytes": 180, "start_byte": 1386, "end_byte": 1566}
{"chunk_id": "meca_samples:Demo_Microscope/frontend/VideoPlayer.py:968a050b456f", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "convert_cv_qt", "qualified_name": "VideoPlayer.convert_cv_qt", "source_path": "Demo_Microscope/frontend/VideoPlayer.py", "loc": [54, 61], "text": "def convert_cv_qt(self, cv_img):\n        \"\"\"Convert from an opencv image to QPixmap\"\"\"\n        rgb_image = cv2.cvtColor(cv_img, cv2.COLOR_BGR2RGB)\n        h, w, ch = rgb_image.shape\n        bytes_per_line = ch * w\n        convert_to_Qt_format = QtGui.QImage(rgb_image.data, w, h, bytes_per_line, QtGui.QImage.Format_RGB888)\n        p = convert_to_Qt_format.scaled(self.disply_width, self.display_height, Qt.KeepAspectRatio)\n        return QPixmap.fromImage(p)", "hash": "968a050b456f", "chunk_type": "method", "node_type": "function_definition", "signature": "convert_cv_qt(self, cv_img)", "docstring": "Convert from an opencv image to QPixmap", "chunk_size_bytes": 459, "original_size_bytes": 459, "start_byte": 1576, "end_byte": 2035}
