{"chunk_id": "meca_samples:RAMInsertion/forceFunctions.py:29fb3f785ef0", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "Sensor", "qualified_name": "Sensor", "source_path": "RAMInsertion/forceFunctions.py", "loc": [1, 1], "text": "from NetFT import Sensor", "hash": "29fb3f785ef0", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 24, "original_size_bytes": 24, "start_byte": 0, "end_byte": 24}
{"chunk_id": "meca_samples:RAMInsertion/forceFunctions.py:2e2e6a61c0d3", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "Thread", "qualified_name": "Thread", "source_path": "RAMInsertion/forceFunctions.py", "loc": [2, 2], "text": "from threading import Thread", "hash": "2e2e6a61c0d3", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 28, "original_size_bytes": 28, "start_byte": 25, "end_byte": 53}
{"chunk_id": "meca_samples:RAMInsertion/forceFunctions.py:95cadd7c8da4", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "Queue", "qualified_name": "Queue", "source_path": "RAMInsertion/forceFunctions.py", "loc": [3, 3], "text": "from queue import Queue", "hash": "95cadd7c8da4", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 23, "original_size_bytes": 23, "start_byte": 54, "end_byte": 77}
{"chunk_id": "meca_samples:RAMInsertion/forceFunctions.py:f1e1a6bdbc5c", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "Robot", "qualified_name": "Robot", "source_path": "RAMInsertion/forceFunctions.py", "loc": [4, 4], "text": "from mecademicpy.robot import Robot", "hash": "f1e1a6bdbc5c", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 35, "original_size_bytes": 35, "start_byte": 78, "end_byte": 113}
{"chunk_id": "meca_samples:RAMInsertion/forceFunctions.py:e3fe2efec582", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "sleep", "qualified_name": "sleep", "source_path": "RAMInsertion/forceFunctions.py", "loc": [5, 5], "text": "from time import sleep", "hash": "e3fe2efec582", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 22, "original_size_bytes": 22, "start_byte": 114, "end_byte": 136}
{"chunk_id": "meca_samples:RAMInsertion/forceFunctions.py:17fef5f5890f", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "MoveThread", "qualified_name": "MoveThread", "source_path": "RAMInsertion/forceFunctions.py", "loc": [9, 55], "text": "class MoveThread(Thread):\n    def __init__(self, threadid, name, counter, robot: Robot, queue: Queue):\n        Thread.__init__(self)\n        self.threadid = threadid\n        self.name = name\n        self.counter = counter\n        self.robot = robot\n        self.queue = queue\n        self.vel = 0\n        self.direction = [0, 0, 0, 0, 0, 0]", "hash": "17fef5f5890f", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 340, "original_size_bytes": 341, "start_byte": 172, "end_byte": 1888}
{"chunk_id": "meca_samples:RAMInsertion/forceFunctions.py:2ef3e69269cf", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "MoveThread.__init__", "source_path": "RAMInsertion/forceFunctions.py", "loc": [10, 18], "text": "def __init__(self, threadid, name, counter, robot: Robot, queue: Queue):\n        Thread.__init__(self)\n        self.threadid = threadid\n        self.name = name\n        self.counter = counter\n        self.robot = robot\n        self.queue = queue\n        self.vel = 0\n        self.direction = [0, 0, 0, 0, 0, 0]", "hash": "2ef3e69269cf", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self, threadid, name, counter, robot: Robot, queue: Queue)", "docstring": null, "chunk_size_bytes": 310, "original_size_bytes": 310, "start_byte": 202, "end_byte": 512}
{"chunk_id": "meca_samples:RAMInsertion/forceFunctions.py:8b635f2a22a1", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "move_settings", "qualified_name": "MoveThread.move_settings", "source_path": "RAMInsertion/forceFunctions.py", "loc": [20, 35], "text": "def move_settings(self, speed=1, direction=\"z+\"):\n        self.vel = speed\n        if direction.upper() == \"Z+\":\n            self.direction = [0, 0, 1, 0, 0, 0]\n        elif direction.upper() == \"Z-\":\n            self.direction = [0, 0, -1, 0, 0, 0]\n        elif direction.upper() == \"Y+\":\n            self.direction = [0, 1, 0, 0, 0, 0]\n        elif direction.upper() == \"Y-\":\n            self.direction = [0, -1, 0, 0, 0, 0]\n        elif direction.upper() == \"X+\":\n            self.direction = [1, 0, 0, 0, 0, 0]\n        elif direction.upper() == \"X-\":\n            self.direction = [-1, 0, 0, 0, 0, 0]\n        else:\n            raise ValueError('The direction is not valid')", "hash": "8b635f2a22a1", "chunk_type": "method", "node_type": "function_definition", "signature": "move_settings(self, speed=1, direction=\"z+\")", "docstring": null, "chunk_size_bytes": 676, "original_size_bytes": 676, "start_byte": 518, "end_byte": 1194}
{"chunk_id": "meca_samples:RAMInsertion/forceFunctions.py:b5c9f941b127", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "connect", "qualified_name": "MoveThread.connect", "source_path": "RAMInsertion/forceFunctions.py", "loc": [37, 40], "text": "def connect(self, address='192.168.0.100'):\n        self.robot.Connect(address)\n        self.robot.ActivateRobot()\n        self.robot.Home()", "hash": "b5c9f941b127", "chunk_type": "method", "node_type": "function_definition", "signature": "connect(self, address='192.168.0.100')", "docstring": null, "chunk_size_bytes": 140, "original_size_bytes": 140, "start_byte": 1200, "end_byte": 1340}
{"chunk_id": "meca_samples:RAMInsertion/forceFunctions.py:d7212062ca4f", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "run", "qualified_name": "MoveThread.run", "source_path": "RAMInsertion/forceFunctions.py", "loc": [42, 55], "text": "def run(self):\n        self.robot.ResumeMotion()\n        while(True):\n            if not self.queue.empty():\n                val = self.queue.get()\n                if val == 'stop':\n                    deltamove = [10*x*-1.0 for x in self.direction]\n                    self.robot.MoveLinRelTRF(*deltamove)\n                    self.queue.put('finished')\n                    break\n            else:\n                vel_move = [self.vel*x for x in self.direction]\n                self.robot.MoveLinVelTRF(*vel_move)\n                sleep(0.001)", "hash": "d7212062ca4f", "chunk_type": "method", "node_type": "function_definition", "signature": "run(self)", "docstring": null, "chunk_size_bytes": 542, "original_size_bytes": 542, "start_byte": 1346, "end_byte": 1888}
{"chunk_id": "meca_samples:RAMInsertion/forceFunctions.py:c955d6ba345b", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "_ForceThread", "qualified_name": "_ForceThread", "source_path": "RAMInsertion/forceFunctions.py", "loc": [58, 65], "text": "class _ForceThread(Thread):\n    def __init__(self, threadid, name, counter, sensor: Sensor, queue: Queue):\n        Thread.__init__(self)\n        self.threadid = threadid\n        self.name = name\n        self.counter = counter\n        self.sensor = sensor\n        self.queue = queue", "hash": "c955d6ba345b", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 281, "original_size_bytes": 281, "start_byte": 1921, "end_byte": 2202}
{"chunk_id": "meca_samples:RAMInsertion/forceFunctions.py:cf93e0ceb18f", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "_ForceThread.__init__", "source_path": "RAMInsertion/forceFunctions.py", "loc": [59, 65], "text": "def __init__(self, threadid, name, counter, sensor: Sensor, queue: Queue):\n        Thread.__init__(self)\n        self.threadid = threadid\n        self.name = name\n        self.counter = counter\n        self.sensor = sensor\n        self.queue = queue", "hash": "cf93e0ceb18f", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self, threadid, name, counter, sensor: Sensor, queue: Queue)", "docstring": null, "chunk_size_bytes": 249, "original_size_bytes": 249, "start_byte": 1953, "end_byte": 2202}
{"chunk_id": "meca_samples:RAMInsertion/forceFunctions.py:44f06c2bbab2", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "FindSurface", "qualified_name": "FindSurface", "source_path": "RAMInsertion/forceFunctions.py", "loc": [68, 82], "text": "class FindSurface(_ForceThread):\n    def __init__(self, threadid, name, counter, sensor, queue, force, direction=2):\n        super().__init__(threadid, name, counter, sensor, queue)\n        self.force = force\n        self.direction = direction\n    def run(self):\n        self.sensor.zero()\n        sleep(0.5)\n        while(True):\n            force = self.sensor.getForce()[self.direction]", "hash": "44f06c2bbab2", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 388, "original_size_bytes": 389, "start_byte": 2205, "end_byte": 2722}
{"chunk_id": "meca_samples:RAMInsertion/forceFunctions.py:9f6f5077484d", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "FindSurface.__init__", "source_path": "RAMInsertion/forceFunctions.py", "loc": [69, 72], "text": "def __init__(self, threadid, name, counter, sensor, queue, force, direction=2):\n        super().__init__(threadid, name, counter, sensor, queue)\n        self.force = force\n        self.direction = direction", "hash": "9f6f5077484d", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self, threadid, name, counter, sensor, queue, force, direction=2)", "docstring": null, "chunk_size_bytes": 206, "original_size_bytes": 206, "start_byte": 2242, "end_byte": 2448}
{"chunk_id": "meca_samples:RAMInsertion/forceFunctions.py:2481032c9839", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "run", "qualified_name": "FindSurface.run", "source_path": "RAMInsertion/forceFunctions.py", "loc": [74, 82], "text": "def run(self):\n        self.sensor.zero()\n        sleep(0.5)\n        while(True):\n            force = self.sensor.getForce()[self.direction]\n            sleep(0.001)\n            if (-1.0*force) > self.force:\n                self.queue.put('stop')\n                break", "hash": "2481032c9839", "chunk_type": "method", "node_type": "function_definition", "signature": "run(self)", "docstring": null, "chunk_size_bytes": 268, "original_size_bytes": 268, "start_byte": 2454, "end_byte": 2722}
{"chunk_id": "meca_samples:RAMInsertion/forceFunctions.py:29edc592779e", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "ClickDetection", "qualified_name": "ClickDetection", "source_path": "RAMInsertion/forceFunctions.py", "loc": [84, 108], "text": "class ClickDetection(_ForceThread):\n    def __init__(self, threadid, name, counter, sensor: Sensor, queue: Queue, max_force, force_delta, direction=2):\n        super().__init__(threadid, name, counter, sensor, queue)\n        self.max_force = max_force\n        self.force_delta = force_delta\n        self.direction = direction\n    def run(self):\n        self.sensor.zero()\n        sleep(0.50)\n        peak_force = 0", "hash": "29edc592779e", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 414, "original_size_bytes": 415, "start_byte": 2724, "end_byte": 3659}
{"chunk_id": "meca_samples:RAMInsertion/forceFunctions.py:9c7540195d92", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "ClickDetection.__init__", "source_path": "RAMInsertion/forceFunctions.py", "loc": [85, 89], "text": "def __init__(self, threadid, name, counter, sensor: Sensor, queue: Queue, max_force, force_delta, direction=2):\n        super().__init__(threadid, name, counter, sensor, queue)\n        self.max_force = max_force\n        self.force_delta = force_delta\n        self.direction = direction", "hash": "9c7540195d92", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self, threadid, name, counter, sensor: Sensor, queue: Queue, max_force, force_delta, direction=2)", "docstring": null, "chunk_size_bytes": 285, "original_size_bytes": 285, "start_byte": 2764, "end_byte": 3049}
{"chunk_id": "meca_samples:RAMInsertion/forceFunctions.py:27c175c51161", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "run", "qualified_name": "ClickDetection.run", "source_path": "RAMInsertion/forceFunctions.py", "loc": [91, 108], "text": "def run(self):\n        self.sensor.zero()\n        sleep(0.50)\n        peak_force = 0\n        while(True):\n            force = (-1)*self.sensor.getForce()[self.direction]\n            if force > self.max_force:\n                print(\"Reached max force\")\n                self.queue.put('stop')\n                break\n            if force>peak_force:\n                peak_force = force\n            force_diff = peak_force-force\n            if force_diff > self.force_delta:\n                print(\"Click detected!\")\n                print(force_diff)\n                self.queue.put('stop')\n                break", "hash": "27c175c51161", "chunk_type": "method", "node_type": "function_definition", "signature": "run(self)", "docstring": null, "chunk_size_bytes": 604, "original_size_bytes": 604, "start_byte": 3055, "end_byte": 3659}
