{"chunk_id": "meca_samples:SLAS2025/src/utilities.py:810bf2e4448e", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "deepcopy", "qualified_name": "deepcopy", "source_path": "SLAS2025/src/utilities.py", "loc": [1, 1], "text": "from copy import deepcopy", "hash": "810bf2e4448e", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 25, "original_size_bytes": 25, "start_byte": 0, "end_byte": 25}
{"chunk_id": "meca_samples:SLAS2025/src/utilities.py:136481cad404", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "XbotType", "qualified_name": "XbotType", "source_path": "SLAS2025/src/utilities.py", "loc": [4, 7], "text": "class XbotType():\n    def __init__(self, bot_type: str, id: int):\n        self.bot_type = bot_type\n        self.id = id", "hash": "136481cad404", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 119, "original_size_bytes": 119, "start_byte": 28, "end_byte": 147}
{"chunk_id": "meca_samples:SLAS2025/src/utilities.py:c9805f088123", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "XbotType.__init__", "source_path": "SLAS2025/src/utilities.py", "loc": [5, 7], "text": "def __init__(self, bot_type: str, id: int):\n        self.bot_type = bot_type\n        self.id = id", "hash": "c9805f088123", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self, bot_type: str, id: int)", "docstring": null, "chunk_size_bytes": 97, "original_size_bytes": 97, "start_byte": 50, "end_byte": 147}
{"chunk_id": "meca_samples:SLAS2025/src/utilities.py:284cde08bf99", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "PlanarStateSLAS", "qualified_name": "PlanarStateSLAS", "source_path": "SLAS2025/src/utilities.py", "loc": [10, 50], "text": "class PlanarStateSLAS():\n    def __init__(self, xbot_list: list[XbotType]):\n        self.state_dict = {}\n        self.set_state(xbot_list)\n    def set_state(self, bots: XbotType):\n        self.state_dict[\"pp\"] = bots[0]\n        self.state_dict[\"wp\"] = bots[1]\n        self.state_dict[\"sv\"] = bots[2]\n        self.state_dict[\"sw\"] = bots[3]", "hash": "284cde08bf99", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 339, "original_size_bytes": 341, "start_byte": 150, "end_byte": 1706}
{"chunk_id": "meca_samples:SLAS2025/src/utilities.py:62c023c76a2d", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "PlanarStateSLAS.__init__", "source_path": "SLAS2025/src/utilities.py", "loc": [11, 13], "text": "def __init__(self, xbot_list: list[XbotType]):\n        self.state_dict = {}\n        self.set_state(xbot_list)", "hash": "62c023c76a2d", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self, xbot_list: list[XbotType])", "docstring": null, "chunk_size_bytes": 109, "original_size_bytes": 109, "start_byte": 179, "end_byte": 288}
{"chunk_id": "meca_samples:SLAS2025/src/utilities.py:4e479e56eed2", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "set_state", "qualified_name": "PlanarStateSLAS.set_state", "source_path": "SLAS2025/src/utilities.py", "loc": [15, 19], "text": "def set_state(self, bots: XbotType):\n        self.state_dict[\"pp\"] = bots[0]\n        self.state_dict[\"wp\"] = bots[1]\n        self.state_dict[\"sv\"] = bots[2]\n        self.state_dict[\"sw\"] = bots[3]", "hash": "4e479e56eed2", "chunk_type": "method", "node_type": "function_definition", "signature": "set_state(self, bots: XbotType)", "docstring": null, "chunk_size_bytes": 196, "original_size_bytes": 196, "start_byte": 294, "end_byte": 490}
{"chunk_id": "meca_samples:SLAS2025/src/utilities.py:b9a156118920", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "get_id_positions", "qualified_name": "PlanarStateSLAS.get_id_positions", "source_path": "SLAS2025/src/utilities.py", "loc": [21, 25], "text": "def get_id_positions(self) -> list[int]:\n        return [self.state_dict[\"pp\"].id,\n                self.state_dict[\"wp\"].id,\n                self.state_dict[\"sw\"].id,\n                self.state_dict[\"sv\"].id]", "hash": "b9a156118920", "chunk_type": "method", "node_type": "function_definition", "signature": "get_id_positions(self)", "docstring": null, "chunk_size_bytes": 208, "original_size_bytes": 208, "start_byte": 496, "end_byte": 704}
{"chunk_id": "meca_samples:SLAS2025/src/utilities.py:e2d452eadae6", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "swap_pipetting", "qualified_name": "PlanarStateSLAS.swap_pipetting", "source_path": "SLAS2025/src/utilities.py", "loc": [27, 32], "text": "def swap_pipetting(self):\n        temp_pp = deepcopy(self.state_dict[\"pp\"])\n        temp_wp = deepcopy(self.state_dict[\"wp\"])\n        self.state_dict[\"pp\"] = deepcopy(temp_wp)\n        self.state_dict[\"wp\"] = deepcopy(temp_pp)", "hash": "e2d452eadae6", "chunk_type": "method", "node_type": "function_definition", "signature": "swap_pipetting(self)", "docstring": null, "chunk_size_bytes": 225, "original_size_bytes": 226, "start_byte": 710, "end_byte": 936}
{"chunk_id": "meca_samples:SLAS2025/src/utilities.py:97fcfec44ff4", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "swap_full", "qualified_name": "PlanarStateSLAS.swap_full", "source_path": "SLAS2025/src/utilities.py", "loc": [34, 50], "text": "def swap_full(self):\n        temp_pp = deepcopy(self.state_dict[\"pp\"])\n        temp_wp = deepcopy(self.state_dict[\"wp\"])\n        temp_sw = deepcopy(self.state_dict[\"sw\"])\n        temp_sv = deepcopy(self.state_dict[\"sv\"])\n        if temp_pp.bot_type == \"well\" and temp_wp.bot_type == \"vial\":\n            self.state_dict[\"sw\"] = deepcopy(temp_pp)\n            self.state_dict[\"sv\"] = deepcopy(temp_wp)\n        elif temp_pp.bot_type == \"vial\" and temp_wp.bot_type == \"well\":\n            self.state_dict[\"sv\"] = deepcopy(temp_pp)\n            self.state_dict[\"sw\"] = deepcopy(temp_wp)\n        else:\n            raise ValueError(\"Uh Oh can't swap cause of type issue.\")\n        self.state_dict[\"pp\"] = deepcopy(temp_sv)\n        self.state_dict[\"wp\"] = deepcopy(temp_sw)", "hash": "97fcfec44ff4", "chunk_type": "method", "node_type": "function_definition", "signature": "swap_full(self)", "docstring": null, "chunk_size_bytes": 762, "original_size_bytes": 764, "start_byte": 942, "end_byte": 1706}
