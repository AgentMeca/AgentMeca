{"chunk_id": "meca_samples:Demo_Microscope/backend/joystick.py:74df5e5328dd", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "ctypes", "qualified_name": "ctypes", "source_path": "Demo_Microscope/backend/joystick.py", "loc": [7, 7], "text": "import ctypes", "hash": "74df5e5328dd", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 13, "original_size_bytes": 13, "start_byte": 142, "end_byte": 155}
{"chunk_id": "meca_samples:Demo_Microscope/backend/joystick.py:b21aa673b0bc", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "WORD", "qualified_name": "WORD", "source_path": "Demo_Microscope/backend/joystick.py", "loc": [8, 8], "text": "from ctypes.wintypes import WORD, UINT, DWORD", "hash": "b21aa673b0bc", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 45, "original_size_bytes": 45, "start_byte": 156, "end_byte": 201}
{"chunk_id": "meca_samples:Demo_Microscope/backend/joystick.py:b332cae02e6f", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "WCHAR as TCHAR", "qualified_name": "WCHAR as TCHAR", "source_path": "Demo_Microscope/backend/joystick.py", "loc": [9, 9], "text": "from ctypes.wintypes import WCHAR as TCHAR", "hash": "b332cae02e6f", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 42, "original_size_bytes": 42, "start_byte": 202, "end_byte": 244}
{"chunk_id": "meca_samples:Demo_Microscope/backend/joystick.py:05ba3d035f73", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "JOYCAPS", "qualified_name": "JOYCAPS", "source_path": "Demo_Microscope/backend/joystick.py", "loc": [39, 65], "text": "class JOYCAPS(ctypes.Structure):\n    _fields_ = [\n        ('wMid', WORD),\n        ('wPid', WORD),\n        ('szPname', TCHAR * MAXPNAMELEN),\n        ('wXmin', UINT),\n        ('wXmax', UINT),\n        ('wYmin', UINT),\n        ('wYmax', UINT),\n        ('wZmin', UINT),\n        ('wZmax', UINT),", "hash": "05ba3d035f73", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 289, "original_size_bytes": 289, "start_byte": 985, "end_byte": 1730}
{"chunk_id": "meca_samples:Demo_Microscope/backend/joystick.py:7a5993ae17a2", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "JOYINFO", "qualified_name": "JOYINFO", "source_path": "Demo_Microscope/backend/joystick.py", "loc": [67, 73], "text": "class JOYINFO(ctypes.Structure):\n    _fields_ = [\n        ('wXpos', UINT),\n        ('wYpos', UINT),\n        ('wZpos', UINT),\n        ('wButtons', UINT),\n    ]", "hash": "7a5993ae17a2", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 158, "original_size_bytes": 158, "start_byte": 1732, "end_byte": 1890}
{"chunk_id": "meca_samples:Demo_Microscope/backend/joystick.py:7c9466d8084a", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "JOYINFOEX", "qualified_name": "JOYINFOEX", "source_path": "Demo_Microscope/backend/joystick.py", "loc": [75, 90], "text": "class JOYINFOEX(ctypes.Structure):\n    _fields_ = [\n        ('dwSize', DWORD),\n        ('dwFlags', DWORD),\n        ('dwXpos', DWORD),\n        ('dwYpos', DWORD),\n        ('dwZpos', DWORD),\n        ('dwRpos', DWORD),\n        ('dwUpos', DWORD),\n        ('dwVpos', DWORD),\n        ('dwButtons', DWORD),", "hash": "7c9466d8084a", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 298, "original_size_bytes": 298, "start_byte": 1892, "end_byte": 2321}
{"chunk_id": "meca_samples:Demo_Microscope/backend/joystick.py:c2059af73a82", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "MecaJoy", "qualified_name": "MecaJoy", "source_path": "Demo_Microscope/backend/joystick.py", "loc": [92, 131], "text": "class MecaJoy():\n    def __init__(self):\n        self._joyid = 0\n        self._info = JOYINFO()\n        self._pinfo = ctypes.pointer(self._info)\n        self._caps = JOYCAPS()\n        self._pcaps = ctypes.pointer(self._caps)\n        self._info = JOYINFO()\n        self._infoex = JOYINFOEX()\n        self._pinfoex = ctypes.pointer(self._infoex)", "hash": "c2059af73a82", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 343, "original_size_bytes": 371, "start_byte": 2323, "end_byte": 3780}
{"chunk_id": "meca_samples:Demo_Microscope/backend/joystick.py:1a3e8938605e", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "MecaJoy.__init__", "source_path": "Demo_Microscope/backend/joystick.py", "loc": [93, 104], "text": "def __init__(self):\n        self._joyid = 0\n        self._info = JOYINFO()\n        self._pinfo = ctypes.pointer(self._info)\n        self._caps = JOYCAPS()\n        self._pcaps = ctypes.pointer(self._caps)\n        self._info = JOYINFO()\n        self._infoex = JOYINFOEX()\n        self._pinfoex = ctypes.pointer(self._infoex)\n        self._infoex.dwSize = ctypes.sizeof(JOYINFOEX)\n        self._infoex.dwFlags = JOY_RETURNX | JOY_RETURNY | JOY_RETURNZ | JOY_RETURNBUTTONS", "hash": "1a3e8938605e", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self)", "docstring": null, "chunk_size_bytes": 468, "original_size_bytes": 496, "start_byte": 2344, "end_byte": 2840}
{"chunk_id": "meca_samples:Demo_Microscope/backend/joystick.py:3f88c2d95b2b", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "checkdriver", "qualified_name": "MecaJoy.checkdriver", "source_path": "Demo_Microscope/backend/joystick.py", "loc": [106, 111], "text": "def checkdriver(self):\n        num_devs = joyGetNumDevs()\n        if num_devs == 0:\n            print(\"Driver not loaded\")\n            return False\n        return True", "hash": "3f88c2d95b2b", "chunk_type": "method", "node_type": "function_definition", "signature": "checkdriver(self)", "docstring": null, "chunk_size_bytes": 167, "original_size_bytes": 167, "start_byte": 2846, "end_byte": 3013}
{"chunk_id": "meca_samples:Demo_Microscope/backend/joystick.py:db46ab588656", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "checkplugged", "qualified_name": "MecaJoy.checkplugged", "source_path": "Demo_Microscope/backend/joystick.py", "loc": [113, 117], "text": "def checkplugged(self):\n        if joyGetPos(self._joyid, self._pinfo) != 0:\n            print(\"Joystick not plugged in\")\n            return False\n        return True", "hash": "db46ab588656", "chunk_type": "method", "node_type": "function_definition", "signature": "checkplugged(self)", "docstring": null, "chunk_size_bytes": 166, "original_size_bytes": 166, "start_byte": 3019, "end_byte": 3185}
{"chunk_id": "meca_samples:Demo_Microscope/backend/joystick.py:37219a174fa0", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "getcaps", "qualified_name": "MecaJoy.getcaps", "source_path": "Demo_Microscope/backend/joystick.py", "loc": [119, 124], "text": "def getcaps(self):\n        test = joyGetDevCaps(self._joyid, self._pcaps, ctypes.sizeof(JOYCAPS))\n        if test != 0:\n            print(\"Failed to load capability\")\n            return False\n        return True", "hash": "37219a174fa0", "chunk_type": "method", "node_type": "function_definition", "signature": "getcaps(self)", "docstring": null, "chunk_size_bytes": 211, "original_size_bytes": 211, "start_byte": 3191, "end_byte": 3402}
{"chunk_id": "meca_samples:Demo_Microscope/backend/joystick.py:0e83a6eb7d66", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "getinfo", "qualified_name": "MecaJoy.getinfo", "source_path": "Demo_Microscope/backend/joystick.py", "loc": [126, 131], "text": "def getinfo(self):\n        joyGetPosEx(self._joyid, self._pinfoex)\n        data = [round((self._infoex.dwXpos-32767.5)/32767.5, 2), round((self._infoex.dwYpos-32767.5)/32767.5, 2), round((self._infoex.dwZpos-32767.5)/32767.5, 2), None, None]\n        for b in range(self._caps.wNumButtons):\n            data[b+3] = 0 != (1 << b) & self._infoex.dwButtons\n        return data", "hash": "0e83a6eb7d66", "chunk_type": "method", "node_type": "function_definition", "signature": "getinfo(self)", "docstring": null, "chunk_size_bytes": 372, "original_size_bytes": 372, "start_byte": 3408, "end_byte": 3780}
