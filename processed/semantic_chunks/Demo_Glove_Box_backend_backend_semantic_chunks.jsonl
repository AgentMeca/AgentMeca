{"chunk_id": "meca_samples:Demo_Glove_Box/backend/backend.py:f1e1a6bdbc5c", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "Robot", "qualified_name": "Robot", "source_path": "Demo_Glove_Box/backend/backend.py", "loc": [1, 1], "text": "from mecademicpy.robot import Robot", "hash": "f1e1a6bdbc5c", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 35, "original_size_bytes": 35, "start_byte": 0, "end_byte": 35}
{"chunk_id": "meca_samples:Demo_Glove_Box/backend/backend.py:ff0a30cc360e", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "Rotation", "qualified_name": "Rotation", "source_path": "Demo_Glove_Box/backend/backend.py", "loc": [2, 2], "text": "from scipy.spatial.transform import Rotation", "hash": "ff0a30cc360e", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 44, "original_size_bytes": 44, "start_byte": 36, "end_byte": 80}
{"chunk_id": "meca_samples:Demo_Glove_Box/backend/backend.py:bcab709e15be", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "numpy as np", "qualified_name": "numpy as np", "source_path": "Demo_Glove_Box/backend/backend.py", "loc": [3, 3], "text": "import numpy as np", "hash": "bcab709e15be", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 18, "original_size_bytes": 18, "start_byte": 81, "end_byte": 99}
{"chunk_id": "meca_samples:Demo_Glove_Box/backend/backend.py:75e060499454", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "MainRack", "qualified_name": "MainRack", "source_path": "Demo_Glove_Box/backend/backend.py", "loc": [6, 21], "text": "class MainRack():\n    def __init__(self, n) -> None:\n        self.rack_status = [True]*n       # True if vial is present False if not\n        self.rack_position = list()     # List of positions for every rack point\n        self.rack_pick_dir = list()\n        self.vial_selected = [False]*n\n        for i in range(n):\n            self.rack_position.append([0,0,0,0,0,0])\n            self.rack_pick_dir.append(True)             # True for regular False for front pick", "hash": "75e060499454", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 465, "original_size_bytes": 471, "start_byte": 102, "end_byte": 726}
{"chunk_id": "meca_samples:Demo_Glove_Box/backend/backend.py:ac7d38ac720f", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "MainRack.__init__", "source_path": "Demo_Glove_Box/backend/backend.py", "loc": [7, 15], "text": "def __init__(self, n) -> None:\n        self.rack_status = [True]*n       # True if vial is present False if not\n        self.rack_position = list()     # List of positions for every rack point\n        self.rack_pick_dir = list()\n        self.vial_selected = [False]*n\n        for i in range(n):\n            self.rack_position.append([0,0,0,0,0,0])\n            self.rack_pick_dir.append(True)             # True for regular False for front pick", "hash": "ac7d38ac720f", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self, n)", "docstring": null, "chunk_size_bytes": 443, "original_size_bytes": 444, "start_byte": 124, "end_byte": 568}
{"chunk_id": "meca_samples:Demo_Glove_Box/backend/backend.py:fc309d3adb92", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "update_position", "qualified_name": "MainRack.update_position", "source_path": "Demo_Glove_Box/backend/backend.py", "loc": [17, 18], "text": "def update_position(self, n, pos):\n        self.rack_position[n] = pos", "hash": "fc309d3adb92", "chunk_type": "method", "node_type": "function_definition", "signature": "update_position(self, n, pos)", "docstring": null, "chunk_size_bytes": 70, "original_size_bytes": 70, "start_byte": 578, "end_byte": 648}
{"chunk_id": "meca_samples:Demo_Glove_Box/backend/backend.py:5f625f6872ac", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "update_status", "qualified_name": "MainRack.update_status", "source_path": "Demo_Glove_Box/backend/backend.py", "loc": [20, 21], "text": "def update_status(self, n, status):\n        self.rack_status[n] = status", "hash": "5f625f6872ac", "chunk_type": "method", "node_type": "function_definition", "signature": "update_status(self, n, status)", "docstring": null, "chunk_size_bytes": 72, "original_size_bytes": 72, "start_byte": 654, "end_byte": 726}
{"chunk_id": "meca_samples:Demo_Glove_Box/backend/backend.py:ace4fbbc26fa", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "Centrifuge", "qualified_name": "Centrifuge", "source_path": "Demo_Glove_Box/backend/backend.py", "loc": [24, 37], "text": "class Centrifuge():\n    def __init__(self, n) -> None:\n        self.rack_status = [False]*n        # True if vial is present False if not\n        self.rack_position = list()         # List of positions for every rack point\n        self.cent_status = True             # True if ready to be loaded\n        for i in range(n):\n            self.rack_position.append([0,0,0,0,0,0])\n    def update_position(self, n, pos):\n        self.rack_position[n] = pos", "hash": "ace4fbbc26fa", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 450, "original_size_bytes": 460, "start_byte": 733, "end_byte": 1271}
{"chunk_id": "meca_samples:Demo_Glove_Box/backend/backend.py:c2fb64681cfe", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "Centrifuge.__init__", "source_path": "Demo_Glove_Box/backend/backend.py", "loc": [25, 31], "text": "def __init__(self, n) -> None:\n        self.rack_status = [False]*n        # True if vial is present False if not\n        self.rack_position = list()         # List of positions for every rack point\n        self.cent_status = True             # True if ready to be loaded\n        for i in range(n):\n            self.rack_position.append([0,0,0,0,0,0])", "hash": "c2fb64681cfe", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self, n)", "docstring": null, "chunk_size_bytes": 351, "original_size_bytes": 360, "start_byte": 757, "end_byte": 1117}
{"chunk_id": "meca_samples:Demo_Glove_Box/backend/backend.py:fc309d3adb92", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "update_position", "qualified_name": "Centrifuge.update_position", "source_path": "Demo_Glove_Box/backend/backend.py", "loc": [33, 34], "text": "def update_position(self, n, pos):\n        self.rack_position[n] = pos", "hash": "fc309d3adb92", "chunk_type": "method", "node_type": "function_definition", "signature": "update_position(self, n, pos)", "docstring": null, "chunk_size_bytes": 70, "original_size_bytes": 70, "start_byte": 1123, "end_byte": 1193}
{"chunk_id": "meca_samples:Demo_Glove_Box/backend/backend.py:5f625f6872ac", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "update_status", "qualified_name": "Centrifuge.update_status", "source_path": "Demo_Glove_Box/backend/backend.py", "loc": [36, 37], "text": "def update_status(self, n, status):\n        self.rack_status[n] = status", "hash": "5f625f6872ac", "chunk_type": "method", "node_type": "function_definition", "signature": "update_status(self, n, status)", "docstring": null, "chunk_size_bytes": 72, "original_size_bytes": 72, "start_byte": 1199, "end_byte": 1271}
{"chunk_id": "meca_samples:Demo_Glove_Box/backend/backend.py:49adae258a39", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "projectvector", "qualified_name": "projectvector", "source_path": "Demo_Glove_Box/backend/backend.py", "loc": [40, 43], "text": "def projectvector(mov_vect, rot_vect):\n    rot_mat = Rotation.from_euler('ZYX', rot_vect)\n    rot_mat_num = rot_mat.as_matrix().transpose()\n    return np.dot(rot_mat_num, mov_vect)", "hash": "49adae258a39", "chunk_type": "function", "node_type": "function_definition", "signature": "projectvector(mov_vect, rot_vect)", "docstring": null, "chunk_size_bytes": 180, "original_size_bytes": 180, "start_byte": 1274, "end_byte": 1454}
