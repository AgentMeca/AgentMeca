{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:cf670a6525d1", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "robot as rb", "qualified_name": "robot as rb", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [2, 2], "text": "import robot as rb", "hash": "cf670a6525d1", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 18, "original_size_bytes": 18, "start_byte": 23, "end_byte": 41}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:9486c0b0d93f", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "robot_common", "qualified_name": "robot_common", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [3, 3], "text": "import robot_common", "hash": "9486c0b0d93f", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 19, "original_size_bytes": 19, "start_byte": 42, "end_byte": 61}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:29fb3f785ef0", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "Sensor", "qualified_name": "Sensor", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [4, 4], "text": "from NetFT import Sensor", "hash": "29fb3f785ef0", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 24, "original_size_bytes": 24, "start_byte": 62, "end_byte": 86}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:ae2c4b1fb9ce", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "QtCore", "qualified_name": "QtCore", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [5, 5], "text": "from PyQt5 import QtCore, QtGui, QtWidgets", "hash": "ae2c4b1fb9ce", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 42, "original_size_bytes": 42, "start_byte": 87, "end_byte": 129}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:1a213d3a6411", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "pyqtSignal", "qualified_name": "pyqtSignal", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [6, 6], "text": "from PyQt5.QtCore import pyqtSignal, Qt, QThread, QObject", "hash": "1a213d3a6411", "chunk_type": "import", "node_type": "import_from_statement", "signature": null, "docstring": null, "chunk_size_bytes": 57, "original_size_bytes": 57, "start_byte": 130, "end_byte": 187}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:e6125c442fc3", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "time", "qualified_name": "time", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [7, 7], "text": "import time", "hash": "e6125c442fc3", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 11, "original_size_bytes": 11, "start_byte": 188, "end_byte": 199}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:3040d92d012f", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "ForceGuideWidget", "qualified_name": "ForceGuideWidget", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [10, 238], "text": "class ForceGuideWidget(QtWidgets.QWidget):\n    ForceJogStop = pyqtSignal()\n    def __init__(self):\n        super().__init__()\n        self.setWindowTitle(\"Meca500\")\n        self.setWindowIcon(QtGui.QIcon(\"favicon.ico\"))", "hash": "3040d92d012f", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 219, "original_size_bytes": 323, "start_byte": 202, "end_byte": 11500}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:a6cf0b11c2cf", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "ForceGuideWidget.__init__", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [13, 86], "text": "def __init__(self):\n        super().__init__()\n        self.setWindowTitle(\"Meca500\")\n        self.setWindowIcon(QtGui.QIcon(\"favicon.ico\"))\n        self.showMaximized()\n        self.logo = QtWidgets.QLabel()\n        self.logo.setPixmap(QtGui.QPixmap('logo.png'))\n        self.robot_on = QtWidgets.QPushButton(self)\n        self.robot_on.setIcon(QtGui.QIcon('robot.png'))\n        self.robot_on.setMaximumWidth(100)\n        self.robot_on.setMaximumHeight(100)\n        self.robot_on.setIconSize(QtCore.QSize(75, 75))\n        self.robot_on.setStyleSheet(\"margin: 1px; padding: 7px; background-color:rgba(125,125,125,0); color: black; border-style: solid; border-radius: 3px; border-width: 0.5px; border-color: black;\")\n        self.robot_on.setCheckable(True)\n        self.enable = QtWidgets.QPushButton(self)\n        self.enable.setIcon(QtGui.QIcon('data-wave.png'))\n        self.enable.setMaximumWidth(100)\n        self.enable.setMaximumHeight(100)\n        self.enable.setIconSize(QtCore.QSize(90, 90))\n        self.enable.setStyleSheet(\"margin: 1px; padding: 7px; background-color:rgba(125,125,125,0); color: black; border-style: solid; border-radius: 3px; border-width: 0.5px; border-color: black;\")\n        self.enable.setCheckable(True)\n        self.enable.setEnabled(False)\n        self.play = QtWidgets.QPushButton()\n        self.play.setIcon(QtGui.QIcon('gripper.png'))\n        self.play.setMaximumWidth(100)\n        self.play.setMaximumHeight(100)\n        self.play.setIconSize(QtCore.QSize(75, 75))\n        self.play.setStyleSheet(\"margin: 1px; padding: 7px; background-color:rgba(125,125,125,0); color: black; border-style: solid; border-radius: 3px; border-width: 0.5px; border-color: black;\")\n        self.play.setCheckable(True)\n        self.play.setEnabled(False)\n        self.hbox = QtWidgets.QHBoxLayout()\n        self.hbox.addWidget(self.robot_on)\n        self.hbox.addWidget(self.enable)\n        self.hbox.addWidget(self.play)\n        self.vbox = QtWidgets.QVBoxLayout()\n        self.vbox.addLayout(self.hbox)\n        self.vbox.addSpacing(100)\n        self.setLayout(self.vbox)\n        self.slave_mode = False\n        self.slave_address = \"192.168.0.102\"\n        self.master_robot = rb.Robot()\n        self.monitor_robot = rb.Robot()\n        self.slave_robot = rb.Robot()\n        self.sensor = Sensor(\"192.168.0.101\")\n        self.SensorFeedbackThread = None\n        self.SensorFeedbackWorker = None\n        self.sensorvalues = []\n        self.MasterControlThread = None\n        self.MasterControlWorker = None\n        self.MasterMonitoringThread = None\n        self.MasterMonitoringWorker = None\n        self.jointvalues = []\n        self.SlaveControlThread = None\n        self.SlaveControlWorker = None\n        self.robot_on.clicked.connect(self.on_robot)\n        self.enable.clicked.connect(self.on_enable)\n        self.play.clicked.connect(self.on_gripper)", "hash": "a6cf0b11c2cf", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self)", "docstring": null, "chunk_size_bytes": 2877, "original_size_bytes": 3084, "start_byte": 286, "end_byte": 3370}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:a312411332a0", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "closeEvent", "qualified_name": "ForceGuideWidget.closeEvent", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [88, 92], "text": "def closeEvent(self, event):\n        if self.slave_mode:\n            self.slave_robot.Disconnect()\n        self.master_robot.Disconnect()\n        event.accept()", "hash": "a312411332a0", "chunk_type": "method", "node_type": "function_definition", "signature": "closeEvent(self, event)", "docstring": null, "chunk_size_bytes": 160, "original_size_bytes": 160, "start_byte": 3376, "end_byte": 3536}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:9598e775e7af", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "on_robot", "qualified_name": "ForceGuideWidget.on_robot", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [94, 130], "text": "def on_robot(self):\n        if self.robot_on.isChecked():\n            self.enable.setEnabled(True)\n            self.robot_on.setStyleSheet(\"margin: 1px; padding: 7px; background-color:rgba(125,125,125,125); color: black; border-style: solid; border-radius: 3px; border-width: 0.5px; border-color: black;\")\n            try:\n                self.master_robot.Connect()\n                self.master_robot.SetTRF(0, 0, 0, 0, 0, -22)\n                self.master_robot.SetVelTimeout(0.10)\n            except robot_common.CommunicationError:\n                self.robot_on.setChecked(False)\n                self.enable.setEnabled(False)\n                print(\"Connection Error Master\")\n                self.robot_on.setStyleSheet(\"margin: 1px; padding: 7px; background-color:rgba(125,125,125,0); color: black; border-style: solid; border-radius: 3px; border-width: 0.5px; border-color: black;\")\n                return\n            print(\"Master Connected\")\n            self.master_robot.ActivateAndHome()\n            if self.slave_mode:\n                try:\n                    self.slave_robot.Connect(self.slave_address)\n                except robot_common.CommunicationError:\n                    self.robot_on.setChecked(False)\n                    self.enable.setEnabled(False)\n                    self.robot_on.setStyleSheet(\"margin: 1px; padding: 7px; background-color:rgba(125,125,125,0); color: black; border-style: solid; border-radius: 3px; border-width: 0.5px; border-color: black;\")\n                    self.master_robot.Disconnect()\n                    print(\"Connection Error Slave\")\n                    return\n                print(\"Slave Connected\")\n                self.play.setEnabled(True)\n                self.slave_robot.ActivateAndHome()\n        else:\n            if self.slave_mode:\n                self.slave_robot.Disconnect()\n                self.monitor_robot.Disconnect()\n                self.play.setEnabled(False)\n            self.enable.setEnabled(False)\n            self.robot_on.setStyleSheet(\"margin: 1px; padding: 7px; background-color:rgba(125,125,125,0); color: black; border-style: solid; border-radius: 3px; border-width: 0.5px; border-color: black;\")\n            self.master_robot.Disconnect()", "hash": "9598e775e7af", "chunk_type": "method", "node_type": "function_definition", "signature": "on_robot(self)", "docstring": null, "chunk_size_bytes": 2222, "original_size_bytes": 2222, "start_byte": 3542, "end_byte": 5764}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:abcf485336dd", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "on_enable", "qualified_name": "ForceGuideWidget.on_enable", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [132, 175], "text": "def on_enable(self):\n        if self.enable.isChecked():\n            self.robot_on.setEnabled(False)\n            self.enable.setStyleSheet(\n                \"margin: 1px; padding: 7px; background-color:rgba(125,125,125,125); color: black; border-style: solid; border-radius: 3px; border-width: 0.5px; border-color: black;\")\n            if self.slave_mode:\n                self.slave_robot.ClearMotion()\n                self.slave_robot.ResetError()\n                self.slave_robot.ResumeMotion()\n            self.master_robot.ClearMotion()\n            self.master_robot.ResetError()\n            self.master_robot.ResumeMotion()\n            self.master_robot.MoveJoints(0, 10, 15, 0, 65, 0)\n            time.sleep(2)\n            self.sensor.setBias()\n            self.sensor.startStreaming()\n            self.SensorFeedbackThread = QThread()\n            self.SensorFeedbackWorker = SensorFeedbackWorker(self.sensor)\n            self.SensorFeedbackWorker.moveToThread(self.SensorFeedbackThread)\n            self.SensorFeedbackThread.started.connect(self.SensorFeedbackWorker.run)\n            self.SensorFeedbackWorker.finished.connect(self.SensorFeedbackThread.quit)\n            self.SensorFeedbackWorker.finished.connect(self.SensorFeedbackWorker.deleteLater)\n            self.SensorFeedbackThread.finished.connect(self.SensorFeedbackThread.deleteLater)\n            self.SensorFeedbackWorker.sensorvalue.connect(self.update_sensor_values)\n            self.SensorFeedbackThread.start()\n            if self.slave_mode:\n                self.start_monitoring_thread()\n                self.start_jog_thread()\n                self.start_slave_thread()\n            else:\n                self.start_jog_thread()\n        else:\n            self.robot_on.setEnabled(True)\n            self.enable.setStyleSheet(\n                \"margin: 1px; padding: 7px; background-color:rgba(125,125,125,0); color: black; border-style: solid; border-radius: 3px; border-width: 0.5px; border-color: black;\")\n            if self.slave_mode:\n                self.SlaveControlWorker.stopSignal()\n                self.MasterMonitoringWorker.stopSignal()\n            self.MasterControlWorker.stopSignal()\n            self.SensorFeedbackWorker.stopSignal()\n            self.sensor.stopStreaming()", "hash": "abcf485336dd", "chunk_type": "method", "node_type": "function_definition", "signature": "on_enable(self)", "docstring": null, "chunk_size_bytes": 2262, "original_size_bytes": 2346, "start_byte": 5770, "end_byte": 8116}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:93d14769bddd", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "on_gripper", "qualified_name": "ForceGuideWidget.on_gripper", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [177, 185], "text": "def on_gripper(self):\n        if self.play.isChecked():\n            self.slave_robot.GripperClose()\n            self.play.setStyleSheet(\n                \"margin: 1px; padding: 7px; background-color:rgba(125,125,125,125); color: black; border-style: solid; border-radius: 3px; border-width: 0.5px; border-color: black;\")\n        else:\n            self.slave_robot.GripperOpen()\n            self.play.setStyleSheet(\n                \"margin: 1px; padding: 7px; background-color:rgba(125,125,125,0); color: black; border-style: solid; border-radius: 3px; border-width: 0.5px; border-color: black;\")", "hash": "93d14769bddd", "chunk_type": "method", "node_type": "function_definition", "signature": "on_gripper(self)", "docstring": null, "chunk_size_bytes": 594, "original_size_bytes": 594, "start_byte": 8122, "end_byte": 8716}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:ac1aec781fcb", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "start_jog_thread", "qualified_name": "ForceGuideWidget.start_jog_thread", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [187, 195], "text": "def start_jog_thread(self):\n        self.MasterControlThread = QThread()\n        self.MasterControlWorker = MasterControlWorker(self.master_robot)\n        self.MasterControlWorker.moveToThread(self.MasterControlThread)\n        self.MasterControlThread.started.connect(self.MasterControlWorker.run)\n        self.MasterControlWorker.finished.connect(self.MasterControlThread.quit)\n        self.MasterControlWorker.finished.connect(self.MasterControlWorker.deleteLater)\n        self.MasterControlThread.finished.connect(self.MasterControlThread.deleteLater)\n        self.MasterControlThread.start()", "hash": "ac1aec781fcb", "chunk_type": "method", "node_type": "function_definition", "signature": "start_jog_thread(self)", "docstring": null, "chunk_size_bytes": 595, "original_size_bytes": 595, "start_byte": 8722, "end_byte": 9317}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:4d68a999ca78", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "start_monitoring_thread", "qualified_name": "ForceGuideWidget.start_monitoring_thread", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [197, 206], "text": "def start_monitoring_thread(self):\n        self.MasterMonitoringThread = QThread()\n        self.MasterMonitoringWorker = RobotFeedbackWorker(self.master_robot)\n        self.MasterMonitoringWorker.moveToThread(self.MasterMonitoringThread)\n        self.MasterMonitoringThread.started.connect(self.MasterMonitoringWorker.run)\n        self.MasterMonitoringWorker.finished.connect(self.MasterMonitoringThread.quit)\n        self.MasterMonitoringWorker.finished.connect(self.MasterMonitoringWorker.deleteLater)\n        self.MasterMonitoringThread.finished.connect(self.MasterMonitoringThread.deleteLater)\n        self.MasterMonitoringWorker.jointpos.connect(self.update_joint_pos)\n        self.MasterMonitoringThread.start()", "hash": "4d68a999ca78", "chunk_type": "method", "node_type": "function_definition", "signature": "start_monitoring_thread(self)", "docstring": null, "chunk_size_bytes": 717, "original_size_bytes": 717, "start_byte": 9323, "end_byte": 10040}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:8b7a8885dc4a", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "start_slave_thread", "qualified_name": "ForceGuideWidget.start_slave_thread", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [208, 227], "text": "def start_slave_thread(self):\n        self.jointvalues = self.master_robot.GetJoints()\n        self.slave_robot.SetJointVel(20)\n        self.slave_robot.MoveJoints(self.jointvalues[0],\n                                    self.jointvalues[1],\n                                    self.jointvalues[2],\n                                    self.jointvalues[3],\n                                    self.jointvalues[4],\n                                    self.jointvalues[5])\n        time.sleep(2)\n        print(\"Create Slave Thread\")\n        self.SlaveControlThread = QThread()\n        self.SlaveControlWorker = SlaveControlWorker(self.slave_robot)\n        self.SlaveControlWorker.updatetargetpos(self.jointvalues)\n        self.SlaveControlWorker.moveToThread(self.SlaveControlThread)\n        self.SlaveControlThread.started.connect(self.SlaveControlWorker.run)\n        self.SlaveControlWorker.finished.connect(self.SlaveControlThread.quit)\n        self.SlaveControlWorker.finished.connect(self.SlaveControlWorker.deleteLater)\n        self.SlaveControlThread.finished.connect(self.SlaveControlThread.deleteLater)\n        self.SlaveControlThread.start()", "hash": "8b7a8885dc4a", "chunk_type": "method", "node_type": "function_definition", "signature": "start_slave_thread(self)", "docstring": null, "chunk_size_bytes": 1147, "original_size_bytes": 1147, "start_byte": 10046, "end_byte": 11193}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:71c2dcb94431", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "on_replay", "qualified_name": "ForceGuideWidget.on_replay", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [229, 230], "text": "def on_replay(self):\n        pass", "hash": "71c2dcb94431", "chunk_type": "method", "node_type": "function_definition", "signature": "on_replay(self)", "docstring": null, "chunk_size_bytes": 33, "original_size_bytes": 33, "start_byte": 11199, "end_byte": 11232}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:1897e0fbd159", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "update_sensor_values", "qualified_name": "ForceGuideWidget.update_sensor_values", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [232, 234], "text": "def update_sensor_values(self, values):\n        self.sensorvalues = values\n        self.MasterControlWorker.updatesensorval(values)", "hash": "1897e0fbd159", "chunk_type": "method", "node_type": "function_definition", "signature": "update_sensor_values(self, values)", "docstring": null, "chunk_size_bytes": 131, "original_size_bytes": 131, "start_byte": 11238, "end_byte": 11369}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:c99aa2e09d04", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "update_joint_pos", "qualified_name": "ForceGuideWidget.update_joint_pos", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [236, 238], "text": "def update_joint_pos(self, values):\n        self.jointvalues = values\n        self.SlaveControlWorker.updatetargetpos(values)", "hash": "c99aa2e09d04", "chunk_type": "method", "node_type": "function_definition", "signature": "update_joint_pos(self, values)", "docstring": null, "chunk_size_bytes": 125, "original_size_bytes": 125, "start_byte": 11375, "end_byte": 11500}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:74709bc76fea", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "RobotFeedbackWorker", "qualified_name": "RobotFeedbackWorker", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [240, 258], "text": "class RobotFeedbackWorker(QObject):\n    finished = pyqtSignal()\n    jointpos = pyqtSignal(list)\n    def __init__(self, robot):\n        super().__init__()\n        self.robot = robot\n        self.runFlag = True\n    def run(self):\n        print(\"Starting Master Monitoring\")", "hash": "74709bc76fea", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 271, "original_size_bytes": 273, "start_byte": 11502, "end_byte": 11996}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:a63823622804", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "RobotFeedbackWorker.__init__", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [244, 247], "text": "def __init__(self, robot):\n        super().__init__()\n        self.robot = robot\n        self.runFlag = True", "hash": "a63823622804", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self, robot)", "docstring": null, "chunk_size_bytes": 108, "original_size_bytes": 108, "start_byte": 11603, "end_byte": 11711}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:27db505c5df9", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "run", "qualified_name": "RobotFeedbackWorker.run", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [249, 255], "text": "def run(self):\n        print(\"Starting Master Monitoring\")\n        while self.runFlag:\n            vals = self.robot.GetJoints()\n            self.jointpos.emit(vals)\n            time.sleep(0.01)\n        self.finished.emit()", "hash": "27db505c5df9", "chunk_type": "method", "node_type": "function_definition", "signature": "run(self)", "docstring": null, "chunk_size_bytes": 223, "original_size_bytes": 223, "start_byte": 11717, "end_byte": 11940}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:7a08c7b31781", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "stopSignal", "qualified_name": "RobotFeedbackWorker.stopSignal", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [257, 258], "text": "def stopSignal(self):\n        self.runFlag = False", "hash": "7a08c7b31781", "chunk_type": "method", "node_type": "function_definition", "signature": "stopSignal(self)", "docstring": null, "chunk_size_bytes": 50, "original_size_bytes": 50, "start_byte": 11946, "end_byte": 11996}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:fa90d1c30997", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "SensorFeedbackWorker", "qualified_name": "SensorFeedbackWorker", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [261, 300], "text": "class SensorFeedbackWorker(QObject):\n    finished = pyqtSignal()\n    sensorvalue = pyqtSignal(list)\n    def __init__(self, sensor):\n        super().__init__()\n        print(\"Creating Sensor\")\n        self.sensor = sensor\n        self.runFlag = True\n        self.prev_2_vals = [0]*6\n        self.prev_1_vals = [0]*6", "hash": "fa90d1c30997", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 314, "original_size_bytes": 315, "start_byte": 11999, "end_byte": 13175}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:b955fedffd4d", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "SensorFeedbackWorker.__init__", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [265, 271], "text": "def __init__(self, sensor):\n        super().__init__()\n        print(\"Creating Sensor\")\n        self.sensor = sensor\n        self.runFlag = True\n        self.prev_2_vals = [0]*6\n        self.prev_1_vals = [0]*6", "hash": "b955fedffd4d", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self, sensor)", "docstring": null, "chunk_size_bytes": 210, "original_size_bytes": 210, "start_byte": 12104, "end_byte": 12314}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:b81846e6a22b", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "run", "qualified_name": "SensorFeedbackWorker.run", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [273, 289], "text": "def run(self):\n        print(\"Running Sensor\")\n        while self.runFlag:\n            vals = self.sensor.measurement()\n            l = 0.045\n            Fay = -vals[3]/l\n            Fax = vals[4]/l\n            May = -(vals[0]-Fax)*l\n            Max = (vals[1]-Fay)*l\n            vals[0] = Fax\n            vals[1] = Fay\n            vals[3] = Max\n            vals[4] = May\n            vals = self.norm_force_data(vals)\n            self.sensorvalue.emit(vals)\n        print(\"Sensor Finished\")\n        self.finished.emit()", "hash": "b81846e6a22b", "chunk_type": "method", "node_type": "function_definition", "signature": "run(self)", "docstring": null, "chunk_size_bytes": 519, "original_size_bytes": 519, "start_byte": 12320, "end_byte": 12839}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:fcf8fdcc3742", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "norm_force_data", "qualified_name": "SensorFeedbackWorker.norm_force_data", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [291, 296], "text": "def norm_force_data(self, val):\n        norm_val = [val[0] / 40, val[1] / 40, val[2] / 120, val[3], val[4], val[5]]\n        for i in range(0, 6):\n            if abs(norm_val[i]) < 0.01:\n                norm_val[i] = 0\n        return norm_val", "hash": "fcf8fdcc3742", "chunk_type": "method", "node_type": "function_definition", "signature": "norm_force_data(self, val)", "docstring": null, "chunk_size_bytes": 241, "original_size_bytes": 241, "start_byte": 12845, "end_byte": 13086}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:0b773f29be4e", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "stopSignal", "qualified_name": "SensorFeedbackWorker.stopSignal", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [298, 300], "text": "def stopSignal(self):\n        print(\"Stopping Sensor\")\n        self.runFlag = False", "hash": "0b773f29be4e", "chunk_type": "method", "node_type": "function_definition", "signature": "stopSignal(self)", "docstring": null, "chunk_size_bytes": 83, "original_size_bytes": 83, "start_byte": 13092, "end_byte": 13175}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:3b3816ab44d8", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "MasterControlWorker", "qualified_name": "MasterControlWorker", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [303, 336], "text": "class MasterControlWorker(QObject):\n    finished = pyqtSignal()\n    def __init__(self, robot):\n        super().__init__()\n        self.robot = robot\n        self.sensorvals = [0] * 6\n        self.sensorval_prev = [0] * 6\n        self.runFlag = True\n        self.d = 100", "hash": "3b3816ab44d8", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 269, "original_size_bytes": 271, "start_byte": 13178, "end_byte": 14562}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:3cd978c22da0", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "MasterControlWorker.__init__", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [306, 312], "text": "def __init__(self, robot):\n        super().__init__()\n        self.robot = robot\n        self.sensorvals = [0] * 6\n        self.sensorval_prev = [0] * 6\n        self.runFlag = True\n        self.d = 100", "hash": "3cd978c22da0", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self, robot)", "docstring": null, "chunk_size_bytes": 201, "original_size_bytes": 201, "start_byte": 13247, "end_byte": 13448}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:6738e5b4c242", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "run", "qualified_name": "MasterControlWorker.run", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [314, 330], "text": "def run(self):\n        print(\"Starting Master Control\")\n        max_vel = 500\n        max_rot = 250\n        self.robot.ResumeMotion()\n        while self.runFlag:\n            cmd = [max_vel*self.sensorvals[0] - self.d*self.sensorvals[0]-self.sensorval_prev[0],\n                   max_vel*self.sensorvals[1] - self.d*self.sensorvals[1]-self.sensorval_prev[1],\n                   max_vel*self.sensorvals[2] - self.d*self.sensorvals[2]-self.sensorval_prev[2],\n                   max_rot*self.sensorvals[3] - self.d*self.sensorvals[3]-self.sensorval_prev[3],\n                   max_rot*self.sensorvals[4] - self.d*self.sensorvals[4]-self.sensorval_prev[4],\n                   max_rot*self.sensorvals[5] - self.d*self.sensorvals[5]-self.sensorval_prev[5]]\n            self.sensorval_prev = self.sensorvals\n            self.robot.MoveLinVelTRF(cmd[0], cmd[1], cmd[2], cmd[3], cmd[4], cmd[5])\n            time.sleep(0.004)\n        print(\"Finishing Master Control\")\n        self.finished.emit()", "hash": "6738e5b4c242", "chunk_type": "method", "node_type": "function_definition", "signature": "run(self)", "docstring": null, "chunk_size_bytes": 985, "original_size_bytes": 985, "start_byte": 13454, "end_byte": 14439}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:ceb2fe448576", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "updatesensorval", "qualified_name": "MasterControlWorker.updatesensorval", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [332, 333], "text": "def updatesensorval(self, val):\n        self.sensorvals = val", "hash": "ceb2fe448576", "chunk_type": "method", "node_type": "function_definition", "signature": "updatesensorval(self, val)", "docstring": null, "chunk_size_bytes": 61, "original_size_bytes": 61, "start_byte": 14445, "end_byte": 14506}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:7a08c7b31781", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "stopSignal", "qualified_name": "MasterControlWorker.stopSignal", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [335, 336], "text": "def stopSignal(self):\n        self.runFlag = False", "hash": "7a08c7b31781", "chunk_type": "method", "node_type": "function_definition", "signature": "stopSignal(self)", "docstring": null, "chunk_size_bytes": 50, "original_size_bytes": 50, "start_byte": 14512, "end_byte": 14562}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:d290d0817926", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "SlaveControlWorker", "qualified_name": "SlaveControlWorker", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [339, 367], "text": "class SlaveControlWorker(QObject):\n    finished = pyqtSignal()\n    def __init__(self, robot):\n        super().__init__()\n        self.robot = robot\n        self.targetpos = []\n        self.runFlag = True\n    def run(self):\n        print(\"Starting Slave Control\")", "hash": "d290d0817926", "chunk_type": "class", "node_type": "class_definition", "signature": null, "docstring": null, "chunk_size_bytes": 262, "original_size_bytes": 264, "start_byte": 14565, "end_byte": 15465}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:d2bb358c0a5c", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "__init__", "qualified_name": "SlaveControlWorker.__init__", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [342, 346], "text": "def __init__(self, robot):\n        super().__init__()\n        self.robot = robot\n        self.targetpos = []\n        self.runFlag = True", "hash": "d2bb358c0a5c", "chunk_type": "method", "node_type": "function_definition", "signature": "__init__(self, robot)", "docstring": null, "chunk_size_bytes": 136, "original_size_bytes": 136, "start_byte": 14633, "end_byte": 14769}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:ae0e12af129b", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "run", "qualified_name": "SlaveControlWorker.run", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [348, 361], "text": "def run(self):\n        print(\"Starting Slave Control\")\n        self.robot.ResumeMotion()\n        self.robot.SetJointAcc(30)\n        self.robot.SetJointVel(35)\n        while self.runFlag:\n            self.robot.MoveJoints(self.targetpos[0],\n                                  self.targetpos[1],\n                                  self.targetpos[2],\n                                  self.targetpos[3],\n                                  self.targetpos[4],\n                                  self.targetpos[5])\n            time.sleep(0.03)\n        self.finished.emit()", "hash": "ae0e12af129b", "chunk_type": "method", "node_type": "function_definition", "signature": "run(self)", "docstring": null, "chunk_size_bytes": 562, "original_size_bytes": 562, "start_byte": 14775, "end_byte": 15337}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:922fea1766f0", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "updatetargetpos", "qualified_name": "SlaveControlWorker.updatetargetpos", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [363, 364], "text": "def updatetargetpos(self, values):\n        self.targetpos = values", "hash": "922fea1766f0", "chunk_type": "method", "node_type": "function_definition", "signature": "updatetargetpos(self, values)", "docstring": null, "chunk_size_bytes": 66, "original_size_bytes": 66, "start_byte": 15343, "end_byte": 15409}
{"chunk_id": "meca_samples:sample-programs/Python/HandGuiding/ForceControl.py:7a08c7b31781", "repo": "meca_samples", "commit": "806f144", "lang": "python", "symbol": "stopSignal", "qualified_name": "SlaveControlWorker.stopSignal", "source_path": "sample-programs/Python/HandGuiding/ForceControl.py", "loc": [366, 367], "text": "def stopSignal(self):\n        self.runFlag = False", "hash": "7a08c7b31781", "chunk_type": "method", "node_type": "function_definition", "signature": "stopSignal(self)", "docstring": null, "chunk_size_bytes": 50, "original_size_bytes": 50, "start_byte": 15415, "end_byte": 15465}
