{"chunk_id": "meca_samples:MecaDashboard/src/components/CardHolder/CardHolder.js:65f2192a54fa", "repo": "meca_samples", "commit": "806f144", "lang": "javascript", "symbol": "unknown", "qualified_name": "unknown", "source_path": "MecaDashboard/src/components/CardHolder/CardHolder.js", "loc": [1, 1], "text": "import React, { useState } from 'react'", "hash": "65f2192a54fa", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 39, "original_size_bytes": 39, "start_byte": 0, "end_byte": 39}
{"chunk_id": "meca_samples:MecaDashboard/src/components/CardHolder/CardHolder.js:8ca92d41a070", "repo": "meca_samples", "commit": "806f144", "lang": "javascript", "symbol": "unknown", "qualified_name": "unknown", "source_path": "MecaDashboard/src/components/CardHolder/CardHolder.js", "loc": [2, 2], "text": "import RobotCard from '../RobotCard/RobotCard'", "hash": "8ca92d41a070", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 46, "original_size_bytes": 46, "start_byte": 40, "end_byte": 86}
{"chunk_id": "meca_samples:MecaDashboard/src/components/CardHolder/CardHolder.js:98da40d96aaf", "repo": "meca_samples", "commit": "806f144", "lang": "javascript", "symbol": "unknown", "qualified_name": "unknown", "source_path": "MecaDashboard/src/components/CardHolder/CardHolder.js", "loc": [3, 3], "text": "import styles from './CardHolder.module.css'", "hash": "98da40d96aaf", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 44, "original_size_bytes": 44, "start_byte": 87, "end_byte": 131}
{"chunk_id": "meca_samples:MecaDashboard/src/components/CardHolder/CardHolder.js:9e179b1f1751", "repo": "meca_samples", "commit": "806f144", "lang": "javascript", "symbol": "unknown", "qualified_name": "unknown", "source_path": "MecaDashboard/src/components/CardHolder/CardHolder.js", "loc": [4, 4], "text": "import plus from './AddCardButton/imgs/plus.png'", "hash": "9e179b1f1751", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 48, "original_size_bytes": 48, "start_byte": 132, "end_byte": 180}
{"chunk_id": "meca_samples:MecaDashboard/src/components/CardHolder/CardHolder.js:058f542ae024", "repo": "meca_samples", "commit": "806f144", "lang": "javascript", "symbol": "unknown", "qualified_name": "unknown", "source_path": "MecaDashboard/src/components/CardHolder/CardHolder.js", "loc": [5, 5], "text": "import AddRobotDialog from './AddRobotDialog/AddRobotDialog'", "hash": "058f542ae024", "chunk_type": "import", "node_type": "import_statement", "signature": null, "docstring": null, "chunk_size_bytes": 60, "original_size_bytes": 60, "start_byte": 181, "end_byte": 241}
{"chunk_id": "meca_samples:MecaDashboard/src/components/CardHolder/CardHolder.js:fa24ca7a0d1b", "repo": "meca_samples", "commit": "806f144", "lang": "javascript", "symbol": "unknown", "qualified_name": "unknown", "source_path": "MecaDashboard/src/components/CardHolder/CardHolder.js", "loc": [8, 83], "text": "export default function CardHolder(props) {\n    const [numCards, setNumCards] = useState([])\n    const [isOpen, setIsOpen] = useState(false)\n    const openModal = () => {\n        setIsOpen(true)\n    }\n    const closeModal = () => {\n        setIsOpen(false)\n    }\n    async function onClickHandle(name, ipaddress) {\n        if (!numCards.filter(e => e.ip === ipaddress).length > 0) {\n            if (props.connect) {\n                var connection = false;\n                const response = await fetch('/registerRobot', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ ip: ipaddress })\n                })\n                const connectionStatus = await response.json()\n                console.log(connectionStatus)\n                connection = connectionStatus\n                console.log(connection)\n                if (connection) {\n                    setNumCards(prevNumCards => {\n                        return [...prevNumCards, {\n                            'ip': ipaddress,\n                            'card': <RobotCard name={name} ipaddress={ipaddress} connect={props.connect} deleteCard={removeRobotHandle} />\n                        }]\n                    })\n                    closeModal()\n                } else {\n                    alert('Could not connect to this address')\n                }\n            } else {\n                setNumCards(prevNumCards => {\n                    return [...prevNumCards, {\n                        'ip': ipaddress,\n                        'card': <RobotCard name={name} ipaddress={ipaddress} connect={props.connect} deleteCard={removeRobotHandle} />\n                    }]\n                })\n                closeModal()\n            }\n        } else {\n            alert('This IP address is already in use')\n        }\n    }\n    async function removeRobotHandle(ipaddress) {\n        if (!props.connect) {\n            setNumCards(prevNumCards => {\n                const newNumCards = prevNumCards.filter(card => card.ip !== ipaddress)\n                return newNumCards\n            })\n        }\n    }\n    return (\n        <div className={styles.cardholder}>\n            {numCards.map((item) => {\n                return item.card\n            })}\n            <button className={styles.addbutton} onClick={openModal}><img className={styles.plussign} src={plus} alt='PlusSign' /></button>\n            {isOpen && (\n                <AddRobotDialog createRobotHandle={onClickHandle} closeDialogHandle={closeModal} />\n            )}\n        </div>\n    )\n}", "hash": "fa24ca7a0d1b", "chunk_type": "other", "node_type": "export_statement", "signature": null, "docstring": null, "chunk_size_bytes": 2636, "original_size_bytes": 2644, "start_byte": 244, "end_byte": 2888}
