{"chunk_id": "mvk01_module_manual_semantic_0", "text": "Revision number: 11.1.43\n\n1 User Manual for the MVK01 Vacuum and I/O Module\n\n4 Technical specifications\n\n5 Installing the module\n\n6 Cabling the inputs and outputs\n\n7 Operating the module\n\nUser Manual Vacuum and I/O Module\n\nFor firmware version: 11.1\n\nDocument revision: B\n\nOnline release date: July 17, 2025\n\nDocument ID: MC-UM-MVK01\n\nOriginal instructions\n\nThe information contained herein is the property of Mecademic Inc. and shall not be reproduced in whole or in part without prior written approval of Mecademic Inc. Figure 13: Widget that appears in the MecaPortal jogging panel when the MVK01 is detected\n\nIntegration into the MecaPortal\n\nMC-UM-MVK01, Revision number: 11.1.43\n\nThe MVK01 vacuum and I/O module is designed with safety in mind. Familiarity with the MCS500 robot and its user manual is required prior to installing and using the MVK01 vacuum and I/O module. Technical specifications\n\nTable 1 lists the main technical specifications for the MVK01 vacuum and I/O module. FlybackdiodeInsideMVK01\n\nOperating the module\n\nThe MVK01 vacuum and I/O module is controlled in the same way as the MCS500. The MVK01 is a vacuum and I/O module developed by Mecademic, specifically for the MCS500-R1 SCARA robot arm. This user manual describes how to install Mecademic\u2019s MVK01 vacuum and I/O module underneath Mecademic\u2019s MCS500-R1 SCARA industrial robot arm and how to use it. Installing the module\n\nThe MVK01 module is designed for only one type of installation, underneath the base of the MCS500 R1, as shown in Figure 6. Figure 1: MVK01 vacuum and I/O module (R2), as delivered\n\nFigure 2: Push-in cable connector for the digital I/Os (Phoenix Contact, P/N 1778861)\n\nThe MVK01 shown in the photos and diagrams of this manual is the latest version, R2. You must read this manual thoroughly before installing or operating the MVK01. Make sure there\u2019s nothing that obstructs that connection, before installing the MVK01 module. Figure 9: Complete installation of the MVK01 and the optional cup holder\n\n22 units:mm 8,12 15 M5 M5 setscrew(M3) 12\n\nCabling the inputs and outputs\n\nAs already specified, the MVK01 provides 8 digital inputs and 8 digital outputs. Make sure the MCS500 robot is powered off and the connectors on top of the MVK01 and on the bottom of the robot\u2019s base are unobstructed, before installing the MVK01 module. MC-UM-MVK01, Revision number: 11.1.43\n\nFigure 5: MVK01 module dimensions\n\nYou can download the CAD file of the MVK01 pneumatic module from here. Make sure that all connections are properly made and that you respect the technical specifications of the MVK01 module. The MVK01 also comes with four cable connectors.", "source": "mvk01_module_manual", "chunk_index": 0, "sentence_count": 16, "sentence_indices": [0, 89, 24, 32, 75, 21, 5, 40, 30, 6, 43, 65, 41, 39, 91, 23], "token_count": 695, "char_count": 2650, "chunking_method": "max_min_semantic", "model_used": "BAAI/bge-m3", "hash": "be2f8816c793b5897159f4d982af75a5"}
{"chunk_id": "mvk01_module_manual_semantic_1", "text": "The information herein is subject to change without notice and should not be construed as a commitment by Mecademic Inc. Mecademic Inc. assumes no responsibility for any errors or omissions in this document. \u00a9 Copyright 2025, Mecademic Inc. For a complete description of these and other commands, refer to the Mecademic robot\u2019s programming manual. {build}\n\nEach Mecademic manual is written for a specific {major}.{minor}.{*}. Original version\n\nThe document ID for each Mecademic manual in a particular language is the same, regardless of the firmware version and the revision number. MC-UM-MVK01, Revision number: 11.1.43\n\nThe firmware that is installed on Mecademic products has the following numbering convention:\n\n{major}.{minor}.{patch}. When a Mecademic robot receives a motion command, it places it in a motion queue. This manual will be periodically reviewed and revised. MC-UM-MVK01, Revision number: 11.1.43\n\nThe following table lists the symbols that may be used in Mecademic documents to denote certain conditions. You can also continue to read the inputs. PDOs can contain individual bits, bytes, or words. It can be downloaded from the MecaPortal (see troubleshoot-prog of the Programming Manual). It can be downloaded from the MecaPortal (see troubleshoot-prog of the Programming Manual). It can be downloaded from the MecaPortal (see troubleshoot-prog of the Programming Manual). Provides indications that must be respected in order to avoid a potentially hazardous situation, which could result in injury. BRF : Base Reference Frame. You can also download the CAD file of the holder from here. On a regular basis, we revise each manual, adding further information and improving certain explanations. WRF : World reference frame. Note that many of these poses can be attained with more than one set of\n\nMC-UM-MVK01, Revision number: 11.1.43\n\nconfiguration parameters. TRF : Tool reference frame. EOAT : End-of-arm tooling. All data request commands (Get*), all robot control commands, all work zone supervision and collision prevention commands and some optional accessories commands (*_Immediate) are instantaneous. Provides indications that must be respected in order to avoid equipment or work (data) on the system being damaged or lost. when it is activated. See inverse-kinematics of the Programming manual for more details. FRF : Flange Reference Frame. active line : The line in the MecaPortal where the cursor is currently positioned. Each group is divided into two sets, with its independent common terminal (Figure 10). All motion commands are queued commands, as well as some external-tool commands. Identifies information that requires special consideration. Many of these settings have default values. Particular attention must be paid to the warning and danger messages in this manual. {*} firmware version. {*} firmware version. TCP : Tool Center Point.", "source": "mvk01_module_manual", "chunk_index": 1, "sentence_count": 37, "sentence_indices": [1, 3, 4, 78, 13, 20, 12, 129, 2, 7, 95, 136, 111, 152, 168, 11, 100, 60, 15, 172, 171, 165, 113, 122, 10, 149, 124, 120, 99, 66, 143, 9, 106, 8, 14, 17, 162], "token_count": 698, "char_count": 2883, "chunking_method": "max_min_semantic", "model_used": "BAAI/bge-m3", "hash": "45a8e88e04b2f8ac5aac149b987f0eb3"}
{"chunk_id": "mvk01_module_manual_semantic_2", "text": "We only provide the latest revision for each {major}.{minor}.{*}. Below is a summary of the changes made in each revision. This revision features an improved design and a slightly updated appearance, but there are no changes to its installation, usage, or technical specifications. July 14, 2025 March 17, 2025\n\nAddition of further specifications. robot log : This file is a more detailed version of the user log, intended primarily for our support team. user log : This file is a simplified log containing user-friendly traces of major events (e.g., robot activation, movement, E-Stop activation). Resets of the state of the MVK01\n\nBelow is the list of terms used by us in our technical documentation. These commands are executed immediately and generally return values for parameters that have already been configured (sent and executed) with a Set* command (or the default values). detailed event log : This file mirrors the content of the event log panel in the MecaPortal when in detailed mode. Refer to the specifications of these connectors for details: Phoenix Contact, P/N 1778861. The duration of the air purge is set with the command SetVacuumPurgeDuration. To prevent the module from malfunctioning, please ensure that compressed air is supplied within the specified limits, as detailed in Table 1. You can also set the outputs using the command SetOutputState and read the inputs using the command GetRtIoStatus. default value : There are different settings in the robot controller that can be configured using Set* commands (e.g., SetCartAcc). SDOs are typically used to configure device parameters and access diagnostic information through the object dictionary. In contrast, some settings are persistent and their values are stored on an SD drive. You can also control the force of the purging (i.e., the purge air flow) using the rotating knob marked ADJ, next to the three ports on the MVK01 module. turn configuration parameter : Since the last joint of the robot can rotate multiple revolutions, the turn configuration parameter defines the revolution number. EOM : End-of-motion message, [3004][], sent by the robot whenever it has stopped moving for at least 1 ms, if this option is activated with SetEom. Also, each group of four inputs or four outputs has its own common (i.e., OUT 1\u20134 share COM1, OUT 5\u20138 share COM2, IN 1\u20134 share COM3, and IN 5\u20138 share COM4). You must use the four push-in cable connectors provided (Figure 2) to wire your inputs and outputs. The module essentially consists of a configurable vacuum ejector with a pressure sensor and circuitry for eight digital inputs and 8 digital outputs. pose : The position and orientation of one reference frame with respect to another. Figure 8 shows the main dimensions of the optional suction cup holder. have been converted to the range (\u2212180\u00b0, 180\u00b0]. FCP : Flange Center Point.", "source": "mvk01_module_manual", "chunk_index": 2, "sentence_count": 26, "sentence_indices": [16, 18, 31, 19, 151, 167, 98, 104, 110, 71, 81, 36, 77, 105, 158, 109, 82, 166, 116, 68, 70, 22, 138, 59, 156, 118], "token_count": 698, "char_count": 2864, "chunking_method": "max_min_semantic", "model_used": "BAAI/bge-m3", "hash": "da0231c766446d1d6fc92aafebc142a4"}
{"chunk_id": "mvk01_module_manual_semantic_3", "text": "This vacuum and I/O module could function only when properly installed underneath the base of the MCS500 robot. This module should therefore be used only by technical personnel who are familiar with the MCS500. Then make sure the MCS500 robot is switched off and the arm fully folded and follow these steps:\n\n1. Note that the MVK01 is precision machined and you can use locating pins to constrain the module, and therefore the complete robot-module assembly, in the same way as you would constrain the base of the MCS500. Align the two diagonally opposed centering sleeves (hollow Dowel pins) with the corresponding locating holes at the bottom of the robot base, and then gently slide down the MCS500 until there is no gap between the top of the MVK01 module and the bottom of the robot\u2019s base (Figure 6a). Improper installation could damage the robot and the module itself. MC-UM-MVK01, Revision number: 11.1.43\n\nUntil the base of the MCS500 is fixed with at least two M6 screws, keep the arm fully folded and always hold the robot with one hand to prevent the robot from tipping over. Adjusting the purging force\n\nMC-UM-MVK01, Revision number: 11.1.43\n\nThe MVK01 module will be automatically updated to the same version as the MCS500 robot, either during the update of the robot (if the module is present) or during the first boot of the robot with the MVK01 installed. Figure 6: Installing the MVK01 module underneath the base of the MCS500 R1\n\nThe electric connection between the MCS500 robot and the MVK01 module is made through the seven spring-loaded connectors on top of the MVK01. Carefully align the new assembly with the four M6 threaded holes for mounting the MCS500 and attach the assembly with four M6 screws of length 45 mm or more (Figure 6b). MC-UM-MVK01, Revision number: 11.1.43\n\n(a) Installing the suction cup holder\n\n(b) Suction cup fully installed\n\nFigure 7: Installing the optional suction cup holder (MCS500-TA01)\n\nDo not remove the retaining rings from the spline shaft, as doing so will cause irreversible damage to the ball-screw spline assembly. You can use 2+1 locating pins touching two adjacent sides of the module, as we do in our MUAP02 adaptor plate (which you can use for the module too). Make sure the tubing is sufficiently long for the active joint ranges of the robot, specified by the command SetJointLimits. Then, cut the proper length of pneumatic tubing with 4-mm outer diameter and connect one end to the VAC port on the MVK01 module and the other to the push-in connector of the suction cup holder. You will need a flat 0.4 mm screwdriver for this operation. robot posture : The arrangement of the robot links.", "source": "mvk01_module_manual", "chunk_index": 3, "sentence_count": 16, "sentence_indices": [25, 27, 44, 49, 45, 26, 48, 86, 42, 46, 58, 50, 64, 62, 85, 154], "token_count": 696, "char_count": 2656, "chunking_method": "max_min_semantic", "model_used": "BAAI/bge-m3", "hash": "e979ee3383a06641edac35a07be2292f"}
{"chunk_id": "mvk01_module_manual_semantic_4", "text": "MC-UM-MVK01, Revision number: 11.1.43\n\nThe module, shown in Figure 1, is delivered assembled with two metric push-in pneumatic fittings and a pneumatic muffler. MC-UM-MVK01, Revision number: 11.1.43\n\nFigure 8: Main dimensions of the optional suction cup holder\n\nFinally, insert 6-mm (OD) pneumatic tubing providing the compressed air (7 bar) into the push- in connector of the IN port on the MVK01 module. In addition, the MVK01 comes with the following items in separate plastic bags:\n\n\u2022 an alternative connector for the IN port, for 1/4-in (OD) tubing;\n\n\u2022 4 push-in cable connectors for the 8 inputs and 8 outputs (Figure 2). MC-UM-MVK01, Revision number: 11.1.43\n\nAdjusting the purging force\n\nThe MVK01 is equipped with a purging function for quickly ejecting a part. MC-UM-MVK01, Revision number: 11.1.43\n\nFigure 3: Achievable vacuum at various input pressures\n\nFigure 4 presents the evacuation time at different vacuum levels. Figure 11 and Figure 12 show the electric diagrams that you must follow to connect devices to the inputs and outputs of the MVK01. Otherwise, the MVK01 will be damaged permanently by the high voltage spike at the release of the inductive load..\n\nInsideMVK01 COMOUT 24V(DC) Load \u2212 + BA Outputdiagramforanon-inductiveload COMOUT 24V(DC) \u2212 + BA Outputdiagramforaninductiveload Solenoid,relay,etc. Figure 10: The four connectors on the MVK01 for the 8 digital inputs and 8 digital outputs\n\nEach group of four inputs or outputs has its own independent common terminal. Table 1: Technical specifications for the MPK01 module\n\nCompressed connector Control valve state Operating input pressure 2 bar to 8 bar 7 bar Optimal input pressure port VAC Vacuum connector Maximum vacuum \u221275 kPa Pressure sensor accuracy \u00b11.5 kPa Suction rate (max.) MC-UM-MVK01, Revision number: 11.1.43\n\nResets of the state of the MVK01\n\nIf an activated robot with an MVK01 module becomes deactivated, the MVK01 retains its state (i.e., if it was generating vacuum, it will continue to do so, and all outputs will remain the same). MC-UM-MVK01, Revision number: 11.1.43\n\nIntegration into the MecaPortal\n\nThe MecaPortal web interface automatically recognizes the MVK01 module and displays a CAD model of it underneath the MCS500, as well as a widget specific to the module (Figure 13). Figure 4: Evacuation time at various vacuum levels\n\nFigure 5 shows the principal dimensions of the module. In the widget, you can control the eight digital outputs, see the status of the eight digital inputs, control the suction action, and see the pressure in the vacuum chamber.", "source": "mvk01_module_manual", "chunk_index": 4, "sentence_count": 13, "sentence_indices": [28, 61, 29, 79, 37, 72, 74, 69, 33, 93, 87, 38, 88], "token_count": 699, "char_count": 2565, "chunking_method": "max_min_semantic", "model_used": "BAAI/bge-m3", "hash": "c8cd586352c500ec4c294f734adacc0a"}
{"chunk_id": "mvk01_module_manual_semantic_5", "text": "Air consumption suction Maximum for inputs Minimum for inputs Maximum for outputs Ports\n\n37.5 l/min 23.5 l/min 24 V (DC), 10 mA 3.3 V (DC), 1.1 mA 24 V (DC), 250 mA Three M5 threaded orifices, of which port IN comes with preinstalled push-in pneumatic fitting for 6-mm OD tubes, port VAC comes with preinstalled push-in pneumatic fitting for 4-mm OD tubes, and port EXH comes with a preinstalled pneumatic muffler. Screw for adjusting the force of the air purging (marked ADJ) Black anodized aluminum alloy 572 g 72 dB (A) 62 dB (A) 5\u00b0C to 45\u00b0C [10%, 80%] (non-condensing)\n\nMechanical adjustments Housing Total weight Sound level free Sound level suction Operating temperature Operating humidity\n\nFigure 3 presents the generated vacuum at different input pressures. For example, you can control the vacuum using the commands VacuumGrip/VacuumRelease and configure it using the commands SetVacuumThreshold, SetVacuumPurgeDuration. Screw in the set screw of the suction cup holder and tightened it using a torque of 1.5 Nm\n\n5. During purging, the negative pressure at the suction cup is essentially quickly transformed into positive pressure. Reorient the adaptor while pushing it against the retaining ring, until the set screw on top of the push-in connector aligns with the set screw of the retaining ring. It is extremely important to make sure that the set screw on the suction cup holder is perpendicular to the Weldon flat surface, or else you will damage the spline shaft of the robot in step 4. Screw the desired suction cup into the M5 threaded hole of the suction cup holder (this\n\nstep can be done in advance, Figure 7b). Unscrew (if necessary) the set screw in the adaptor with a 1.5-mm Allen key so that the\n\nscrew is not protruding into the 8-mm hole. Slide the suction cup holder\u2019s 8-mm hole onto the extremity of the robot\u2019s spline shaft\n\nuntil it makes contact with the black retaining ring on the spline shaft. The more you unscrew the knob, the larger the purging force. When the knob is completely screwed in, the force of purging is smallest. Tighten the screws with a torque of 8 Nm. Regularly make sure that the suction cup holder is solidly attached to the spline shaft. MC-UM-MVK01, Revision number: 11.1.43\n\nretaining ring : In the MCS500, this is each of the two circular clamps on both ends of the spline shaft. spline shaft : This is the the groved reciprocating shaft. By default, all inputs and outputs are normally open. distal link : In the MCS500, this is the black-anodized body that holds the spline shaft.", "source": "mvk01_module_manual", "chunk_index": 5, "sentence_count": 18, "sentence_indices": [34, 35, 76, 56, 80, 54, 55, 57, 52, 53, 84, 83, 47, 92, 145, 161, 67, 112], "token_count": 695, "char_count": 2541, "chunking_method": "max_min_semantic", "model_used": "BAAI/bge-m3", "hash": "d35c00b82948f8e4f8d6d87c329d1068"}
{"chunk_id": "mvk01_module_manual_semantic_6", "text": "Next, if you choose to use our optional suction cup holder, install it on the bottom extremity of the robot\u2019s spline shaft or on the top extremity, depending on your application, by following these steps:\n\n1. Therefore, if the robot\u2019s suction cup is holding a part, the part will fall. robot position : A robot position is equivalent to either a joint set or the pose of the TRF relative to the WRF, along with the definitions of both reference frames, and the robot posture and last joint turn configuration parameters. position mode : One of the two control modes, in which the robot\u2019s motion is generated by requesting a target end-effector pose or joint set (see pos-vel-modes of the Programming Manual). joint space : The four-dimensional space defined by the positions of the robot joints. robot is ready for motion : The robot is considered ready to receive motion commands, i.e. error mode : The robot goes into error mode when it encounters an error while executing a command or a hardware problem (see tab:error-messages ). persistent settings : Some settings in the robot controller have default values (e.g., the robot name set by the command SetRobotName), but when changed, their new values are written on an SD drive and persist even if the robot is powered off. monitoring port : The TCP port 10001, over which data is sent periodically from the robot. robot posture configuration : The two-value (\u22121 or 1) parameter c e that normally defines each of the two possible robot postures for a given pose of the robot\u2019s end-effector. workspace : The Cartesian workspace of a robot is the set of all feasible poses of its TRF with respect to its WRF. robot control commands : Commands used to immediately control the robot, (e.g., These commands are executed ActivateRobot, PauseMotion, SetNetworkOptions). velocity mode : One of the two control modes, in which the robot\u2019s motion is generated by requesting a target joint velocity vector or end-effector Cartesian velocity vector (see pos-vel-modes of the Programming Manual). control port : The TCP port 10000, over which commands to the robot and messages from the robot are sent. online mode programming : Programming the robot in online mode involves moving it directly to each desired robot position, typically using jogging controls. motion commands : Commands used to construct the robot trajectory (e.g., Delay, MoveJoints, SetTRF, SetBlending). reach : The maximum distance between the axis of joint 1 and the axis of joint 4.\n\nreal-time data request commands : Commands used to request some real-time data regarding the current status of robot (e.g., GetRtTrf, GetRtCartPos, GetStatusRobot). offline program : A sequence of commands saved in the internal memory of the robot. instantaneous commands : These are commands that are executed immediately, as soon as received by the robot.", "source": "mvk01_module_manual", "chunk_index": 6, "sentence_count": 19, "sentence_indices": [51, 97, 153, 139, 126, 148, 117, 137, 127, 140, 170, 146, 169, 102, 134, 128, 144, 132, 121], "token_count": 700, "char_count": 2855, "chunking_method": "max_min_semantic", "model_used": "BAAI/bge-m3", "hash": "d065fc564ef262db906c14f1d492e0ed"}
{"chunk_id": "mvk01_module_manual_semantic_7", "text": "Attach the tubing with a tie wrap to the rigid cable conduit of the SCARA robot as shown in Figure 9. Figure 11: Electric diagrams for connecting devices at the inputs\n\nO U T 2 O U T 1 O U T 3 O U T 4 C O M 1 O U T 6 O U T 5 O U T 7 O U T 8 C O M 2 I N 2 I N 1 I N 3 I N 4 C O M 3 I N 6 I N 5 I N 7 I N 8 C O M 4\n\nInsideMVK01INCOM 24V(DC) \u2212 + B A Inputdiagram\n\nMC-UM-MVK01, Revision number: 11.1.43\n\nFigure 12: Electric diagrams for connecting non-inductive and inductive loads at the outputs\n\nInductive loads such as relays and solenoids must include a flyback (freewheel) diode in the circuit as depicted in Figure 12 (right). However, additional tools connected to the VAC port may lead to risks of injuries. Not to be confused with Transmission Control Protocol. data request commands : Commands used to request some data regarding the robot (e.g., GetTrf, GetBlending, GetJointVel). However, if an E-Stop or a P-Stop 1 is activated or in the case of various other events that cut power to the robot motors (e.g., changing the operating mode), the vacuum generation is ceased but the state of all eight outputs remains unchanged. Every time the robot is powered up, these settings are initialized to their default values. When power to the robot motors is removed (e.g., during an E-Stop), the vacuum generation is ceased. Note that if the robot is in error or if a safety stop condition is present, it will refuse motion commands, but it will still be considered ready since its motion queue remains initialized and retains the latest received settings (e.q., velocity, acceleration, blending, WRF, TRF, etc.). MC-UM-MVK01, Revision number: 11.1.43\n\ninverse kinematics : The problem of obtaining the robot joint sets that correspond to a desired end-effector pose. The command will be run once all preceding motion commands have been executed. immediately, i.e., are instantaneous. motion queue : The buffer where motion commands that were sent to the robot are stored and executed on a FIFO basis by the robot. singularities : A robot posture where the robot\u2019s end-effector is blocked in some directions even if no joint is at a limit (see singularities of the Programming Manual). PDO ( Process Data Object ): In EtherCAT, a Process Data Object (PDO) is a data structure used for exchanging real-time cyclic data between an EtherCAT master and its slave devices. In the case of motion commands settings, their values are also initialized to their default values every time the robot is deactivated. The origin of the TRF. You can disable this message with the command SetEob.", "source": "mvk01_module_manual", "chunk_index": 7, "sentence_count": 18, "sentence_indices": [63, 73, 90, 164, 103, 94, 107, 96, 150, 123, 130, 147, 131, 160, 135, 108, 163, 115], "token_count": 700, "char_count": 2582, "chunking_method": "max_min_semantic", "model_used": "BAAI/bge-m3", "hash": "ba72e20a0f2d3d36480cfddcf5b5bc30"}
{"chunk_id": "mvk01_module_manual_semantic_8", "text": "Cartesian space : The four-dimensional space defined by the position (x, y, z) and orientation (\u03b3) of the TRF with respect to the WRF. joint position : The joint angle associated with a rotary joint or the position of joint 3.\n\njoint set : The set of all joint positions. proximal link : This is the clear-anodized body between the base and the distal link. queued commands : Commands that are placed in the motion queue, rather than executed immediately. SDO ( Service Data Object ): In EtherCAT, a Service Data Object (SDO) is a data structure used for non-real-time communication between an EtherCAT master and its slave devices. EOB : End-of-block message, [3012][], sent by default every time the robot has stopped moving AND its motion queue is empty. Unlike PDOs, SDOs exchange structured data rather than individual bits or bytes. Equivalent to a joint set in which all joint angles are normalized, i.e. The term offline is often omitted and will eventually be removed altogether. Page: 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 , 24 , 25 , 26 , 27 The origin of the FRF.", "source": "mvk01_module_manual", "chunk_index": 8, "sentence_count": 11, "sentence_indices": [101, 125, 141, 142, 157, 114, 159, 155, 133, 173, 119], "token_count": 337, "char_count": 1141, "chunking_method": "max_min_semantic", "model_used": "BAAI/bge-m3", "hash": "c76a1a089d5d9ae71f5fc7c4ff35766a"}
