[
  {
    "snippet": "from NetFT import Sensor",
    "span": [
      1,
      1
    ],
    "start_byte": 0,
    "end_byte": 24,
    "node_type": "import_from_statement",
    "language": "python",
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "from threading import Thread",
    "span": [
      2,
      2
    ],
    "start_byte": 25,
    "end_byte": 53,
    "node_type": "import_from_statement",
    "language": "python",
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "from queue import Queue",
    "span": [
      3,
      3
    ],
    "start_byte": 54,
    "end_byte": 77,
    "node_type": "import_from_statement",
    "language": "python",
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "from mecademicpy.robot import Robot",
    "span": [
      4,
      4
    ],
    "start_byte": 78,
    "end_byte": 113,
    "node_type": "import_from_statement",
    "language": "python",
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "from time import sleep",
    "span": [
      5,
      5
    ],
    "start_byte": 114,
    "end_byte": 136,
    "node_type": "import_from_statement",
    "language": "python",
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "class MoveThread(Thread):\n    def __init__(self, threadid, name, counter, robot: Robot, queue: Queue):\n        Thread.__init__(self)\n        self.threadid = threadid\n        self.name = name\n        self.counter = counter\n        self.robot = robot\n        self.queue = queue\n        self.vel = 0\n        self.direction = [0, 0, 0, 0, 0, 0]\n\n    def move_settings(self, speed=1, direction=\"z+\"):\n        self.vel = speed\n        if direction.upper() == \"Z+\":\n            self.direction = [0, 0, 1, 0, 0, 0]\n        elif direction.upper() == \"Z-\":\n            self.direction = [0, 0, -1, 0, 0, 0]\n        elif direction.upper() == \"Y+\":\n            self.direction = [0, 1, 0, 0, 0, 0]\n        elif direction.upper() == \"Y-\":\n            self.direction = [0, -1, 0, 0, 0, 0]\n        elif direction.upper() == \"X+\":\n            self.direction = [1, 0, 0, 0, 0, 0]\n        elif direction.upper() == \"X-\":\n            self.direction = [-1, 0, 0, 0, 0, 0]\n        else:\n            raise ValueError('The direction is not valid')\n\n    def connect(self, address='192.168.0.100'):\n        self.robot.Connect(address)\n        self.robot.ActivateRobot()\n        self.robot.Home()\n\n    def run(self):\n        self.robot.ResumeMotion()\n        while(True):\n            if not self.queue.empty():\n                val = self.queue.get()\n                if val == 'stop':\n                    deltamove = [10*x*-1.0 for x in self.direction]\n                    self.robot.MoveLinRelTRF(*deltamove)\n                    self.queue.put('finished')\n                    break\n            else:\n                vel_move = [self.vel*x for x in self.direction]\n                self.robot.MoveLinVelTRF(*vel_move)\n                sleep(0.001)",
    "span": [
      9,
      55
    ],
    "start_byte": 172,
    "end_byte": 1888,
    "node_type": "class_definition",
    "language": "python",
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "name": "MoveThread"
  },
  {
    "snippet": "class _ForceThread(Thread):\n    def __init__(self, threadid, name, counter, sensor: Sensor, queue: Queue):\n        Thread.__init__(self)\n        self.threadid = threadid\n        self.name = name\n        self.counter = counter\n        self.sensor = sensor\n        self.queue = queue",
    "span": [
      58,
      65
    ],
    "start_byte": 1921,
    "end_byte": 2202,
    "node_type": "class_definition",
    "language": "python",
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "name": "_ForceThread"
  },
  {
    "snippet": "class FindSurface(_ForceThread):\n    def __init__(self, threadid, name, counter, sensor, queue, force, direction=2):\n        super().__init__(threadid, name, counter, sensor, queue)\n        self.force = force\n        self.direction = direction\n\n    def run(self):\n        self.sensor.zero()\n        sleep(0.5)\n        while(True):\n            force = self.sensor.getForce()[self.direction]\n            sleep(0.001)\n            if (-1.0*force) > self.force:\n                self.queue.put('stop')\n                break",
    "span": [
      68,
      82
    ],
    "start_byte": 2205,
    "end_byte": 2722,
    "node_type": "class_definition",
    "language": "python",
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "name": "FindSurface"
  },
  {
    "snippet": "class ClickDetection(_ForceThread):\n    def __init__(self, threadid, name, counter, sensor: Sensor, queue: Queue, max_force, force_delta, direction=2):\n        super().__init__(threadid, name, counter, sensor, queue)\n        self.max_force = max_force\n        self.force_delta = force_delta\n        self.direction = direction\n\n    def run(self):\n        self.sensor.zero()\n        sleep(0.50)\n        peak_force = 0\n        while(True):\n            force = (-1)*self.sensor.getForce()[self.direction]\n            if force > self.max_force:\n                print(\"Reached max force\")\n                self.queue.put('stop')\n                break\n            if force>peak_force:\n                peak_force = force\n            force_diff = peak_force-force\n            if force_diff > self.force_delta:\n                print(\"Click detected!\")\n                print(force_diff)\n                self.queue.put('stop')\n                break",
    "span": [
      84,
      108
    ],
    "start_byte": 2724,
    "end_byte": 3659,
    "node_type": "class_definition",
    "language": "python",
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "name": "ClickDetection"
  }
]