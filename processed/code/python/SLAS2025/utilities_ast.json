[
  {
    "snippet": "from copy import deepcopy",
    "span": [
      1,
      1
    ],
    "start_byte": 0,
    "end_byte": 25,
    "node_type": "import_from_statement",
    "language": "python",
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/SLAS2025/src/utilities.py"
  },
  {
    "snippet": "class XbotType():\n    def __init__(self, bot_type: str, id: int):\n        self.bot_type = bot_type\n        self.id = id",
    "span": [
      4,
      7
    ],
    "start_byte": 28,
    "end_byte": 147,
    "node_type": "class_definition",
    "language": "python",
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/SLAS2025/src/utilities.py",
    "name": "XbotType"
  },
  {
    "snippet": "class PlanarStateSLAS():\n    def __init__(self, xbot_list: list[XbotType]):\n        self.state_dict = {}\n        self.set_state(xbot_list)\n\n    def set_state(self, bots: XbotType):\n        self.state_dict[\"pp\"] = bots[0]\n        self.state_dict[\"wp\"] = bots[1]\n        self.state_dict[\"sv\"] = bots[2]\n        self.state_dict[\"sw\"] = bots[3]\n\n    def get_id_positions(self) -> list[int]:\n        return [self.state_dict[\"pp\"].id,\n                self.state_dict[\"wp\"].id,\n                self.state_dict[\"sw\"].id,\n                self.state_dict[\"sv\"].id]\n\n    def swap_pipetting(self):\n        temp_pp = deepcopy(self.state_dict[\"pp\"])\n        temp_wp = deepcopy(self.state_dict[\"wp\"])\n\n        self.state_dict[\"pp\"] = deepcopy(temp_wp)\n        self.state_dict[\"wp\"] = deepcopy(temp_pp)\n\n    def swap_full(self):\n        temp_pp = deepcopy(self.state_dict[\"pp\"])\n        temp_wp = deepcopy(self.state_dict[\"wp\"])\n        temp_sw = deepcopy(self.state_dict[\"sw\"])\n        temp_sv = deepcopy(self.state_dict[\"sv\"])\n\n        if temp_pp.bot_type == \"well\" and temp_wp.bot_type == \"vial\":\n            self.state_dict[\"sw\"] = deepcopy(temp_pp)\n            self.state_dict[\"sv\"] = deepcopy(temp_wp)\n        elif temp_pp.bot_type == \"vial\" and temp_wp.bot_type == \"well\":\n            self.state_dict[\"sv\"] = deepcopy(temp_pp)\n            self.state_dict[\"sw\"] = deepcopy(temp_wp)\n        else:\n            raise ValueError(\"Uh Oh can't swap cause of type issue.\")\n\n        self.state_dict[\"pp\"] = deepcopy(temp_sv)\n        self.state_dict[\"wp\"] = deepcopy(temp_sw)",
    "span": [
      10,
      50
    ],
    "start_byte": 150,
    "end_byte": 1706,
    "node_type": "class_definition",
    "language": "python",
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/SLAS2025/src/utilities.py",
    "name": "PlanarStateSLAS"
  }
]