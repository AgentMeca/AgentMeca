[
  {
    "snippet": "from NetFT import Sensor",
    "span": [
      1,
      1
    ],
    "start_byte": 0,
    "end_byte": 24,
    "node_type": "import_from_statement",
    "chunk_type": "import",
    "language": "python",
    "name": "Sensor",
    "qualified_name": "Sensor",
    "signature": null,
    "docstring": null,
    "chunk_size_bytes": 24,
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "normalized_path": "RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "from threading import Thread",
    "span": [
      2,
      2
    ],
    "start_byte": 25,
    "end_byte": 53,
    "node_type": "import_from_statement",
    "chunk_type": "import",
    "language": "python",
    "name": "Thread",
    "qualified_name": "Thread",
    "signature": null,
    "docstring": null,
    "chunk_size_bytes": 28,
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "normalized_path": "RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "from queue import Queue",
    "span": [
      3,
      3
    ],
    "start_byte": 54,
    "end_byte": 77,
    "node_type": "import_from_statement",
    "chunk_type": "import",
    "language": "python",
    "name": "Queue",
    "qualified_name": "Queue",
    "signature": null,
    "docstring": null,
    "chunk_size_bytes": 23,
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "normalized_path": "RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "from mecademicpy.robot import Robot",
    "span": [
      4,
      4
    ],
    "start_byte": 78,
    "end_byte": 113,
    "node_type": "import_from_statement",
    "chunk_type": "import",
    "language": "python",
    "name": "Robot",
    "qualified_name": "Robot",
    "signature": null,
    "docstring": null,
    "chunk_size_bytes": 35,
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "normalized_path": "RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "from time import sleep",
    "span": [
      5,
      5
    ],
    "start_byte": 114,
    "end_byte": 136,
    "node_type": "import_from_statement",
    "chunk_type": "import",
    "language": "python",
    "name": "sleep",
    "qualified_name": "sleep",
    "signature": null,
    "docstring": null,
    "chunk_size_bytes": 22,
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "normalized_path": "RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "class MoveThread(Thread):\n    def __init__(self, threadid, name, counter, robot: Robot, queue: Queue):\n        Thread.__init__(self)\n        self.threadid = threadid\n        self.name = name\n        self.counter = counter\n        self.robot = robot\n        self.queue = queue\n        self.vel = 0\n        self.direction = [0, 0, 0, 0, 0, 0]\n",
    "span": [
      9,
      55
    ],
    "start_byte": 172,
    "end_byte": 1888,
    "node_type": "class_definition",
    "chunk_type": "class",
    "language": "python",
    "name": "MoveThread",
    "qualified_name": "MoveThread",
    "docstring": null,
    "chunk_size_bytes": 341,
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "normalized_path": "RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "def __init__(self, threadid, name, counter, robot: Robot, queue: Queue):\n        Thread.__init__(self)\n        self.threadid = threadid\n        self.name = name\n        self.counter = counter\n        self.robot = robot\n        self.queue = queue\n        self.vel = 0\n        self.direction = [0, 0, 0, 0, 0, 0]",
    "span": [
      10,
      18
    ],
    "start_byte": 202,
    "end_byte": 512,
    "node_type": "function_definition",
    "chunk_type": "method",
    "language": "python",
    "name": "__init__",
    "signature": "__init__(self, threadid, name, counter, robot: Robot, queue: Queue)",
    "parent_class": "MoveThread",
    "qualified_name": "MoveThread.__init__",
    "docstring": null,
    "chunk_size_bytes": 310,
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "normalized_path": "RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "def move_settings(self, speed=1, direction=\"z+\"):\n        self.vel = speed\n        if direction.upper() == \"Z+\":\n            self.direction = [0, 0, 1, 0, 0, 0]\n        elif direction.upper() == \"Z-\":\n            self.direction = [0, 0, -1, 0, 0, 0]\n        elif direction.upper() == \"Y+\":\n            self.direction = [0, 1, 0, 0, 0, 0]\n        elif direction.upper() == \"Y-\":\n            self.direction = [0, -1, 0, 0, 0, 0]\n        elif direction.upper() == \"X+\":\n            self.direction = [1, 0, 0, 0, 0, 0]\n        elif direction.upper() == \"X-\":\n            self.direction = [-1, 0, 0, 0, 0, 0]\n        else:\n            raise ValueError('The direction is not valid')",
    "span": [
      20,
      35
    ],
    "start_byte": 518,
    "end_byte": 1194,
    "node_type": "function_definition",
    "chunk_type": "method",
    "language": "python",
    "name": "move_settings",
    "signature": "move_settings(self, speed=1, direction=\"z+\")",
    "parent_class": "MoveThread",
    "qualified_name": "MoveThread.move_settings",
    "docstring": null,
    "chunk_size_bytes": 676,
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "normalized_path": "RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "def connect(self, address='192.168.0.100'):\n        self.robot.Connect(address)\n        self.robot.ActivateRobot()\n        self.robot.Home()",
    "span": [
      37,
      40
    ],
    "start_byte": 1200,
    "end_byte": 1340,
    "node_type": "function_definition",
    "chunk_type": "method",
    "language": "python",
    "name": "connect",
    "signature": "connect(self, address='192.168.0.100')",
    "parent_class": "MoveThread",
    "qualified_name": "MoveThread.connect",
    "docstring": null,
    "chunk_size_bytes": 140,
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "normalized_path": "RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "def run(self):\n        self.robot.ResumeMotion()\n        while(True):\n            if not self.queue.empty():\n                val = self.queue.get()\n                if val == 'stop':\n                    deltamove = [10*x*-1.0 for x in self.direction]\n                    self.robot.MoveLinRelTRF(*deltamove)\n                    self.queue.put('finished')\n                    break\n            else:\n                vel_move = [self.vel*x for x in self.direction]\n                self.robot.MoveLinVelTRF(*vel_move)\n                sleep(0.001)",
    "span": [
      42,
      55
    ],
    "start_byte": 1346,
    "end_byte": 1888,
    "node_type": "function_definition",
    "chunk_type": "method",
    "language": "python",
    "name": "run",
    "signature": "run(self)",
    "parent_class": "MoveThread",
    "qualified_name": "MoveThread.run",
    "docstring": null,
    "chunk_size_bytes": 542,
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "normalized_path": "RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "class _ForceThread(Thread):\n    def __init__(self, threadid, name, counter, sensor: Sensor, queue: Queue):\n        Thread.__init__(self)\n        self.threadid = threadid\n        self.name = name\n        self.counter = counter\n        self.sensor = sensor\n        self.queue = queue",
    "span": [
      58,
      65
    ],
    "start_byte": 1921,
    "end_byte": 2202,
    "node_type": "class_definition",
    "chunk_type": "class",
    "language": "python",
    "name": "_ForceThread",
    "qualified_name": "_ForceThread",
    "docstring": null,
    "chunk_size_bytes": 281,
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "normalized_path": "RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "def __init__(self, threadid, name, counter, sensor: Sensor, queue: Queue):\n        Thread.__init__(self)\n        self.threadid = threadid\n        self.name = name\n        self.counter = counter\n        self.sensor = sensor\n        self.queue = queue",
    "span": [
      59,
      65
    ],
    "start_byte": 1953,
    "end_byte": 2202,
    "node_type": "function_definition",
    "chunk_type": "method",
    "language": "python",
    "name": "__init__",
    "signature": "__init__(self, threadid, name, counter, sensor: Sensor, queue: Queue)",
    "parent_class": "_ForceThread",
    "qualified_name": "_ForceThread.__init__",
    "docstring": null,
    "chunk_size_bytes": 249,
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "normalized_path": "RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "class FindSurface(_ForceThread):\n    def __init__(self, threadid, name, counter, sensor, queue, force, direction=2):\n        super().__init__(threadid, name, counter, sensor, queue)\n        self.force = force\n        self.direction = direction\n\n    def run(self):\n        self.sensor.zero()\n        sleep(0.5)\n        while(True):\n            force = self.sensor.getForce()[self.direction]",
    "span": [
      68,
      82
    ],
    "start_byte": 2205,
    "end_byte": 2722,
    "node_type": "class_definition",
    "chunk_type": "class",
    "language": "python",
    "name": "FindSurface",
    "qualified_name": "FindSurface",
    "docstring": null,
    "chunk_size_bytes": 389,
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "normalized_path": "RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "def __init__(self, threadid, name, counter, sensor, queue, force, direction=2):\n        super().__init__(threadid, name, counter, sensor, queue)\n        self.force = force\n        self.direction = direction",
    "span": [
      69,
      72
    ],
    "start_byte": 2242,
    "end_byte": 2448,
    "node_type": "function_definition",
    "chunk_type": "method",
    "language": "python",
    "name": "__init__",
    "signature": "__init__(self, threadid, name, counter, sensor, queue, force, direction=2)",
    "parent_class": "FindSurface",
    "qualified_name": "FindSurface.__init__",
    "docstring": null,
    "chunk_size_bytes": 206,
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "normalized_path": "RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "def run(self):\n        self.sensor.zero()\n        sleep(0.5)\n        while(True):\n            force = self.sensor.getForce()[self.direction]\n            sleep(0.001)\n            if (-1.0*force) > self.force:\n                self.queue.put('stop')\n                break",
    "span": [
      74,
      82
    ],
    "start_byte": 2454,
    "end_byte": 2722,
    "node_type": "function_definition",
    "chunk_type": "method",
    "language": "python",
    "name": "run",
    "signature": "run(self)",
    "parent_class": "FindSurface",
    "qualified_name": "FindSurface.run",
    "docstring": null,
    "chunk_size_bytes": 268,
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "normalized_path": "RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "class ClickDetection(_ForceThread):\n    def __init__(self, threadid, name, counter, sensor: Sensor, queue: Queue, max_force, force_delta, direction=2):\n        super().__init__(threadid, name, counter, sensor, queue)\n        self.max_force = max_force\n        self.force_delta = force_delta\n        self.direction = direction\n\n    def run(self):\n        self.sensor.zero()\n        sleep(0.50)\n        peak_force = 0",
    "span": [
      84,
      108
    ],
    "start_byte": 2724,
    "end_byte": 3659,
    "node_type": "class_definition",
    "chunk_type": "class",
    "language": "python",
    "name": "ClickDetection",
    "qualified_name": "ClickDetection",
    "docstring": null,
    "chunk_size_bytes": 415,
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "normalized_path": "RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "def __init__(self, threadid, name, counter, sensor: Sensor, queue: Queue, max_force, force_delta, direction=2):\n        super().__init__(threadid, name, counter, sensor, queue)\n        self.max_force = max_force\n        self.force_delta = force_delta\n        self.direction = direction",
    "span": [
      85,
      89
    ],
    "start_byte": 2764,
    "end_byte": 3049,
    "node_type": "function_definition",
    "chunk_type": "method",
    "language": "python",
    "name": "__init__",
    "signature": "__init__(self, threadid, name, counter, sensor: Sensor, queue: Queue, max_force, force_delta, direction=2)",
    "parent_class": "ClickDetection",
    "qualified_name": "ClickDetection.__init__",
    "docstring": null,
    "chunk_size_bytes": 285,
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "normalized_path": "RAMInsertion/forceFunctions.py"
  },
  {
    "snippet": "def run(self):\n        self.sensor.zero()\n        sleep(0.50)\n        peak_force = 0\n        while(True):\n            force = (-1)*self.sensor.getForce()[self.direction]\n            if force > self.max_force:\n                print(\"Reached max force\")\n                self.queue.put('stop')\n                break\n            if force>peak_force:\n                peak_force = force\n            force_diff = peak_force-force\n            if force_diff > self.force_delta:\n                print(\"Click detected!\")\n                print(force_diff)\n                self.queue.put('stop')\n                break",
    "span": [
      91,
      108
    ],
    "start_byte": 3055,
    "end_byte": 3659,
    "node_type": "function_definition",
    "chunk_type": "method",
    "language": "python",
    "name": "run",
    "signature": "run(self)",
    "parent_class": "ClickDetection",
    "qualified_name": "ClickDetection.run",
    "docstring": null,
    "chunk_size_bytes": 604,
    "file_path": "/mnt/d/OneDrive/OneDrive - purdue.edu/Documents/Work/Mecademic/AgentMeca/repos/RAMInsertion/forceFunctions.py",
    "normalized_path": "RAMInsertion/forceFunctions.py"
  }
]